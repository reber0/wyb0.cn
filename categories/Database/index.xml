<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Database on Reber's Blog</title><link>https://wyb0.cn/categories/Database/</link><description>Recent content in Database on Reber's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Fri, 23 Aug 2019 16:27:12 +0000</lastBuildDate><atom:link href="https://wyb0.cn/categories/Database/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL 简单使用</title><link>https://wyb0.cn/posts/2019/postgresql-basis-use/</link><pubDate>Fri, 23 Aug 2019 16:27:12 +0000</pubDate><guid>https://wyb0.cn/posts/2019/postgresql-basis-use/</guid><description>&lt;h3 id="0x00-安装">0x00 安装&lt;/h3>
&lt;pre tabindex="0">&lt;code>➜ brew install postgresql
➜ echo &amp;#39;export PATH=&amp;#34;/usr/local/Cellar/postgresql/11.4/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc
➜ source ~/.zshrc
-- 初始化数据库
➜ initdb /usr/local/var/postgres
➜ pg_ctl -D /usr/local/var/postgres -l /usr/local/var/log/postgres.log start
&lt;/code>&lt;/pre>&lt;h3 id="0x01-简单操作">0x01 简单操作&lt;/h3>
&lt;ul>
&lt;li>常用操作命令&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>reber=# \password #设置当前登录用户的密码
reber=# \password [user_name] #设置其他用户的密码
reber=# \l #列出所有数据库
reber=# \du #列出所有用户
reber=# \c [database_name] #连接数据库
reber=# \d #列出当前数据库的所有表
reber=# \d [table_name] #列出表结构
reber=# \conninfo #列出当前数据库和连接的信息
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>连接数据库&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>➜ psql postgres &lt;span style="color:#75715e">#初始化数据库后会生成默认的数据库 postgres&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>psql &lt;span style="color:#f92672">(&lt;/span>11.4&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type &lt;span style="color:#e6db74">&amp;#34;help&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> help.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \l #查看当前数据库情况&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List of databases
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name | Owner | Encoding | Collate | Ctype | Access privileges
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------+-------+----------+-------------+-------------+-------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> postgres | reber | UTF8 | zh_CN.UTF-8 | zh_CN.UTF-8 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template0 | reber | UTF8 | zh_CN.UTF-8 | zh_CN.UTF-8 | &lt;span style="color:#f92672">=&lt;/span>c/reber +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | | | | | reber&lt;span style="color:#f92672">=&lt;/span>CTc/reber
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template1 | reber | UTF8 | zh_CN.UTF-8 | zh_CN.UTF-8 | &lt;span style="color:#f92672">=&lt;/span>c/reber +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | | | | | reber&lt;span style="color:#f92672">=&lt;/span>CTc/reber
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span> rows&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \du #查看当前用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List of roles
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Role name | Attributes | Member of
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------+------------------------------------------------------------+-----------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reber | Superuser, Create role, Create DB, Replication, Bypass RLS | &lt;span style="color:#f92672">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>You are now connected to database &lt;span style="color:#e6db74">&amp;#34;postgres&amp;#34;&lt;/span> as user &lt;span style="color:#e6db74">&amp;#34;reber&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter new password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter it again:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres-# &lt;span style="color:#ae81ff">\q&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>修改配置文件改端口&lt;/li>
&lt;/ul>
&lt;p>vim /usr/local/var/postgres/postgresql.conf&lt;/p></description></item><item><title>Oracle 数据库简单使用</title><link>https://wyb0.cn/posts/2018/oracle-database/</link><pubDate>Tue, 25 Dec 2018 23:34:56 +0000</pubDate><guid>https://wyb0.cn/posts/2018/oracle-database/</guid><description>&lt;h3 id="0x00-关于oracle">0x00 关于Oracle&lt;/h3>
&lt;ul>
&lt;li>完整的Oracle数据库通常由两部分组成：Oracle数据库和数据库实例。&lt;/li>
&lt;li>数据库是一系列物理文件的集合（数据文件，控制文件，联机日志，参数文件等）&lt;/li>
&lt;li>Oracle数据库实例则是一组Oracle后台进程/线程以及在服务器分配的共享内存区&lt;/li>
&lt;li>关于部分视图
&lt;ul>
&lt;li>&lt;code>DBA/ALL/USER/V_$/GV_$/SESSION/INDEX&lt;/code>开头的绝大部分都是视图&lt;/li>
&lt;li>DBA_TABLES意为DBA拥有的或可以访问的所有的关系表。&lt;/li>
&lt;li>ALL_TABLES意为某一用户拥有的或有权限访问的所有的关系表。&lt;/li>
&lt;li>USER_TABLES意为某一用户所拥有的所有的关系表。&lt;/li>
&lt;li>当某一用户本身就为数据库DBA时，DBA_TABLES与ALL_TABLES等价。&lt;/li>
&lt;li>&lt;code>DBA_TABLES &amp;gt;= ALL_TABLES &amp;gt;= USER_TABLES&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-关于实例">0x01 关于实例&lt;/h3>
&lt;ul>
&lt;li>在启动Oracle数据库服务器时，实际上是在服务器的内存中创建一个Oracle实例（即在服务器内存中分配共享内存并创建相关的后台内存）&lt;/li>
&lt;li>我们访问Oracle都是访问一个实例，通过Oracle数据库实例来访问和控制磁盘中的数据文件&lt;/li>
&lt;li>Oracle实例如果关联了数据库文件，就是可以访问的，如果没有，就会得到实例不可用的错误&lt;/li>
&lt;li>实例名指的是用于响应某个数据库操作的数据库管理系统的名称，它同时也叫SID，连接数据库时就会用到这个SID，如：jdbc:oracle:thin:@localhost:1521:orcl（orcl就为数据库实例名）&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-关于表空间可以理解为mysql中的数据库">0x02 关于表空间(可以理解为mysql中的数据库)&lt;/h3>
&lt;ul>
&lt;li>Oracle数据库是通过表空间来存储物理表的，一个数据库实例可以有N个表空间，一个表空间下可以有N张表。&lt;/li>
&lt;li>用户和表空间是多对多的关系，但是一般创建用户时会指定一个默认表空间。&lt;/li>
&lt;li>表空间是数据库中最大的逻辑单位，一个表空间可以包含多个数据文件，而一个数据文件只能隶属一个表空间。&lt;/li>
&lt;/ul>
&lt;h3 id="0x03-搭建oracle环境">0x03 搭建Oracle环境&lt;/h3>
&lt;p>使用docker拉取Oracle数据库并且运行&lt;/p></description></item><item><title>SQLServer 存储过程</title><link>https://wyb0.cn/posts/2017/sqlserver-stored-procedure/</link><pubDate>Tue, 30 May 2017 13:16:18 +0000</pubDate><guid>https://wyb0.cn/posts/2017/sqlserver-stored-procedure/</guid><description>&lt;h3 id="0x00-数据表结构">0x00 数据表结构&lt;/h3>
&lt;pre tabindex="0">&lt;code>CREATE DATABASE student;

CREATE TABLE info
(
 id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
 name VARCHAR(20) NOT NULL DEFAULT &amp;#39;xiaoming&amp;#39;,
 sex INT NOT NULL DEFAULT 1,
 age INT NOT NULL DEFAULT 0,
 hight INT NOT NULL DEFAULT 0
)

INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaohong&amp;#39;,0,23,165);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaogang&amp;#39;,1,24,175);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaoliu&amp;#39;,1,21,160);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaozhang&amp;#39;,1,19,165);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaoli&amp;#39;,1,23,170);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaohua&amp;#39;,0,23,160);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaoming&amp;#39;,1,21,165);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaowang&amp;#39;,1,23,166);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaojuan&amp;#39;,0,21,159);
&lt;/code>&lt;/pre>&lt;h3 id="0x01-存储过程">0x01 存储过程&lt;/h3>
&lt;pre tabindex="0">&lt;code>--如果存在名为get_student_msg(相当于函数)的存储过程则删除
IF EXISTS (SELECT name FROM sysobjects WHERE name=&amp;#39;get_student_msg&amp;#39; AND type=&amp;#39;p&amp;#39;)
 DROP PROCEDURE get_student_msg

CREATE PROCEDURE get_student_msg --创建存储过程
 @name VARCHAR(20) --声明全局变量
AS
 BEGIN
 SELECT * from info
 WHERE name=@name
 END
GO

--创建好存储过程后在其他地方直接使用函数并传参就行了
EXEC get_student_msg &amp;#39;xiaoli&amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x02-使用游标的存储过程">0x02 使用游标的存储过程&lt;/h3>
&lt;pre tabindex="0">&lt;code>-- 使用DECLARE声明局部变量，一般在函数和存储过程中使用
DECLARE @name VARCHAR(20)
DECLARE @sex INT
DECLARE @age INT
DECLARE @hight INT

DECLARE stu_cursor CURSOR FOR --定义游标，后面跟sql语句
SELECT name,sex,age,hight --使用游标的对象(根据需要写select语句)
FROM dbo.info
WHERE age IN (23,24)

OPEN stu_cursor --打开游标

--将游标向下移1行，并把下一行作为当前行(递归)
--游标刚打开时可以理解为指向第一行之前，所以这里就是把游标指向第一行
--然后获取游标指向行的数据
FETCH NEXT FROM stu_cursor INTO @name,@sex,@age,@hight

WHILE (@@FETCH_STATUS = 0) --判断是否成功获取数据
 BEGIN
 PRINT &amp;#39;名字: &amp;#39;+@name
 PRINT &amp;#39;性别: &amp;#39;+STR(@sex)
 PRINT &amp;#39;年龄: &amp;#39;+STR(@age)
 PRINT &amp;#39;身高: &amp;#39;+STR(@hight)
 PRINT &amp;#39;&amp;#39;

 --游标指向下一行(第二行)，然后取出这一行的数据
 FETCH NEXT FROM stu_cursor INTO @name,@sex,@age,@hight
 END

CLOSE stu_cursor --关闭游标
DEALLOCATE stu_cursor --删除游标
&lt;/code>&lt;/pre></description></item><item><title>SQLServer 的基本使用</title><link>https://wyb0.cn/posts/2017/sqlserver-basis-use/</link><pubDate>Tue, 30 May 2017 12:53:41 +0000</pubDate><guid>https://wyb0.cn/posts/2017/sqlserver-basis-use/</guid><description>&lt;h3 id="0x00-数据库">0x00 数据库&lt;/h3>
&lt;pre tabindex="0">&lt;code>-- 创建数据库
CREATE DATABASE student;

-- 选择数据库
USE student;

-- 查看当前数据库
SELECT DB_NAME();

-- 查看当前数据库
SELECT DB_NAME();

-- 查看数据库版本
SELECT @@version;
&lt;/code>&lt;/pre>&lt;h3 id="0x01-数据表">0x01 数据表&lt;/h3>
&lt;pre tabindex="0">&lt;code>-- 创建数据库表
CREATE TABLE info
(
 id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
 name VARCHAR(20) NOT NULL DEFAULT &amp;#39;xiaoming&amp;#39;,
 sex INT NOT NULL DEFAULT 1
)

-- 查看表结构
EXEC sp_help &amp;#39;info&amp;#39;;

-- 更新表结构
ALTER TABLE info add age int; -- 添加一列
ALTER TABLE info DROP COLUMN age; -- 删除一列

-- 插入数据
INSERT INTO info(name,sex)
VALUES(&amp;#39;xiaohong&amp;#39;,0);

-- 查看数据
SELECT * FROM dbo.info;

-- 更新数据
UPDATE info
SET name=&amp;#39;aaa&amp;#39;,sex=1
WHERE id=1;

-- 删除数据
DELETE info
WHERE id=1;

-- 删除表
DROP TABLE info;
&lt;/code>&lt;/pre></description></item><item><title>MongoDB 的基本使用</title><link>https://wyb0.cn/posts/2017/mongodb-basis-use/</link><pubDate>Thu, 25 May 2017 15:33:12 +0000</pubDate><guid>https://wyb0.cn/posts/2017/mongodb-basis-use/</guid><description>&lt;h3 id="0x00-角色和权限">0x00 角色和权限&lt;/h3>
&lt;p>Mongo的授权采用了角色授权的方法，每个用户都有一组权限，Monog内建角色权限如下：&lt;/p>
&lt;ul>
&lt;li>数据库用户角色
&lt;ul>
&lt;li>read：允许用户读取指定数据库&lt;/li>
&lt;li>readWrite：允许用户读写指定数据库&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数据库管理角色
&lt;ul>
&lt;li>dbOwner：包含readWrite、dbAdmin、userAdmin&lt;/li>
&lt;li>dbAdmin：允许用户在指定数据库中对集合、文档等操作&lt;/li>
&lt;li>userAdmin：允许用户向system.users集合写入，可以在指定数据库里创建、删除和管理用户&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>集群管理角色
&lt;ul>
&lt;li>clusterAdmin：只在admin数据库中可用，包含clusterManager、clusterMonitor、hostManager&lt;/li>
&lt;li>clusterManager：&lt;/li>
&lt;li>clusterMonitor：&lt;/li>
&lt;li>hostManager&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>备份和恢复角色
&lt;ul>
&lt;li>backup&lt;/li>
&lt;li>restore&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>所有数据库角色
&lt;ul>
&lt;li>readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限&lt;/li>
&lt;li>readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限&lt;/li>
&lt;li>dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限&lt;/li>
&lt;li>userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>超级用户角色
&lt;ul>
&lt;li>root：只在admin数据库中可用。超级账号，超级权限&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>内部角色
&lt;ul>
&lt;li>__system&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-创建用户">0x01 创建用户&lt;/h3>
&lt;pre tabindex="0">&lt;code>#创建管理员用户
&amp;gt; use admin
switched to db admin
&amp;gt; db.createUser({
... user:&amp;#34;root&amp;#34;,
... pwd:&amp;#34;root123&amp;#34;,
... roles:[{&amp;#34;role&amp;#34;:&amp;#34;root&amp;#34;,&amp;#34;db&amp;#34;:&amp;#34;admin&amp;#34;}]
... })
Successfully added user: {
 &amp;#34;user&amp;#34; : &amp;#34;root&amp;#34;,
 &amp;#34;roles&amp;#34; : [
 {
 &amp;#34;role&amp;#34; : &amp;#34;root&amp;#34;,
 &amp;#34;db&amp;#34; : &amp;#34;admin&amp;#34;
 }
 ]
}
&amp;gt; db.auth(&amp;#34;root&amp;#34;,&amp;#34;root123&amp;#34;)
1

#这个例子创建了一个名为 root 的用户管理员。创建完了这个用户之后，我们应该马上以该用户的身份登录：
#db.auth() 方法返回 1 表示登录成功。接下来我们为指定的数据库创建访问所需的账号。

#创建数据库用户
&amp;gt; use test
switched to db test
&amp;gt; db.createUser({
... user:&amp;#34;test&amp;#34;,
... pwd:&amp;#34;test123&amp;#34;,
... roles:[
... {&amp;#34;role&amp;#34;:&amp;#34;readWrite&amp;#34;,&amp;#34;db&amp;#34;:&amp;#34;test&amp;#34;},
... {&amp;#34;role&amp;#34;:&amp;#34;dbOwner&amp;#34;,&amp;#34;db&amp;#34;:&amp;#34;test&amp;#34;}]
... })
Successfully added user: {
 &amp;#34;user&amp;#34; : &amp;#34;test&amp;#34;,
 &amp;#34;roles&amp;#34; : [
 {
 &amp;#34;role&amp;#34; : &amp;#34;readWrite&amp;#34;,
 &amp;#34;db&amp;#34; : &amp;#34;test&amp;#34;
 },
 {
 &amp;#34;role&amp;#34; : &amp;#34;dbOwner&amp;#34;,
 &amp;#34;db&amp;#34; : &amp;#34;test&amp;#34;
 }
 ]
}
&amp;gt; db.auth(&amp;#34;test&amp;#34;,&amp;#34;test123&amp;#34;)
1
&amp;gt; exit
bye
&lt;/code>&lt;/pre>&lt;h3 id="0x02-配置">0x02 配置&lt;/h3>
&lt;p>MongoDb版本：version v3.4.4&lt;/p></description></item><item><title>Python 封装 MySQL 类</title><link>https://wyb0.cn/posts/2016/python-package-mysql-function/</link><pubDate>Mon, 12 Sep 2016 22:54:28 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-package-mysql-function/</guid><description>&lt;h3 id="0x00-安装">0x00 安装&lt;/h3>
&lt;p>有两种，一个是MySQLdb，一个是pymysql&lt;/p>
&lt;ul>
&lt;li>下载&lt;a href="https://pypi.python.org/pypi/MySQL-python/1.2.5">MySQL-python&lt;/a>然后安装&lt;/li>
&lt;li>sudo pip install pymysql(推荐，因为py3已经不支持MySQLdb了)&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-简单表设计如下">0x01 简单表设计如下&lt;/h3>
&lt;pre tabindex="0">&lt;code>insert into mysql.user(Host,User,Password) values(&amp;#39;%&amp;#39;,&amp;#39;python&amp;#39;,&amp;#39;123456&amp;#39;);

drop database if exists python;
create database python;
use python;

drop table if exists msg;
create table msg(
 id int not null auto_increment primary key,
 ip varchar(40) not null default &amp;#39;127.0.0.1&amp;#39; comment &amp;#39;ip地址&amp;#39;,
 domain varchar(100) not null default &amp;#39;www.xx.com&amp;#39; comment &amp;#39;域名&amp;#39;
);

grant all privileges on python.* to &amp;#39;python&amp;#39;@&amp;#39;%&amp;#39; identified by &amp;#39;123456&amp;#39;;
flush privileges;
&lt;/code>&lt;/pre>&lt;h3 id="0x02-mysqldb封装代码">0x02 MySQLdb封装代码&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> MySQLdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">mysql&lt;/span>(object):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for mysql&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, dbconfig):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>host &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;host&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>port &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;port&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>user &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;user&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>passwd &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;passwd&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>dbname &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;dbname&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>charset &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;charset&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_connect()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>cursor()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">_connect&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn &lt;span style="color:#f92672">=&lt;/span> MySQLdb&lt;span style="color:#f92672">.&lt;/span>connect(host&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>host,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>port,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>user,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> passwd&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>passwd,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>dbname,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> charset&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>charset)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> MySQLdb&lt;span style="color:#f92672">.&lt;/span>Error,e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">query&lt;/span>(self, sql):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> MySQLdb&lt;span style="color:#f92672">.&lt;/span>Error, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">select&lt;/span>(self, table, column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>, condition&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> condition &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39; where &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> condition &lt;span style="color:#66d9ef">if&lt;/span> condition &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> condition:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;select &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> from &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (column,table,condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;select &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> from &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (column,table)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>query(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>fetchall()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">insert&lt;/span>(self, table, tdict):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> column &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> key &lt;span style="color:#f92672">in&lt;/span> tdict:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> column &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;,&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> tdict[key]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> column &lt;span style="color:#f92672">=&lt;/span> column[&lt;span style="color:#ae81ff">1&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> value[&lt;span style="color:#ae81ff">2&lt;/span>:] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;insert into &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">(&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">) values(&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">)&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (table,column,value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>commit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>rollback()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>lastrowid &lt;span style="color:#75715e">#返回最后的id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">update&lt;/span>(self, table, tdict, condition&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> condition:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;must have id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> condition &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;where &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> condition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> key &lt;span style="color:#f92672">in&lt;/span> tdict:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;,&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">=&amp;#39;&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (key,tdict[key])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> value[&lt;span style="color:#ae81ff">1&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;update &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> set &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (table,value,condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>rollback()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>affected_num() &lt;span style="color:#75715e">#返回受影响行数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">delete&lt;/span>(self, table, condition&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> condition &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;where &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> condition &lt;span style="color:#66d9ef">if&lt;/span> condition &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;delete from &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (table,condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>commit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>rollback()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>affected_num() &lt;span style="color:#75715e">#返回受影响行数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">rollback&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>rollback()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">affected_num&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>rowcount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __del__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">close&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>__del__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dbconfig &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;host&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;192.168.188.134&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;port&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">3306&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;user&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;python&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;passwd&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;dbname&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;python&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;charset&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;utf8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db &lt;span style="color:#f92672">=&lt;/span> mysql(dbconfig)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.select(&amp;#39;msg&amp;#39;,&amp;#39;id,ip,domain&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.select(&amp;#39;msg&amp;#39;,&amp;#39;id,ip,domain&amp;#39;,&amp;#39;id&amp;gt;2&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.affected_num()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tdict = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;ip&amp;#39;:&amp;#39;111.13.100.91&amp;#39;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;domain&amp;#39;:&amp;#39;baidu.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.insert(&amp;#39;msg&amp;#39;, tdict)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tdict = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;ip&amp;#39;:&amp;#39;111.13.100.91&amp;#39;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;domain&amp;#39;:&amp;#39;aaaaa.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.update(&amp;#39;msg&amp;#39;, tdict, &amp;#39;id=5&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.delete(&amp;#39;msg&amp;#39;, &amp;#39;id&amp;gt;3&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x03-pymysql封装代码">0x03 pymysql封装代码&lt;/h3>
&lt;pre tabindex="0">&lt;code>#!/usr/bin/env python
# -*- coding: utf-8 -*-

import urlparse
import pymysql
import contextlib

class MySQLX(object):
 def __init__(self, mysql_uri):
 super(MySQLX, self).__init__()
 self.mysql_uri = mysql_uri
 self.mysql_info = self.mysql_parse_uri()

 def mysql_parse_uri(self):
 p = urlparse.urlparse(self.mysql_uri)
 host = p.hostname
 port = p.port
 user = p.username
 password = p.password
 dbname = p.path.strip(&amp;#39;/&amp;#39;)
 charset = urlparse.parse_qs(p.query)[&amp;#39;charset&amp;#39;][0]

 return {
 &amp;#39;host&amp;#39;: host,
 &amp;#39;port&amp;#39;: port,
 &amp;#39;user&amp;#39;: user,
 &amp;#39;password&amp;#39;: password,
 &amp;#39;db&amp;#39;: dbname,
 &amp;#39;charset&amp;#39;: charset,
 &amp;#39;cursorclass&amp;#39;: pymysql.cursors.DictCursor,
 }

 @contextlib.contextmanager
 def init(self):
 dbconn = pymysql.connect(**self.mysql_info)
 cursor = dbconn.cursor()
 # dbconn = pymysql.connect(
 # host=mysql_info.get(&amp;#39;host&amp;#39;),
 # user=mysql_info.get(&amp;#39;user&amp;#39;),
 # password=mysql_info.get(&amp;#39;password&amp;#39;),
 # db=mysql_info.get(&amp;#39;db&amp;#39;),
 # charset=mysql_info.get(&amp;#39;charset&amp;#39;)
 # )
 # cursor = dbconn.cursor(cursor=pymysql.cursors.DictCursor)

 try:
 yield cursor #这里就是with返回的
 finally:
 dbconn.commit()
 cursor.close()
 dbconn.close()

 def query(self, sql, arg=&amp;#39;&amp;#39;):
 try:
 with self.init() as cursor:
 if arg:

 cursor.execute(sql,arg) #返回受影响行数
 else:
 cursor.execute(sql)
 result = cursor.fetchall() #返回数据格式是[{},{}]
 # result = cursor.fetchone() #返回数据格式是{}
 return result
 except Exception as e:
 print sql,str(e)

if __name__ == &amp;#39;__main__&amp;#39;:
 mysql_uri = &amp;#34;mysql+pymysql://root:root@localhost:3306/rtest?charset=utf8mb4&amp;#34;
 sqlconn = MySQLX(mysql_uri)
 sql = &amp;#34;select * from `msg` where id=%s&amp;#34;
 result = sqlconn.query(sql,&amp;#34;2&amp;#34;)
 print result
&lt;/code>&lt;/pre></description></item><item><title>一次存储型 XSS 利用实例</title><link>https://wyb0.cn/posts/2016/redis-bisis-use/</link><pubDate>Wed, 03 Aug 2016 11:02:20 +0000</pubDate><guid>https://wyb0.cn/posts/2016/redis-bisis-use/</guid><description>&lt;h3 id="0x00-关于redis">0x00 关于Redis&lt;/h3>
&lt;pre tabindex="0">&lt;code>Redis和MySQL这种关系型数据库不一样，它是非关系型数据库，是日志型、Key-Value数据库，
实现了master-slave(主从)同步,数据都是缓存在内存中的,所以可高速读写,但存储成本较高,
不适合做海量数据存储。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-安装">0x01 安装&lt;/h3>
&lt;ul>
&lt;li>Linux下安装Redis
可在http://download.redis.io/releases/ 下载&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ cd /opt
$ wget http://download.redis.io/releases/redis-3.2.3.tar.gz
$ tar -zxvf redis-3.2.3.tar.gz
$ cd redis-3.2.3
$ make
$ make install
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Windows下安装Redis
下载：&lt;a href="https://github.com/MSOpenTech/redis/releases" target="_blank">点此下载&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>安装后添加环境变量&lt;/p></description></item><item><title>MySQL的information_schema库</title><link>https://wyb0.cn/posts/2016/mysql-database-table-information_schema/</link><pubDate>Sun, 19 Jun 2016 19:40:25 +0000</pubDate><guid>https://wyb0.cn/posts/2016/mysql-database-table-information_schema/</guid><description>&lt;h3 id="0x00-information_schema">0x00 information_schema&lt;/h3>
&lt;pre tabindex="0">&lt;code>information_schema这个数据库中保存了MySQL服务器所有数据库的信息。
如数据库名，数据库的表，表栏的数据类型与访问权限等。
再简单点，这台MySQL服务器上，到底有哪些数据库、各个数据库有哪些表，
每张表的字段类型是什么，各个数据库要什么权限才能访问，等等信息都保存在information_schema里面。

information_schema的表schemata中的列schema_name记录了所有数据库的名字
information_schema的表tables中的列table_schema记录了所有数据库的名字
information_schema的表tables中的列table_name记录了所有数据库的表的名字
information_schema的表columns中的列table_schema记录了所有数据库的名字
information_schema的表columns中的列table_name记录了所有数据库的表的名字
information_schema的表columns中的列column_name记录了所有数据库的表的列的名字
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://wyb0.cn/img/post/information_schema_alltables.png" alt="50">&lt;/p></description></item><item><title>PHP 之封装 MySQL 类</title><link>https://wyb0.cn/posts/2016/php-package-mysql-function/</link><pubDate>Fri, 03 Jun 2016 11:19:05 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-package-mysql-function/</guid><description>&lt;h3 id="0x00-configincphp内容如下">0x00 config.inc.php内容如下&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php
return array(
 &amp;#39;DB_HOST&amp;#39; =&amp;gt; &amp;#39;192.168.188.134&amp;#39;,
 &amp;#39;DB_NAME&amp;#39; =&amp;gt; &amp;#39;scoreboard&amp;#39;, 
 &amp;#39;DB_USER&amp;#39; =&amp;gt; &amp;#39;score&amp;#39;,
 &amp;#39;DB_PASS&amp;#39; =&amp;gt; &amp;#39;123456&amp;#39;,
 &amp;#39;DB_CHARSET&amp;#39; =&amp;gt; &amp;#39;utf8&amp;#39;,
 &amp;#39;IS_LOG&amp;#39; =&amp;gt; 1,//开启日志
 &amp;#39;LOGFILEPATH&amp;#39; =&amp;gt; &amp;#39;../log.txt&amp;#39;//日志路径
);
/*
 $database = require(&amp;#39;./config.php&amp;#39;);
 echo $database[&amp;#39;DB_TYPE&amp;#39;]; //输出&amp;#39;DB_TYPE&amp;#39;
*/

?&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="0x01-表设计如下">0x01 表设计如下&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">database&lt;/span> scoreboard;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>use scoreboard;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">drop&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">exists&lt;/span> users;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> users(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment &lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gid int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;xiaoming&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;组id&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username varchar(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;xiaoming&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;用户名&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password varchar(&lt;span style="color:#ae81ff">32&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;密码&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sex varchar(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;性别&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> totalscore int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;个人总积分&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">drop&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">exists&lt;/span> &lt;span style="color:#66d9ef">share&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#66d9ef">share&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment &lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uid int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content varchar(&lt;span style="color:#ae81ff">1024&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;content&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;分享内容&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">comment&lt;/span> varchar(&lt;span style="color:#ae81ff">1024&lt;/span>) &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;点评&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> date varchar(&lt;span style="color:#ae81ff">15&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;20150101&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;分享日期&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">drop&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">exists&lt;/span> score;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> score(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment &lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uid int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;用户id&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> score int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;用户单次积分&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">grant&lt;/span> &lt;span style="color:#66d9ef">all&lt;/span> &lt;span style="color:#66d9ef">privileges&lt;/span> &lt;span style="color:#66d9ef">on&lt;/span> scoreboard.&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">to&lt;/span> &lt;span style="color:#e6db74">&amp;#39;score&amp;#39;&lt;/span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#e6db74">&amp;#39;%&amp;#39;&lt;/span> identified &lt;span style="color:#66d9ef">by&lt;/span> &lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 或者只给特定权限
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- grant select,update,delete on scoreboard.* to &amp;#39;score&amp;#39;@&amp;#39;%&amp;#39; identified by &amp;#39;123456&amp;#39;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flush &lt;span style="color:#66d9ef">privileges&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-封装类如下">0x02 封装类如下&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php

class mysql {
 private $logfilepath;
 private $is_log;
 private $hlog;
 private $conn;

 //构造函数
 public function __construct() {
 $config = include_once(dirname(__FILE__).&amp;#34;/../config/config.inc.php&amp;#34;);
 $this-&amp;gt;is_log = $config[&amp;#39;IS_LOG&amp;#39;];
 $this-&amp;gt;logfilepath = $config[&amp;#39;LOGFILEPATH&amp;#39;];

 if ($this-&amp;gt;is_log){
 $handle = fopen($this-&amp;gt;logfilepath,&amp;#34;a+&amp;#34;);
 $this-&amp;gt;hlog = $handle;
 }

 $this-&amp;gt;conn = $this-&amp;gt;connect($config[&amp;#39;DB_HOST&amp;#39;],$config[&amp;#39;DB_USER&amp;#39;],$config[&amp;#39;DB_PASS&amp;#39;],$config[&amp;#39;DB_NAME&amp;#39;],$config[&amp;#39;DB_CHARSET&amp;#39;]);
 }

 //连接数据库
 public function connect($dbhost, $dbuser, $dbpass, $dbname, $dbcharset) {
 $this-&amp;gt;conn = @mysql_connect($dbhost,$dbuser,$dbpass);
 if (!$this-&amp;gt;conn) {
 $msg = &amp;#34;连接数据库失败：&amp;#34;.mysql_error();
 $this-&amp;gt;write_log($msg);
 die($msg);
 } else {
 if (!@mysql_select_db($dbname)) {
 $msg = &amp;#34;连接数据库成功，但选择数据库失败：&amp;#34;.mysql_error();
 $this-&amp;gt;write_log($msg);
 die($msg);
 } else {
 $msg = &amp;#34;连接数据库成功，且选择数据库成功&amp;#34;;
 $this-&amp;gt;write_log($msg);
 }
 }

 @mysql_query(&amp;#34;set names &amp;#34;.$dbcharset);

 }

 //执行语句
 public function query($sql) {
 
 $result = @mysql_query($sql);

 if (!$result) {
 $this-&amp;gt;write_log(&amp;#39;mysql_query error:&amp;#39;.mysql_error());
 } else {
 $this-&amp;gt;write_log(&amp;#39;执行语句：&amp;#39;.$sql.&amp;#39; 且执行成功&amp;#39;);
 }
 return $result;
 }

 //查询一条数据
 public function select_one($tab,$column = &amp;#34;*&amp;#34;,$condition = &amp;#39;&amp;#39;,$debug=False) { //查询函数
 $condition = $condition ? &amp;#39; where &amp;#39; . $condition : NULL;
 $sql = &amp;#34;select $column from $tab $condition &amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql.&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;;
 } else {
 $result = $this-&amp;gt;query($sql);
 $row = @mysql_fetch_assoc($result);
 return $row;
 }
 }

 //查询多条数据
 public function select_more($tab,$column = &amp;#34;*&amp;#34;,$condition = &amp;#39;&amp;#39;,$debug=False) { //查询函数
 $condition = $condition ? &amp;#39; where &amp;#39; . $condition : NULL;
 $sql = &amp;#34;select $column from $tab $condition&amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql;
 } else {
 $result = $this-&amp;gt;query($sql);
 $i = 0;
 $rows = array();
 while ($row = @mysql_fetch_assoc($result)) {
 $rows[$i] = $row;
 // print_r($rows[$i]);
 $i++; 
 }
 return $rows;
 }
 }

 //返回结果集
 public function echo_result($tab,$column = &amp;#34;*&amp;#34;,$condition = &amp;#39;&amp;#39;,$debug=False) { //查询函数
 $condition = $condition ? &amp;#39; where &amp;#39; . $condition : NULL;
 $sql = &amp;#34;select $column from $tab $condition &amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql.&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;;
 } else {
 return $this-&amp;gt;query($sql);
 }
 }

 //插入数据
 public function insert($tab,$arr,$debug=False) {
 $value = &amp;#39;&amp;#39;;
 $column = &amp;#39;&amp;#39;;
 foreach ($arr as $k =&amp;gt; $v) {
 $column .= &amp;#34;,{$k}&amp;#34;;
 $value .= &amp;#34;,&amp;#39;{$v}&amp;#39;&amp;#34;;
 }
 $column = substr($column, 1);
 $value = substr($value, 1);

 $sql = &amp;#34;insert into $tab($column) values($value)&amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql;
 } else {
 $this-&amp;gt;query($sql);
 $num = $this-&amp;gt;affected_num();
 $this-&amp;gt;write_log(&amp;#34;受影响行数：&amp;#34;.$num);
 return $num; //返回受影响行数
 }
 }

 //获取最后插入的id
 public function insert_id() {
 $id = mysql_insert_id($this-&amp;gt;link_id);
 $this-&amp;gt;write_log(&amp;#39;最后插入的id为：&amp;#39;.$id);
 return $id;
 }

 //更新数据
 public function update($tab,$arr,$condition = &amp;#39;&amp;#39;,$debug=False) {
 if (!$condition) {
 die(&amp;#34;error&amp;#34;.mysql_error());
 } else {
 $condition = &amp;#39;where &amp;#39; . $condition;
 }
 
 $value = &amp;#39;&amp;#39;;
 foreach ($arr as $k =&amp;gt; $v) {
 $value .= &amp;#34;{$k}=&amp;#39;{$v}&amp;#39;,&amp;#34;;
 }
 $value = substr($value,0,-1);

 $sql = &amp;#34;update $tab set $value $condition&amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql;
 } else {
 $this-&amp;gt;query($sql);
 $num = $this-&amp;gt;affected_num();
 $this-&amp;gt;write_log(&amp;#34;受影响行数：&amp;#34;.$num);

 return $num; 
 }
 }

 //删除数据
 public function delete($tab,$condition=&amp;#39;&amp;#39;,$debug=False) {
 $condition = $condition ? &amp;#39; where &amp;#39; . $condition : NULL;
 $sql = &amp;#34;delete from $tab $condition&amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql;
 } else {
 $this-&amp;gt;query($sql);
 $num = $this-&amp;gt;affected_num();
 $this-&amp;gt;write_log(&amp;#34;受影响行数：&amp;#34;.$num);
 return $num; //返回受影响行数
 }
 }

 //返回受影响行数
 public function affected_num() {
 $num = @mysql_affected_rows();
 return $num;
 }

 //写入日志
 public function write_log($msg=&amp;#39;&amp;#39;) {
 if ($this-&amp;gt;is_log){
 $text = date(&amp;#34;Y-m-d H:i:s&amp;#34;).&amp;#34; &amp;#34;.$msg.&amp;#34;\r\n&amp;#34;;
 fwrite($this-&amp;gt;hlog,$text);
 }
 }

 //关闭数据库连接
 public function close() { 
 mysql_close($this-&amp;gt;conn);
 }

 //析构函数
 public function __destruct() {
 if($this-&amp;gt;is_log){
 fclose($this-&amp;gt;hlog);
 }
 }
}

 //$db = new mysql();
 
 // //select_one($tab,$column = &amp;#34;*&amp;#34;,$condition = &amp;#39;&amp;#39;)
 // $rows = $db-&amp;gt;select_more(&amp;#39;share&amp;#39;,&amp;#39;*&amp;#39;);
 // print_r($rows[0]);
 // print_r($rows[1]);

 // //insert($tab,$arr)
 // $arr = array();
 // $arr[&amp;#39;uid&amp;#39;] = &amp;#39;3&amp;#39;;
 // $arr[&amp;#39;content&amp;#39;] = &amp;#39;xss&amp;#39;;
 // $arr[&amp;#39;comment&amp;#39;] = &amp;#39;very good&amp;#39;;
 // $arr[&amp;#39;date&amp;#39;] = &amp;#39;1464082630&amp;#39;;
 // $db-&amp;gt;insert(&amp;#39;share&amp;#39;,$arr);

 // //update($tab,$arr,$condition = &amp;#39;&amp;#39;)
 // $arr = array();
 // $arr[&amp;#39;content&amp;#39;] = &amp;#39;xssxssxssxssxss&amp;#39;;
 // $arr[&amp;#39;comment&amp;#39;] = &amp;#39;goodgoodgoodgood&amp;#39;;
 // $condition = &amp;#39;id &amp;gt; 5&amp;#39;;
 // $db-&amp;gt;update(&amp;#39;share&amp;#39;,$arr,$condition);

 //$db-&amp;gt;delete(&amp;#34;share&amp;#34;,&amp;#34;id between 10 and 15&amp;#34;);

 //$db-&amp;gt;close();
?&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>PHP 之 MySQL 常用函数</title><link>https://wyb0.cn/posts/2016/php-mysql-common-function/</link><pubDate>Thu, 02 Jun 2016 13:21:49 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-mysql-common-function/</guid><description>&lt;h3 id="0x00-处理函数">0x00 处理函数&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>mysql_connect(server,user,pwd,newlink,clientflag)&lt;br>
连接服务器的函数,成功则返回MySQL标识，失败则返回FALSE&lt;/p>
&lt;/li>
&lt;li>
&lt;p>mysql_select_db(database,connection)&lt;br>
选择数据库的函数，成功则返回true，失败则返回false&lt;/p></description></item></channel></rss>