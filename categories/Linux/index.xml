<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Reber&#39;s Blog</title>
    <link>https://wyb0.com/categories/Linux/</link>
    <description>Recent content in Linux on Reber&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 15 Dec 2018 22:51:04 +0000</lastBuildDate>
    <atom:link href="https://wyb0.com/categories/Linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>使用 docker-compose 构造 LAMP 环境</title>
      <link>https://wyb0.com/posts/2018/docker-compose-build-lamp/</link>
      <pubDate>Sat, 15 Dec 2018 22:51:04 +0000</pubDate>
      <guid>https://wyb0.com/posts/2018/docker-compose-build-lamp/</guid>
      <description>0x00 实现功能 使用docker-compose构造LAMP环境，其中mysql数据库、mysql配置文件、网站文件均持久化存</description>
    </item>
    <item>
      <title>Docker Compose</title>
      <link>https://wyb0.com/posts/2018/docker-compose/</link>
      <pubDate>Mon, 19 Nov 2018 20:10:23 +0000</pubDate>
      <guid>https://wyb0.com/posts/2018/docker-compose/</guid>
      <description>0x00 关于docker compose 可以把docker-compose当作docker命令的封装，它是一个用来把 docker 自动化的东西，dock</description>
    </item>
    <item>
      <title>Docker 之数据卷</title>
      <link>https://wyb0.com/posts/2017/docker-volume/</link>
      <pubDate>Tue, 19 Sep 2017 10:35:09 +0000</pubDate>
      <guid>https://wyb0.com/posts/2017/docker-volume/</guid>
      <description>0x00 为什么使用数据卷 Docker镜像是由多个文件系统(只读层)叠加而成的。 当一个容器启动时Docker会加载只读镜像层并在</description>
    </item>
    <item>
      <title>Docker 之 Dockerfile</title>
      <link>https://wyb0.com/posts/2017/docker-dockerfile/</link>
      <pubDate>Fri, 18 Aug 2017 18:05:43 +0000</pubDate>
      <guid>https://wyb0.com/posts/2017/docker-dockerfile/</guid>
      <description>操作系统：macOS Sierra 10.12.6 Docker版本：Docker version 18.09.0, build 4d60db4 0x00 Dockerfile Dockerfile里面其实是一条条的指令，Docke</description>
    </item>
    <item>
      <title>Docker 之镜像与容器</title>
      <link>https://wyb0.com/posts/2017/docker-image-and-container/</link>
      <pubDate>Fri, 18 Aug 2017 14:36:39 +0000</pubDate>
      <guid>https://wyb0.com/posts/2017/docker-image-and-container/</guid>
      <description>操作系统：Ubuntu14.04.1 Docker版本：Docker version 17.06.0-ce, build 02c1d87 0x00 镜像操作 下载镜像 #一般镜像、容器的id和na</description>
    </item>
    <item>
      <title>Docker 初识</title>
      <link>https://wyb0.com/posts/2017/docker-basis/</link>
      <pubDate>Tue, 15 Aug 2017 22:16:35 +0000</pubDate>
      <guid>https://wyb0.com/posts/2017/docker-basis/</guid>
      <description>0x00 关于Docker Docker中的镜像类似VM的快照，容器类似虚拟机，使用镜像创建容器类似于使用快照创建虚拟机。 Dock</description>
    </item>
    <item>
      <title>在 vps 上搭建 Shadowsocks</title>
      <link>https://wyb0.com/posts/2017/vps-set-up-shadowsocks/</link>
      <pubDate>Fri, 10 Mar 2017 10:34:40 +0000</pubDate>
      <guid>https://wyb0.com/posts/2017/vps-set-up-shadowsocks/</guid>
      <description>0x01 安装与配置 环境：Ubuntu 14.04.1 LTS reber@localhost:~$ sudo apt-get update reber@localhost:~$ python --version Python 2.7.6 reber@localhost:~$ sudo apt-get install python-gevent python-pip reber@localhost:~$ sudo pip install shadowsocks reber@localhost:~$ vim /home/reber/shadowsocks.json { &amp;#34;server&amp;#34;:&amp;#</description>
    </item>
    <item>
      <title>Tmux 的使用</title>
      <link>https://wyb0.com/posts/2016/tmux-usage/</link>
      <pubDate>Sat, 10 Sep 2016 16:24:18 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/tmux-usage/</guid>
      <description>0x00 Tmux 的快捷键前缀 在 Tmux 下想要使用快捷键时，需要先按下快捷键前缀，然后再按下快捷键。 默认情况下，Tmux 的快捷键前缀是 Ctr</description>
    </item>
    <item>
      <title>SSH 免密登录及 SSH 隧道</title>
      <link>https://wyb0.com/posts/2016/linux-ssh-connect/</link>
      <pubDate>Wed, 10 Aug 2016 11:46:13 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-ssh-connect/</guid>
      <description>0x00 SSH相关选项 -V 显示版本 -f 输入密码后进入后台模式 -N 不执行远程命令，一般与-f连用，用于端口转发 -C 压缩传输的数据，网速快</description>
    </item>
    <item>
      <title>iptables 简单配置 DMZ</title>
      <link>https://wyb0.com/posts/2016/iptables-configure-dmz/</link>
      <pubDate>Tue, 05 Jul 2016 09:56:35 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/iptables-configure-dmz/</guid>
      <description>0x00 要求 内网可以访问外网 内网可以访问DMZ区 外网不能访问内网 外网能访问DMZ区的服务 DMZ区不能访问内网 DMZ区不能主动访</description>
    </item>
    <item>
      <title>Ubuntu 下使用 ShadowSocks</title>
      <link>https://wyb0.com/posts/2016/ubuntu-use-shadowsocks/</link>
      <pubDate>Mon, 13 Jun 2016 09:14:45 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/ubuntu-use-shadowsocks/</guid>
      <description>环境：Ubuntu14.04 0x00 安装shadowsocks-qt5 sudo apt-get update sudo apt-get python-software-properties software-properties-common sudo add-apt-repository ppa:hzwhuang/ss-qt5</description>
    </item>
    <item>
      <title>conky 配置</title>
      <link>https://wyb0.com/posts/2016/conky-configuration/</link>
      <pubDate>Sat, 04 Jun 2016 20:26:21 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/conky-configuration/</guid>
      <description>0x00 效果 使用软件conky可以在linux上看到系统的运行状态，效果如下： 0x01 安装与配置 先安装conky： sudo apt-get install conky 在/hom</description>
    </item>
    <item>
      <title>Ubuntu 下安装 sublime text 3</title>
      <link>https://wyb0.com/posts/2016/ubuntu-insatll-sublime-text3/</link>
      <pubDate>Sun, 08 May 2016 00:04:42 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/ubuntu-insatll-sublime-text3/</guid>
      <description>环境：ubuntu14.4 0x00 安装 添加Sublime Text 3的仓库 sudo add-apt-repository ppa:webupd8team/sublime-text-3 更新软件库 sudo apt-get update 安装Sublime Text 3 sudo apt-get install sublime-text-installer 0x01 解决不</description>
    </item>
    <item>
      <title>Ubuntu 搭建 LAMP</title>
      <link>https://wyb0.com/posts/2016/ubuntu-build-lamp/</link>
      <pubDate>Sat, 07 May 2016 21:37:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/ubuntu-build-lamp/</guid>
      <description>0x00 环境 我是在虚拟机中安装14.04.4版的Ubuntu 下载Ubuntu14.04.4 0x01 配源或选择最快的更新服务器 选择最快</description>
    </item>
    <item>
      <title>Linux 之文本处理软件 awk</title>
      <link>https://wyb0.com/posts/2016/linux-text-processing-software-awk/</link>
      <pubDate>Wed, 20 Apr 2016 15:54:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-text-processing-software-awk/</guid>
      <description>awk默认是以行为单位处理文本的，对文本中的每一行都执行后面 &amp;ldquo;{ }&amp;rdquo; 中的语句。 0x00 awk 若有一个需要重新格式化的字典test.tx</description>
    </item>
    <item>
      <title>Linux 之文本处理</title>
      <link>https://wyb0.com/posts/2016/linux-text-processing/</link>
      <pubDate>Wed, 20 Apr 2016 07:58:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-text-processing/</guid>
      <description>这里介绍3种方式：awk、grep、sed 0x00 awk处理文本(最常用) 作用：awk对数据以行分析并生成报告时显得很强大，它</description>
    </item>
    <item>
      <title>Linux 之软件的安装</title>
      <link>https://wyb0.com/posts/2016/linux-software-installation/</link>
      <pubDate>Tue, 19 Apr 2016 19:07:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-software-installation/</guid>
      <description>Linux上的软件安装可以分为三种方式： 0x00 yum安装 yum基于RPM包管理，一次性安装所有依赖包，提供了查找、安装、删除</description>
    </item>
    <item>
      <title>Linux 之基础命令</title>
      <link>https://wyb0.com/posts/2016/linux-basic-command/</link>
      <pubDate>Tue, 19 Apr 2016 10:03:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-basic-command/</guid>
      <description>0x00 ls：显示文件 [wyb@localhost tmp]$ ls a a.txt [wyb@localhost tmp]$ ls -l total 4 drwxr-xr-x. 2 wyb root 4096 Apr 17 18:23 a -rw-r--r--. 1 wyb root 0 Apr 17 18:23 a.txt [wyb@localhost tmp]$ ls -a . .. a a.txt .esd-500 .ICE-unix [wyb@localhost tmp]$ ls -al total 20 drwxrwxrwt. 5 root root 4096 Apr 17</description>
    </item>
    <item>
      <title>Linux 之服务和计划任务</title>
      <link>https://wyb0.com/posts/2016/linux-service-and-planning-tasks/</link>
      <pubDate>Tue, 19 Apr 2016 10:03:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-service-and-planning-tasks/</guid>
      <description>0x00 服务： 在后台运行的软件就叫服务，参数一般为：start/stop/restart apache启动后默认降权 service httpd star</description>
    </item>
    <item>
      <title>Linux 之用户和用户组</title>
      <link>https://wyb0.com/posts/2016/linux-user/</link>
      <pubDate>Sun, 17 Apr 2016 20:48:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-user/</guid>
      <description>0x01 新建用户 环境：Ubuntu 14.04.4 Step1：添加新用户 useradd -r -m -s /bin/bash 用户名 Step2:配置新用户密码 passwd 用户名 Step3：给新添</description>
    </item>
    <item>
      <title>Linux 之权限</title>
      <link>https://wyb0.com/posts/2016/linux-permission-settings/</link>
      <pubDate>Sun, 17 Apr 2016 10:03:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-permission-settings/</guid>
      <description>主要有三种参数：rwx 对于文件来说：分别是读/写/执行 对于目录来说：r读目录结构；w操作目录结构；x进入目录 如：drwx</description>
    </item>
    <item>
      <title>Linux 之 vim</title>
      <link>https://wyb0.com/posts/2016/linux-vim/</link>
      <pubDate>Fri, 15 Apr 2016 21:03:07 +0000</pubDate>
      <guid>https://wyb0.com/posts/2016/linux-vim/</guid>
      <description>0x00 Vim的安装及配置： 安装vim yum install vim 配置文件的位置 在目录 /etc/ 下面，有个名为vimrc的 文件， 这是系统中公共的vim配置文</description>
    </item>
  </channel>
</rss>
