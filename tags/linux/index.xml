<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Reber's Blog</title><link>https://wyb0.com/tags/linux/</link><description>Recent content in Linux on Reber's Blog</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 20 Apr 2016 15:54:07 +0000</lastBuildDate><atom:link href="https://wyb0.com/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Linux 之文本处理软件 awk</title><link>https://wyb0.com/posts/2016/linux-text-processing-software-awk/</link><pubDate>Wed, 20 Apr 2016 15:54:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-text-processing-software-awk/</guid><description>&lt;p>awk默认是以行为单位处理文本的，对文本中的每一行都执行后面 &amp;ldquo;{ }&amp;rdquo; 中的语句。&lt;/p>
&lt;h3 id="0x00-awk">0x00 awk&lt;/h3>
&lt;ul>
&lt;li>若有一个需要重新格式化的字典test.txt(用户名、密码、地址)：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>xiaosan sadasdw jiaozuo
234wer asdfasd asdas
1111 aaaa cccc
2222 aaaa degd
1111 aaaa cccc
3333 aaaa dfger
21asd sdfsd sadasd
dwqx asds sasdfcv
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>要求：&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1.里面有重复数据，使用命令去重
2.提取出用户名和密码 每一行前面加上id数字，递增。
3.只提取出密码作为爆破字典
4.某些公司都是一个公司前缀+姓名简写，所以为用户名一栏全部改为uv_用户名
5.提取出密码一列，有些密码爆破成功率高，所以增加一列，标出密码出现次数
&lt;/code>&lt;/pre>&lt;h3 id="0x01-去重">0x01 去重&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39;
$ cat test.txt | uniq #作用和上面命令相同
xiaosan sadasdw jiaozuo
234wer asdfasd asdas
1111 aaaa cccc
2222 aaaa degd
3333 aaaa dfger
21asd sdfsd sadasd
dwqx asds sasdfcv
&lt;/code>&lt;/pre>&lt;h3 id="0x02-去重添加id">0x02 去重、添加id&lt;/h3>
&lt;pre tabindex="0">&lt;code>一般字典不需要id、user、pass等标示符，这里只是为了便于观看

$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39; | awk -F &amp;#39;\t&amp;#39; &amp;#39;{print &amp;#34;id:&amp;#34;NR&amp;#34;\tuser:&amp;#34;$1&amp;#34;\tpass:&amp;#34;$2&amp;#34;\taddress:&amp;#34;$3}&amp;#39; | column -t #最后一个命令可以将列对齐
id:1 user:aosan pass:sadasdw address:jiaozuo
id:2 user:234wer pass:asdfasd address:asdas
id:3 user:1111 pass:aaaa address:cccc
id:4 user:2222 pass:aaaa address:degd
id:5 user:3333 pass:aaaa address:dfger
id:6 user:21asd pass:sdfsd address:sadasd
id:7 user:dwqx pass:asds address:sasdfcv
&lt;/code>&lt;/pre>&lt;h3 id="0x03-去重添加id添加公司前缀">0x03 去重、添加id、添加公司前缀&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39; | awk -F &amp;#39;\t&amp;#39; &amp;#39;{print &amp;#34;id:&amp;#34;NR&amp;#34;\tuser:uv_&amp;#34;$1&amp;#34;\tpass:&amp;#34;$2&amp;#34;\taddress:&amp;#34;$3}&amp;#39;
id:1 user:uv_aosan pass:sadasdw address:jiaozuo
id:2 user:uv_234wer pass:asdfasd address:asdas
id:3 user:uv_1111 pass:aaaa address:cccc
id:4 user:uv_2222 pass:aaaa address:degd
id:5 user:uv_3333 pass:aaaa address:dfger
id:6 user:uv_21asd pass:sdfsd address:sadasd
id:7 user:uv_dwqx pass:asds address:sasdfcv
&lt;/code>&lt;/pre>&lt;h3 id="0x04-去重然后输出密码">0x04 去重然后输出密码&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39; | awk -F &amp;#39;\t&amp;#39; &amp;#39;{print &amp;#34;pass:&amp;#34;$2}&amp;#39;
pass:sadasdw
pass:asdfasd
pass:aaaa
pass:aaaa
pass:aaaa
pass:sdfsd
pass:asds
&lt;/code>&lt;/pre>&lt;h3 id="0x05-输出密码得到密码出现次数">0x05 输出密码、得到密码出现次数&lt;/h3>
&lt;pre tabindex="0">&lt;code>下面的&amp;#39;a[$1]++&amp;#39;是按第一列来去重的,若有两条数据只有第一列重复则成功，可以用$0按行来去重
$ cat test.txt | awk &amp;#39;!a[$1]++&amp;#39; | awk -F &amp;#39;\t&amp;#39; &amp;#39;{print $2}&amp;#39; | awk &amp;#39;{a[$1]++} END {for (j in a) print a[j],j}&amp;#39;
1 sadasdw
1 sdfsd
1 asdfasd
1 asds
3 aaaa

uniq 只能去除挨着的重复数据，所以先sort升序排序，然后uniq -c统计重复，再sort -r降序排序
cat test.txt | awk &amp;#39;{print $2}&amp;#39; | sed &amp;#39;1d&amp;#39; |sort | uniq -c |sort -r
&lt;/code>&lt;/pre>&lt;h3 id="0x06-其他">0x06 其他：&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>对!a[$1]++的解释如下：&lt;/p></description></item><item><title>Linux 之文本处理</title><link>https://wyb0.com/posts/2016/linux-text-processing/</link><pubDate>Wed, 20 Apr 2016 07:58:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-text-processing/</guid><description>&lt;p>这里介绍3种方式：awk、grep、sed&lt;/p>
&lt;h3 id="0x00-awk处理文本最常用">0x00 awk处理文本(最常用)&lt;/h3>
&lt;pre tabindex="0">&lt;code>作用：awk对数据以行分析并生成报告时显得很强大，它将行进行切片，再处理分开的切片，可对格式化的数据重新进行格式化 
awk命令格式：awk [F filed-separator] &amp;#39;commands&amp;#39; input-fiel(s) 
参数-F：可以添加任意的分割符，比较重要 
awk工作流程是这样的： 
读入有&amp;#39;\n&amp;#39;换行符分割的一条记录，然后将记录按-F指定的域分隔符划分域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是&amp;#34;空白键&amp;#34; 或 &amp;#34;[tab]键&amp;#34;。
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>入门示例：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ head -n &lt;span style="color:#ae81ff">5&lt;/span> /etc/passwd
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root:x:0:0:root:/root:/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bin:x:1:1:bin:/bin:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>daemon:x:2:2:daemon:/sbin:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adm:x:3:4:adm:/var/adm:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ head -n &lt;span style="color:#ae81ff">5&lt;/span> /etc/passwd | awk -F &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{print $1}&amp;#39;&lt;/span> &lt;span style="color:#75715e">#输出第1列，域分隔符为：&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>daemon
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>adm
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>lp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ head -n &lt;span style="color:#ae81ff">5&lt;/span> /etc/passwd | awk -F &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;{pri
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74">nt &amp;#34;id:&amp;#34;$1&amp;#34;\tshell:&amp;#34;$7}&amp;#39;&lt;/span> &lt;span style="color:#75715e">#输出第1、7列且给予列名&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:root shell:/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:bin shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:daemon shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:adm shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:lp shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ head -n &lt;span style="color:#ae81ff">5&lt;/span> /etc/passwd | awk -F &lt;span style="color:#e6db74">&amp;#39;:&amp;#39;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;BEGIN {print &amp;#34;====begin=====&amp;#34;} {print &amp;#34;id:&amp;#34;$1&amp;#34;\tshell:&amp;#34;$7} END {print &amp;#34;====end====&amp;#34;}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">====&lt;/span>begin&lt;span style="color:#f92672">=====&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:root shell:/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:bin shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:daemon shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:adm shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>id:lp shell:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">====&lt;/span>end&lt;span style="color:#f92672">====&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ awk -F: &lt;span style="color:#e6db74">&amp;#39;/root/&amp;#39;&lt;/span> /etc/passwd &lt;span style="color:#75715e">#搜索含有root关键字的所有行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root:x:0:0:root:/root:/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>operator:x:11:0:operator:/root:/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ awk -F: &lt;span style="color:#e6db74">&amp;#39;/root/{print $7}&amp;#39;&lt;/span> /etc/passwd &lt;span style="color:#75715e">#匹配root并输出对应shell&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>/sbin/nologin
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>wyb@localhost temp&lt;span style="color:#f92672">]&lt;/span>$ awk -F: &lt;span style="color:#e6db74">&amp;#39;/^root/&amp;#39;&lt;/span> /etc/passwd &lt;span style="color:#75715e">#匹配以root开头的行&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>root:x:0:0:root:/root:/bin/bash
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>内置变量：&lt;/li>
&lt;/ul>
&lt;table>
 &lt;tr>
 &lt;td bgcolor=black>
ARGC&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令行参数个数&lt;br/>
ARGV&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令行参数排列&lt;br/>
ENVIRON&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;支持队列中系统环境变量的使用&lt;br/>
FILENAME&amp;nbsp;&amp;nbsp;&amp;nbsp;awk浏览的文件名&lt;br/>
FNR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览文件的记录数&lt;br/>
FS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;设置输入域分隔符，等价于命令行 -F选项&lt;br/>
NF&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览记录的域的个数&lt;br/>
NR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;已读的记录数&lt;br/>
OFS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出域分隔符&lt;br/>
ORS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出记录分隔符&lt;br/>
RS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;控制记录分隔符
 &lt;/td>
 &lt;/tr>
&lt;/table>
```
[wyb@localhost temp]$ awk -F: '{print "filename:" FILENAME ",linenumber:" NR ",columns:" NF ",linecontent:"$0}' a.txt
filename:a.txt,linenumber:1,columns:1,linecontent:1 root 12sf34s56
filename:a.txt,linenumber:2,columns:1,linecontent:2 admin ksdjfiweurf
filename:a.txt,linenumber:3,columns:1,linecontent:3 dome skd89453
filename:a.txt,linenumber:4,columns:1,linecontent:4 tomkd 3jkke34
filename:a.txt,linenumber:5,columns:1,linecontent:5 jarry sdkj89ry4
filename:a.txt,linenumber:6,columns:1,linecontent:6 canki sdkj834
filename:a.txt,linenumber:7,columns:1,linecontent:7 lola er8f7734
filename:a.txt,linenumber:8,columns:1,linecontent:8 marry j8jkf78
filename:a.txt,linenumber:9,columns:1,linecontent:9 candy kd89943
```
&lt;ul>
&lt;li>
&lt;p>awk编程：&lt;/p></description></item><item><title>Linux 之软件的安装</title><link>https://wyb0.com/posts/2016/linux-software-installation/</link><pubDate>Tue, 19 Apr 2016 19:07:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-software-installation/</guid><description>&lt;p>Linux上的软件安装可以分为三种方式：&lt;/p>
&lt;h3 id="0x00-yum安装">0x00 yum安装&lt;/h3>
&lt;pre tabindex="0">&lt;code>yum基于RPM包管理，一次性安装所有依赖包，提供了查找、安装、删除一个、一组
至全部软件包的命令，配置文件在/etc/yum.repos.d/下
主要命令：
yum install gcc g++
yum remove wget
yum list installed //显示已经安装过的软件
yum list //显示所有可以安装的包
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[wyb@localhost ~]$ wget -h //验证有没有安装wget
-bash: /usr/bin/wget: No such file or directory
[wyb@localhost ~]$ sudo yum search wget //通过yum查找wget，看有没有这个软件包
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
============================== N/S Matched: wget ===============================
wget.x86_64 : A utility for retrieving files using the HTTP or FTP protocols

 Name and summary matches only, use &amp;#34;search all&amp;#34; for everything.
[wyb@localhost ~]$ sudo yum deplist wget //列出安装包的依赖项
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
Finding dependencies: 
package: wget.x86_64 1.12-5.el6_6.1
 dependency: libssl.so.10()(64bit)
 provider: openssl.x86_64 1.0.1e-42.el6
 provider: openssl.x86_64 1.0.1e-42.el6_7.1
 provider: openssl.x86_64 1.0.1e-42.el6_7.2
 provider: openssl.x86_64 1.0.1e-42.el6_7.4
[wyb@localhost ~]$ sudo yum install wget //安装一个或两个软件包
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
Setting up Install Process
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package wget.x86_64 0:1.12-5.el6_6.1 will be installed
--&amp;gt; Finished Dependency Resolution
[wyb@localhost ~]$ sudo yum remove wget //移除wget
[sudo] password for wyb: 
Loaded plugins: fastestmirror, refresh-packagekit, security
Setting up Remove Process
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package wget.x86_64 0:1.12-5.el6_6.1 will be erased
--&amp;gt; Finished Dependency Resolution
&lt;/code>&lt;/pre>&lt;h3 id="0x01-rpm安装">0x01 rpm安装&lt;/h3>
&lt;p>分为：二进制包和源代码包&lt;br>
二进制包可直接安装，源码包会由rpm自动编译、安装，安装包常以src、rpm做为后缀&lt;/p></description></item><item><title>Linux 之基础命令</title><link>https://wyb0.com/posts/2016/linux-basic-command/</link><pubDate>Tue, 19 Apr 2016 10:03:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-basic-command/</guid><description>&lt;h3 id="0x00-ls显示文件">0x00 ls：显示文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ls
a a.txt
[wyb@localhost tmp]$ ls -l
total 4
drwxr-xr-x. 2 wyb root 4096 Apr 17 18:23 a
-rw-r--r--. 1 wyb root 0 Apr 17 18:23 a.txt
[wyb@localhost tmp]$ ls -a
. .. a a.txt .esd-500 .ICE-unix
[wyb@localhost tmp]$ ls -al
total 20
drwxrwxrwt. 5 root root 4096 Apr 17 18:23 .
dr-xr-xr-x. 22 root root 4096 Apr 17 16:31 ..
drwxr-xr-x. 2 wyb root 4096 Apr 17 18:23 a
-rw-r--r--. 1 wyb root 0 Apr 17 18:23 a.txt
drwx------. 2 wyb wyb 4096 Apr 10 19:15 .esd-500
drwxrwxrwt. 2 root root 4096 Apr 17 16:31 .ICE-unix
&lt;/code>&lt;/pre>&lt;h3 id="0x02-pwd查看当前工作路径">0x02 pwd：查看当前工作路径&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost ~]$ pwd 
/home/wyb
&lt;/code>&lt;/pre>&lt;h3 id="0x03-cd切换目录">0x03 cd：切换目录&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost ~]$ ls
Desktop Documents Downloads Music Pictures Public Templates Videos
[wyb@localhost ~]$ cd Desktop/ //相对路径
[wyb@localhost Desktop]$ cd /tmp/a //绝对路径
[wyb@localhost a]$ pwd
/tmp/a
[wyb@localhost a]$ cd - //返回原来的目录
[wyb@localhost Desktop]$ pwd
/home/user/reber/Desktop
&lt;/code>&lt;/pre>&lt;h3 id="0x04-mkdir新建文件夹">0x04 mkdir：新建文件夹&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ls
a a.txt
[wyb@localhost tmp]$ mkdir bbb
[wyb@localhost tmp]$ ls
a a.txt bbb
&lt;/code>&lt;/pre>&lt;h3 id="0x05-touchvim新建文件">0x05 touch/vim：新建文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ls
a a.txt bbb
[wyb@localhost tmp]$ touch bbb.txt
[wyb@localhost tmp]$ ls
a a.txt bbb bbb.txt
&lt;/code>&lt;/pre>&lt;h3 id="0x06-rm删除文件">0x06 rm：删除文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ls
a a.txt bbb bbb.txt c.txt
[wyb@localhost tmp]$ rm c.txt //删除文件c.txt
[wyb@localhost tmp]$ ls
a a.txt bbb bbb.txt
[wyb@localhost tmp]$ rm a //删除文件夹a，结果不能删除
rm: cannot remove `a&amp;#39;: Is a directory
[wyb@localhost tmp]$ rm -r a //加上-r才能删除文件夹
[wyb@localhost tmp]$ ls
a.txt bbb bbb.txt
&lt;/code>&lt;/pre>&lt;h3 id="0x07-ifconfig查看网卡的信息">0x07 ifconfig：查看网卡的信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ ifconfig
eth0 Link encap:Ethernet HWaddr 00:0C:29:56:B4:10 
 inet addr:192.168.63.131 Bcast:192.168.63.255 Mask:255.255.255.0
 inet6 addr: fe80::20c:29ff:fe56:b410/64 Scope:Link
 UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
 RX packets:67099 errors:0 dropped:0 overruns:0 frame:0
 TX packets:34939 errors:0 dropped:0 overruns:0 carrier:0
 collisions:0 txqueuelen:1000 
 RX bytes:94042525 (89.6 MiB) TX bytes:1995748 (1.9 MiB)

lo Link encap:Local Loopback 
 inet addr:127.0.0.1 Mask:255.0.0.0
 inet6 addr: ::1/128 Scope:Host
 UP LOOPBACK RUNNING MTU:16436 Metric:1
 RX packets:0 errors:0 dropped:0 overruns:0 frame:0
 TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
 collisions:0 txqueuelen:0 
 RX bytes:0 (0.0 b) TX bytes:0 (0.0 b)
&lt;/code>&lt;/pre>&lt;h3 id="0x08-netstat查找网络连接信息">0x08 netstat：查找网络连接信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>netstat -l //listen状态的
netstat -an //显示所有的连接信息，且以ip地址代替名称
netstat -t //显示tcp连接信息
netstat -u //显示udp连接信息
LISTENING	//监听端口状态
ESTABLSHED	//建立连接
CLOSE_WAIT	//对方主动断开连接，此时我方就会变为这个状态，我方要调用close()
TIME_WAIT	//我方主动调用close(),对方收到后变为CLOSE_WAIT
[root@localhost ~]# netstat -l -n
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address Foreign Address远程 State 
tcp 0 0 0.0.0.0:22 0.0.0.0:* LISTEN 所有ip均可连接22
tcp 0 0 127.0.0.1:631 0.0.0.0:* LISTEN
tcp 0 0 127.0.0.1:25 0.0.0.0:* LISTEN 只有127.0.0.1连接25端口
tcp 0 0 :::22 :::* LISTEN 
tcp 0 0 ::1:631 :::* LISTEN 
Active UNIX domain sockets (only servers)
Proto RefCnt Flags Type State I-Node Path
unix 2 [ ACC ] STREAM LISTENING 14229 public/cleanup
unix 2 [ ACC ] STREAM LISTENING 14236 private/tlsmgr
unix 2 [ ACC ] STREAM LISTENING 14240 private/rewrite
unix 2 [ ACC ] STREAM LISTENING 14244 private/bounce
unix 2 [ ACC ] STREAM LISTENING 14248 private/defer
&lt;/code>&lt;/pre>&lt;h3 id="0x09-nslookup查看dns信息">0x09 nslookup：查看DNS信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>nslookup 查看ip和域名的相互映射
nslookup www.baidu.com //返回一些信息
&lt;/code>&lt;/pre>&lt;h3 id="0x0a-ping">0x0A ping&lt;/h3>
&lt;pre tabindex="0">&lt;code>ping -c 3 www.baidu.com //指定ping百度3次
&lt;/code>&lt;/pre>&lt;h3 id="0x0b-lastfinger查看近期的登陆信息">0x0B last/finger：查看近期的登陆信息&lt;/h3>
&lt;pre tabindex="0">&lt;code>[root@localhost ~]# last
&lt;/code>&lt;/pre>&lt;pre tabindex="0">&lt;code>[root@localhost ~]# finger
&lt;/code>&lt;/pre>&lt;h3 id="0x0c-find查找文件">0x0C find：查找文件&lt;/h3>
&lt;pre tabindex="0">&lt;code>which vim //查看可执行文件的位置
*which是通过 PATH环境变量到该路径内查找可执行文件，所以基本的功能是寻找可执行文件* 

whereis、locate也可查找文件,它们是使用数据库来搜索数据

find . -name 1.txt //查找当前文件夹及子目录下的1.txt、
find . -name *.txt //使用通配符
find /bin -perm 755 //返回的都是755权限的文件 
find /bin -perm 4755 //返回有gid(即s权限)的文件 2是gid
[wyb@localhost tmp]$ sudo find / -name *.log //根目录下查找名字以log结尾的文件
/var/spool/plymouth/boot.log
/var/log/wpa_supplicant.log
/var/log/dracut.log
/var/log/vmware-tools-upgrader.log
[wyb@localhost ~]$ find /bin -perm 755 | xargs ls -al //前一个命令的输出作为后一个命令的输入
-rwxr-xr-x. 1 root root 123 Feb 21 2013 /bin/alsaunmute
-rwxr-xr-x. 1 root root 27776 Jun 22 2012 /bin/arch
-rwxr-xr-x. 1 root root 26264 Jun 22 2012 /bin/basename
-rwxr-xr-x. 1 root root 938768 Feb 21 2013 /bin/bash
-rwxr-xr-x. 1 root root 48568 Jun 22 2012 /bin/cat
-rwxr-xr-x. 1 root root 55472 Jun 22 2012 /bin/chgrp
-rwxr-xr-x. 1 root root 52472 Jun 22 2012 /bin/chmod
&lt;/code>&lt;/pre>&lt;h3 id="0x0d-grep">0x0D grep&lt;/h3>
&lt;pre tabindex="0">&lt;code>//可以遍历查询mkr文件夹下含有字符串&amp;#34;reber&amp;#34;的文件及字符串所在行
reber@WYB:~$ grep -Rn &amp;#34;reber&amp;#34; mkdir 
mkr/cc:3:reber
mkr/a/a.txt:3:reber
mkr/a/b.txt:16:reber
mkr/b/xx:8:reber
&lt;/code>&lt;/pre>&lt;h3 id="0x0e-catnl">0x0E cat/nl&lt;/h3>
&lt;pre tabindex="0">&lt;code>前者显示
后者显示的同时有行号
[wyb@localhost tmp]$ cat &amp;gt; a.txt //创建文件同时写入数据
this is a.txt
^C
[wyb@localhost tmp]$ cat &amp;gt; b.txt
this is b.txt
^C
[wyb@localhost tmp]$ cat a.txt b.txt &amp;gt; c.txt //合并文件
[wyb@localhost tmp]$ cat c.txt 
this is a.txt
this is b.txt
[wyb@localhost tmp]$ cat -n c.txt //获取文件内容切添加行号
 1 this is a.txt
 2 this is b.txt
&lt;/code>&lt;/pre>&lt;h3 id="0x0f-head">0x0F head&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ head /etc/passwd //默认显示前10行
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin

[wyb@localhost tmp]$ head -n 4 /etc/passwd //设置显示前4行
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin

[wyb@localhost tmp]$ head -c 100 d.txt //显示前100个字节
 1 this is a.txt
 2 this is b.txt
this is add content
 1 this is a.txt
 2 this is b.[wyb@localhost tmp]$ 
&lt;/code>&lt;/pre>&lt;h3 id="0x10-tail">0x10 tail&lt;/h3>
&lt;pre tabindex="0">&lt;code>[wyb@localhost tmp]$ tail -f a.txt //实时显示文件后10行
this is a.txt
111111
aaaaaa
^C

[wyb@localhost tmp]$ tail -n 3 d.txt //显示文件后3行
 1 this is a.txt
 2 this is b.txt
this is add content

[wyb@localhost tmp]$ tail -c 100 d.txt //显示后100个字节
 2 this is b.txt
this is add content
 1 this is a.txt
 2 this is b.txt
this is add content
[wyb@localhost tmp]$ 
&lt;/code>&lt;/pre>&lt;h3 id="0x11-scp">0x11 scp&lt;/h3>
&lt;pre tabindex="0">&lt;code>向远程服务器put文件和文件夹，默认就是22端口
scp -P 22 ./aa.txt reber@123.206.78.220:/home/reber
scp -r ./bb reber@123.206.78.220:/home/reber

从服务器下载文件和文件夹
scp -P 2222 ubuntu@123.22.38.215:/home/reber/a.txt D:/a.txt
scp -r -P 2222 ubuntu@123.22.38.215:/home/reber/test D:/test/
&lt;/code>&lt;/pre>&lt;h3 id="0x12-磁盘">0x12 磁盘&lt;/h3>
&lt;pre tabindex="0">&lt;code>fdisk /dev/sdb
sudo mkfs.ext3 /dev/sdb1
mount -t ext3 -o rw /dev/sdb1 /home/aaa //-o指定权限
&lt;/code>&lt;/pre>&lt;h3 id="0x13-时间同步">0x13 时间同步&lt;/h3>
&lt;pre tabindex="0">&lt;code>ntpdate time.nist.gov //需要root权限
&lt;/code>&lt;/pre>&lt;h3 id="0x14-下载">0x14 下载&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ curl -o aa.xml http://wyb0.com/index.xml #可以访问网页，它同时还保存了文件，文件名为aa.xml
$ wget http://wyb0.com/index.xml #下载的文件名为index.xml
&lt;/code>&lt;/pre>&lt;h3 id="0x15-环境变量">0x15 环境变量&lt;/h3>
&lt;pre tabindex="0">&lt;code>$ env
&lt;/code>&lt;/pre>&lt;h3 id="0x16-压缩与解压缩">0x16 压缩与解压缩&lt;/h3>
&lt;ul>
&lt;li>tar
&lt;ul>
&lt;li>tar主要参数&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># 主要参数&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-c 创建一个新的压缩文件
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-x 解压
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-t 查看压缩文件的内容
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-f 指定档案文件的名字
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-v 显示过程信息
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-r 增加文件到指定的包
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-C 指定解压后的路径
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-z 使用gzip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-j 使用bzip2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-Z 使用compress
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>tar示例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># tar用法示例&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -cvf 1.tar aaa/ &lt;span style="color:#75715e">#打包不压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -zcvf 1.tar.gz aaa/ &lt;span style="color:#75715e">#打包且以gzip压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -jcvf 1.tar.bz2 aaa/ &lt;span style="color:#75715e">#打包且以bzip2压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>tar -zxvf aa.tar.gz /home/aaa --exclude&lt;span style="color:#f92672">=&lt;/span>dir &lt;span style="color:#75715e">#排除目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls -l
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>total &lt;span style="color:#ae81ff">24&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r--. &lt;span style="color:#ae81ff">1&lt;/span> wyb root &lt;span style="color:#ae81ff">10240&lt;/span> Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:47 1.tar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r--. &lt;span style="color:#ae81ff">1&lt;/span> wyb root &lt;span style="color:#ae81ff">265&lt;/span> Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:48 1.tar.bz2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r--. &lt;span style="color:#ae81ff">1&lt;/span> wyb root &lt;span style="color:#ae81ff">253&lt;/span> Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:48 1.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x. &lt;span style="color:#ae81ff">2&lt;/span> wyb root &lt;span style="color:#ae81ff">4096&lt;/span> Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:22 aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ file 1.tar.gz &lt;span style="color:#75715e">#查看文件类型&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.tar.gz: gzip compressed data, from Unix, last modified: Tue Apr &lt;span style="color:#ae81ff">19&lt;/span> 07:48:01 &lt;span style="color:#ae81ff">2016&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -ztvf 1.tar.gz &lt;span style="color:#75715e">#查看压缩包内容&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>drwxr-xr-x wyb/root &lt;span style="color:#ae81ff">0&lt;/span> 2016-04-19 07:22 aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- wyb/root &lt;span style="color:#ae81ff">0&lt;/span> 2016-04-19 05:05 aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- wyb/root &lt;span style="color:#ae81ff">0&lt;/span> 2016-04-19 05:05 aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- wyb/root &lt;span style="color:#ae81ff">84&lt;/span> 2016-04-19 05:50 aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>-rw-r--r-- wyb/root &lt;span style="color:#ae81ff">0&lt;/span> 2016-04-19 05:05 aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.tar 1.tar.bz2 1.tar.gz aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ rm -rf aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.tar 1.tar.bz2 1.tar.gz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -zxvf 1.tar.gz &lt;span style="color:#75715e">#解压到当前目录&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>1.tar 1.tar.bz2 1.tar.gz aaa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a.txt b.txt c.txt test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ ls /tmp/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>111.txt aa
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>$ tar -zxvf 1.tar.gz -C /tmp/aa &lt;span style="color:#75715e">#解压到指定路径&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/b.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/c.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/test.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>aaa/a.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>zip&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># zip用法示例
[reber@localhost ~]$ ls aaa/
a.txt b.txt c.txt
[reber@localhost ~]$ zip -re aaa.zip aaa/ #加密压缩
Enter password: 
Verify password: 
 adding: aaa/ (stored 0%)
 adding: aaa/b.txt (stored 0%)
 adding: aaa/c.txt (stored 0%)
 adding: aaa/a.txt (stored 0%)
[reber@localhost ~]$ rm aaa/*
[reber@localhost ~]$ ls aaa/
[reber@localhost ~]$ unzip aaa.zip #解压缩
Archive: aaa.zip
[aaa.zip] aaa/b.txt password: 
 extracting: aaa/b.txt 
 extracting: aaa/c.txt 
 extracting: aaa/a.txt
&lt;/code>&lt;/pre></description></item><item><title>Linux 之服务和计划任务</title><link>https://wyb0.com/posts/2016/linux-service-and-planning-tasks/</link><pubDate>Tue, 19 Apr 2016 10:03:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-service-and-planning-tasks/</guid><description>&lt;h3 id="0x00-服务">0x00 服务：&lt;/h3>
&lt;p>在后台运行的软件就叫服务，参数一般为：start/stop/restart&lt;/p>
&lt;ul>
&lt;li>apache启动后默认降权&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>service httpd start实际调用的是/etc/init.d/httpd这个shell脚本
而/etc/init.d是软连接文件夹，实际在/etc/rc.d/init.d
[wyb@localhost ~]$ ls -al /etc/init.d
lrwxrwxrwx. 1 root root 11 Apr 11 02:54 /etc/init.d -&amp;gt; rc.d/init.d
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>
&lt;p>添加服务&lt;br>
将脚本放在/etc/init.d/下即可&lt;/p></description></item><item><title>Linux 之用户和用户组</title><link>https://wyb0.com/posts/2016/linux-user/</link><pubDate>Sun, 17 Apr 2016 20:48:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-user/</guid><description>&lt;h3 id="0x01-新建用户">0x01 新建用户&lt;/h3>
&lt;p>环境：Ubuntu 14.04.4&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Step1：添加新用户&lt;br>
useradd -r -m -s /bin/bash 用户名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Step2:配置新用户密码&lt;br>
passwd 用户名&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Step3：给新添加的用户增加root权限&lt;br>
visudo&lt;br>
然后添加：&lt;br>
用户名 ALL=(ALL:ALL) ALL&lt;/p></description></item><item><title>Linux 之权限</title><link>https://wyb0.com/posts/2016/linux-permission-settings/</link><pubDate>Sun, 17 Apr 2016 10:03:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-permission-settings/</guid><description>&lt;p>主要有三种参数：rwx
对于文件来说：分别是读/写/执行&lt;br>
对于目录来说：r读目录结构；w操作目录结构；x进入目录&lt;br>
如：drwxr&amp;ndash;r&amp;ndash; 3 root root 4096 Jun 25 08:35 .ssh&lt;br>
若账号vbird不属于root群组，则vbird可以查询此目录下的文件名，没有x权限所以不能切换到此目录中&lt;/p></description></item><item><title>Linux 之 vim</title><link>https://wyb0.com/posts/2016/linux-vim/</link><pubDate>Fri, 15 Apr 2016 21:03:07 +0000</pubDate><guid>https://wyb0.com/posts/2016/linux-vim/</guid><description>&lt;h3 id="0x00-vim的安装及配置">0x00 Vim的安装及配置：&lt;/h3>
&lt;ul>
&lt;li>安装vim&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>yum install vim
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>配置文件的位置&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>在目录 /etc/ 下面，有个名为vimrc的 文件，
这是系统中公共的vim配置文件，对所有用户都有效。
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>设置语法高亮显示&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1) 打开vimrc，添加以下语句来使得语法高亮显示：
 syntax on
2) 如果此时语法还是没有高亮显示，那么在/etc目录下的profile文件中添加以下语句：
 export TERM=xterm-color
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>设置Windows风格的C/C++自动缩进（添加以下set语句到vimrc中）&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>1）设置Tab为4个空格
 set tabstop=4 #设定tab长度为4
 set softtabstop=4 #使按退格键时可以一次删除4个空格
 set shiftwidth=4 #表示每一级缩进的长度，一般设置成跟softtabstop一样
 set expandtab/noexpandtab #缩进用空格/制表符表示
2）自动缩进
 set autoindent/noautoindent #设置每行的缩进值与上一行相等/不相等(我未启用)
3）使用 C/C++ 语言的自动缩进方式
 set cindent
4）在左侧显示文本的行号
 set nu
5）搜索设置
 set incsearch #输入搜索内容时就显示搜索结果
 set hlsearch #搜索时高亮显示被找到的文本
6）如果没有下列语句，就加上吧
 if &amp;amp;term==&amp;#34;xterm&amp;#34;
 set t_Co=8
 set t_Sb=^[[4%dm
 set t_Sf=^[[3%dm
 endif
&lt;/code>&lt;/pre>&lt;h3 id="0x01-vim编辑器的三种模式">0x01 Vim编辑器的三种模式&lt;/h3>
&lt;ul>
&lt;li>命令行模式&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>$vim 文件名 #直接进入命令行模式
Ctrl+ZZ#可保存文件

5dd/4yy#剪切5行/复制4行
p #粘贴到当前行后面
u #一直点的话会一直撤销，直到回复到文件最初状态

gg/G #光标移动到首行/末行
H/M/L #光标移动到屏幕显示的首行/中间/末行
0/$ #光标移动到行首/行尾
w/b #光标跳到下一个/上一个单词

o #在下一行插入
Ctrl+g #显示文本的信息

dt% #删除所有内容直到遇到 %
d0/d$或D #删除从光标到行首/行尾的字符
3dw #删除3个单词

v+方向键 #可以从当前光标向各方向选择字符或行
4+向下的方向键 #光标向下移动4行

/和？#向下和向上搜索
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>末行模式&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>:wq #推出并保存
:wq! #强制退出并保存
:num #跳到第n行
:$	 #移动到最后一行
:/aaaa #向下搜aaaa这个字符串 n可以定位到下一个匹配的字符，N向上
:?aaaa #向上搜索
:%s/set/ddd/g #将字符串set全部替换为ddd
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>插入模式&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>在命令行模式直接点击i即可进入
&lt;/code>&lt;/pre></description></item></channel></rss>