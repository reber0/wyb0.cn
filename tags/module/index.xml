<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>module on Reber&#39;s Blog</title>
    <link>https://wyb0.com/tags/module/</link>
    <description>Recent content in module on Reber&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 29 Jan 2018 16:45:34 +0000</lastBuildDate>
    
	<atom:link href="https://wyb0.com/tags/module/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python 中执行系统命令</title>
      <link>https://wyb0.com/posts/2018/python-run-cmd/</link>
      <pubDate>Mon, 29 Jan 2018 16:45:34 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2018/python-run-cmd/</guid>
      <description>0x00 使用模块 在python执行系统命令一般可以通过3个模块来实现，这三个模块是：os、commands、subproces</description>
    </item>
    
    <item>
      <title>MRQ 的使用</title>
      <link>https://wyb0.com/posts/2017/python-module-mrq/</link>
      <pubDate>Mon, 10 Jul 2017 16:30:43 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2017/python-module-mrq/</guid>
      <description>0x00 MRQ MRQ是Python基于Redis、Mongo和gevent的分布式任务队列。 MRQ一方面旨在像RQ一样简单，另一方</description>
    </item>
    
    <item>
      <title>Python 的模块</title>
      <link>https://wyb0.com/posts/2016/python-module/</link>
      <pubDate>Wed, 31 Aug 2016 11:22:41 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-module/</guid>
      <description>0x00 Python的模块 在python中，任何一个python文件都可以看作一个模块 不同包下有相同模块名并不会冲突，且包下必</description>
    </item>
    
    <item>
      <title>Python 命令行参数解析</title>
      <link>https://wyb0.com/posts/2016/python-parames-parse/</link>
      <pubDate>Tue, 16 Aug 2016 15:10:44 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-parames-parse/</guid>
      <description>0x00 argparse 模块 参考 https://docs.python.org/zh-cn/3.7/library/argparse.html #!/usr/bin/env python # -*- coding: utf-8 -*- import argparse class Parser(object): &amp;quot;&amp;quot;&amp;quot;Parser&amp;quot;&amp;quot;&amp;quot; def __init__(self): super(Parser, self).__init__() self.service_type_list = [ &amp;quot;ssh&amp;quot;,&amp;quot;telnet&amp;quot;,&amp;quot;ftp&amp;quot;, &amp;quot;mysql&amp;quot;,&amp;quot;mssql&amp;quot;,&amp;quot;oracle&amp;quot;,&amp;quot;pgsql&amp;quot;,&amp;quot;redis&amp;quot; ] self.log_level = [&amp;quot;debug&amp;quot;, &amp;quot;info&amp;quot;, &amp;quot;warning&amp;quot;, &amp;quot;error&amp;quot;, &amp;quot;critical&amp;quot;] self.example = &amp;quot;&amp;quot;&amp;quot;Example: \r python3 {} -s ssh -i 123.123.123.123 \r python3 {} -s ssh -i 123.123.123.123/24 -l root -p 123456&amp;quot;&amp;quot;&amp;quot; def parser(self): parser</description>
    </item>
    
    <item>
      <title>Python 的 scapy 模块简单使用</title>
      <link>https://wyb0.com/posts/2016/python-module-scapy/</link>
      <pubDate>Thu, 11 Aug 2016 23:26:39 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-module-scapy/</guid>
      <description>0x00 简单尝试 0x01 生成一组数据包 0x02 发送数据包 send发送数据包 sr1发送数据包 sr发送数据包 0x03 发送SYN数据包 0x04 得到TCP内容</description>
    </item>
    
    <item>
      <title>Python 的 paramiko 模块</title>
      <link>https://wyb0.com/posts/2016/python-module-paramiko/</link>
      <pubDate>Thu, 14 Jul 2016 15:24:11 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-module-paramiko/</guid>
      <description>0x00 安装 直接pip install paramiko安装 或者去http://www.paramiko.org/ 下载 0x01 执行一条远程命令 #!/usr/bin/env python #-*-</description>
    </item>
    
    <item>
      <title>Python 的 cmd 模块</title>
      <link>https://wyb0.com/posts/2016/python-module-cmd/</link>
      <pubDate>Thu, 14 Jul 2016 09:44:06 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/python-module-cmd/</guid>
      <description>0x00 关于cmd模块 使用cmd模块创建的命令行解释器可以循环读取输入的所有行并且解析它们 0x01 cmd模块的一些常用方法： cmdl</description>
    </item>
    
  </channel>
</rss>