<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>文件上传 on Reber&#39;s Blog</title>
    <link>https://wyb0.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</link>
    <description>Recent content in 文件上传 on Reber&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 Jul 2016 17:04:44 +0000</lastBuildDate><atom:link href="https://wyb0.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>文件上传漏洞常见绕过手法</title>
      <link>https://wyb0.com/posts/2016/file-upload-simple-to-bypass/</link>
      <pubDate>Wed, 20 Jul 2016 17:04:44 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/file-upload-simple-to-bypass/</guid>
      <description>0x00 一般防止上传漏洞手法 1、客户端检测：客户端使用JavaScript检测，在文件未上传时，就对文件进行验证 //任何客户端</description>
    </item>
    
    <item>
      <title>文件上传漏洞与文件解析漏洞</title>
      <link>https://wyb0.com/posts/2016/file-upload-and-file-parse-vuln/</link>
      <pubDate>Wed, 20 Jul 2016 11:30:53 +0000</pubDate>
      
      <guid>https://wyb0.com/posts/2016/file-upload-and-file-parse-vuln/</guid>
      <description>0x00 文件上传漏洞 当文件上传时，若服务端脚本语言未对上传的文件进行严格验证和过滤，若恶意用户上传恶意的 脚本文件时，就有可能控</description>
    </item>
    
  </channel>
</rss>
