<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Server on </title>
    <link>https://wyb0.com/topics/server/</link>
    <description>Recent content in Server on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Oct 2017 13:58:29 +0800</lastBuildDate>
    
	<atom:link href="https://wyb0.com/topics/server/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>中间件安全配置</title>
      <link>https://wyb0.com/posts/2017/middleware-security-configuration/</link>
      <pubDate>Sat, 28 Oct 2017 13:58:29 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2017/middleware-security-configuration/</guid>
      <description>0x00 Apache  服务器安全配置  #查看服务器运行权限 $ ps aux|grep apache|grep -v grep $ sudo lsof -i:80 COMMAND PID USER FD TYPE DEVICE SIZE/OFF NODE NAME apache2 1377 root 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 21121 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 21122 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 21123 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 21124 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 21125 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 24800 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN) apache2 127488 www-data 4u IPv6 12596 0t0 TCP *:http (LISTEN) 第一行是Apache主进程，以root权限运行的，因为Apache的Web端口是80或443，而在Ubuntu(Linux)中开启小于1024的端口需要root权限，所以主进程必须以root权限运行。 第二行起为Apache子进程，其执行用户为www-data，www-data是Ubuntu中运行Web服务的默认用户，权限较低。 Windows中Apache安装完成后默认是administrator权限，所以需要降权，创建一个用户Apache，用户组为Guests，然后将Apache目录下的日志的可写权限赋给Guests账户。  #目录及文件权限 修改配置文件，vim /etc/apache2/apache2.</description>
    </item>
    
    <item>
      <title>Linux下虚拟主机搭建多站点</title>
      <link>https://wyb0.com/posts/2016/linux-virtual-host-build-multi-site/</link>
      <pubDate>Fri, 12 Aug 2016 08:39:35 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-virtual-host-build-multi-site/</guid>
      <description>环境：CentOS-6.5-x86_64-minimal
0x00 搭建LAMP  安装Apache
yum install httpd  安装MySQL
 yum install mysql mysql-server 设置数据库
[reber@localhost conf]$ sudo mysql_secure_installation # 更新root密码： [reber@localhost conf]$ mysql -uroot –p mysql&amp;gt; use mysql; mysql&amp;gt; update user set password=password(&#39;123456&#39;) where user=&#39;root&#39;; mysql&amp;gt; flush privileges; //不想重启mysql就使新密码生效就需要运行此命令刷新 mysql&amp;gt; insert into mysql.user(Host,User,Password) values(&amp;quot;localhost&amp;quot;,&amp;quot;blog&amp;quot;,password(&amp;quot;123456&amp;quot;)); # mysql&amp;gt; detele form mysql.user where User=&#39;blog&#39; and Host=&#39;localhost&#39;; //这步可以删除用户 mysql&amp;gt; flush privileges; //刷新 mysql&amp;gt; create database db_blog; Query OK, 1 row affected (0.</description>
    </item>
    
    <item>
      <title>Redis的简单使用</title>
      <link>https://wyb0.com/posts/2016/redis-bisis-use/</link>
      <pubDate>Wed, 03 Aug 2016 11:02:20 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2016/redis-bisis-use/</guid>
      <description>0x00 关于Redis Redis和MySQL这种关系型数据库不一样，它是非关系型数据库，是日志型、Key-Value数据库， 实现了master-slave(主从)同步,数据都是缓存在内存中的,所以可高速读写,但存储成本较高, 不适合做海量数据存储。  0x01 安装  Linux下安装Redis 可在http://download.redis.io/releases/ 下载
$ cd /opt $ wget http://download.redis.io/releases/redis-3.2.3.tar.gz $ tar -zxvf redis-3.2.3.tar.gz $ cd redis-3.2.3 $ make $ make install  Windows下安装Redis 下载：点此下载
  安装后添加环境变量
添加为系统服务： redis-server.exe --service-install redis.windows.conf --loglevel verbose 启动服务： redis-server.exe --service-start 关闭服务： redis-server.exe --service-stop 为Redis添加密码： 打开安装目录下的文件redis.windows-service.conf， 找到requirepass，配置为requirepass mypassword，然后重启redis 此时仍然可以连接上，但是执行命令时会提示没权限 带密码连接Redis： redis-cli.exe -h 127.0.0.1 -p 6379 -a mypassword  0x02 产生的可执行文件 redis-server：redis服务器启动程序 redis-cli：redis命令行工具，也可为客户端 redis-stat：redis状态检测工具 redis-benchmark：redis性能检测工具(读写)  0x03 配置文件 $ vim /opt/redis-3.</description>
    </item>
    
    <item>
      <title>Windows2003下搭建VPN</title>
      <link>https://wyb0.com/posts/2016/windows2003-set-up-vpn/</link>
      <pubDate>Thu, 07 Jul 2016 10:39:50 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2016/windows2003-set-up-vpn/</guid>
      <description> 0x00 环境及要求 Windows2003下搭建基于PPTP(点对点隧道协议)的VPN服务器
0x01 安装服务 0x02 配置并启用路由和远程访问 0x03 新增路由协议 0x04 新增接口 0x05 新增VPN用户 0x06 尝试连接VPN </description>
    </item>
    
    <item>
      <title>Windows2003下搭建IIS&#43;asp</title>
      <link>https://wyb0.com/posts/2016/windows2003-set-up-iis-asp/</link>
      <pubDate>Sat, 18 Jun 2016 20:39:50 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2016/windows2003-set-up-iis-asp/</guid>
      <description> 0x00 添加组件 0x01 开启iis 0x02 添加Web服务扩展 0x03 运行asp 0x04 权限 </description>
    </item>
    
    <item>
      <title>Linux下搭建FTP</title>
      <link>https://wyb0.com/posts/2016/linux-set-up-ftp/</link>
      <pubDate>Sat, 18 Jun 2016 09:40:06 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-set-up-ftp/</guid>
      <description>安装环境为：CentOS-6.5-x86_64-minimal
0x00 安装 yum install vsftpd
0x01 配置  备份
cp /etc/vsftpd/vsftpd.conf /etc/vsftpd/vsftpd.conf.bak
 编辑配置文件
vim /etc/vsftpd/vsftpd.conf anonymous_enable=NO #设定不允许匿名访问 local_enable=YES #设定本地用户可以访问 chroot_list_enable=YES #使用户不能离开主目录 xferlog_file=/var/log/vsftpd.log #设定vsftpd的服务日志 ascii_upload_enable=YES ascii_download_enable=YES #设定支持ASCII pam_service_name=vsftpd #PAM认证文件名,PAM将根据/etc/pam.d/vsftpd进行认证 # 并在尾部追加： guest_enable=YES #设定启用虚拟用户功能。 guest_username=ftp #指定虚拟用户的宿主用户。-CentOS中已经有内置的ftp用户了 guest_config_dir=/etc/vsftpd/vuser_conf #设定虚拟用户个人vsftp的配置文件存放路径。存放虚拟用户个性化的配置文件名，和虚拟用户名相同  新增chroot_list并将ftp用户输入进去
touch /etc/vsftpd/chroot_list
echo ftp &amp;gt;&amp;gt; /etc/vsftpd/chroot_list
 安装Berkeley DB工具用来对虚拟用户认证配置管理：
yum install db4 db4-utils
 创建用户账户文件
vim /etc/vsftpd/vuser_passwd.txt user1 #奇数行是用户名 123456 #偶数行是密码 user2 #奇数行是用户名 666666 #偶数行是密码 user3 #奇数行是用户名 user3 #偶数行是密码  用Berkeley DB工具生成认证文件</description>
    </item>
    
    <item>
      <title>Linux下搭建Tomcat&#43;MySQL&#43;JSP</title>
      <link>https://wyb0.com/posts/2016/linux-set-up-tomcat-mysql-jsp/</link>
      <pubDate>Fri, 17 Jun 2016 23:08:05 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-set-up-tomcat-mysql-jsp/</guid>
      <description>安装环境为：CentOS-6.5-x86_64-minimal
0x00 安装mysql $ sudo yum install mysql mysql-server mysql-devel
0x01 安装jdk和tomcat  创建安装jdk和tomcat的文件夹  下载安装包并解压安装
  jdk包可在这里下载
tomcat包可在这里下载
为java添加环境变量并设置命令链接符
$ tail -n 3 /etc/profile export JAVA_HOME=&amp;quot;/opt/jdk1.8.0_91&amp;quot; export CLASSPATH=.:$JAVA_HOME/lib export PATH=$JAVA_HOME/bin:$PATH $ sudo update-alternatives --install /usr/bin/java java /opt/jdk1.8.0_91/bin/java 1 $ sudo update-alternatives --install /usr/bin/javac javac /opt/jdk1.8.0_91/bin/javac 1 $ sudo update-alternatives --set java /opt/jdk1.8.0_91/bin/java $ sudo update-alternatives --set javac /opt/jdk1.8.0_91/bin/javac  0x02 简单配置tomcat 0x03 启动tomcat 0x04 连接数据库 驱动可在这里下载 $ vim /opt/tomcat/apache-tomcat-8.</description>
    </item>
    
    <item>
      <title>Linux下搭建Nginx&#43;MySQL&#43;PHP</title>
      <link>https://wyb0.com/posts/2016/linux-set-up-nginx-mysql-php/</link>
      <pubDate>Fri, 17 Jun 2016 22:41:50 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2016/linux-set-up-nginx-mysql-php/</guid>
      <description>安装环境为：CentOS-6.5-x86_64-minimal
0x00 准备工作 首先执行： sudo yum groupinstall &amp;quot;Development tools&amp;quot; 安装make： yum -y install gcc automake autoconf libtool make 安装g++： yum install gcc gcc-c++  0x01 安装mysql和php sudo yum install mysql mysql-server mysql-devel sudo yum install php php-devel sudo yum install php-gd php-mysql php-fpm  0x02 安装依赖  安装pcre、pcre-devel
sudo yum install pcre pcre-devel
 安装zlib、zlib-devel
sudo yum install zlib zlib-devel
 安装ssl
sudo yum install openssl openssl-devel
  0x03 安装Nginx 可在http://nginx.</description>
    </item>
    
    <item>
      <title>Ubuntu 搭建 LAMP</title>
      <link>https://wyb0.com/posts/2016/ubuntu-build-lamp/</link>
      <pubDate>Sat, 07 May 2016 21:37:07 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2016/ubuntu-build-lamp/</guid>
      <description>0x00 环境 我是在虚拟机中安装14.04.4版的Ubuntu 下载Ubuntu14.04.4
0x01 配源或选择最快的更新服务器  选择最快的更新服务器:
System Settings &amp;ndash;&amp;gt; Software &amp;amp; Updates &amp;ndash;&amp;gt; Download from:other &amp;ndash;&amp;gt; Select Best Server &amp;ndash;&amp;gt; Choose Serve &amp;ndash;&amp;gt; Close
 配源:
reber@ubuntu:~$ cp /etc/apt/sources.list /etc/apt/sources.list.bak
reber@ubuntu:~$ vim /etc/apt/sources.list
  中科大源： deb http://debian.ustc.edu.cn/ubuntu/ trusty main restricted universe multiverse deb http://debian.ustc.edu.cn/ubuntu/ trusty-security main restricted universe multiverse deb http://debian.ustc.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse deb http://debian.ustc.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse deb http://debian.ustc.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse deb-src http://debian.</description>
    </item>
    
    <item>
      <title>搭建DNS服务器</title>
      <link>https://wyb0.com/posts/2015/set-up-dns-server/</link>
      <pubDate>Tue, 14 Jul 2015 14:15:13 +0800</pubDate>
      
      <guid>https://wyb0.com/posts/2015/set-up-dns-server/</guid>
      <description> 环境：虚拟机rhel-server-6.2
0x00 搭建流程  安装DNS服务器 配置DNS主配置文件 配置DNS正反向解析区域数据文件 启动DNS服务器进行测试  0x01 安装DNS服务  挂载光盘
用mount -o,loop /dev/cdrom /mnt/cdrom命令挂载光盘
 配置yum源，安装BIND(用命令yum install bind*安装) 安装结果如下：  进行配置
vim /etc/named.conf,添加必要的信息 在named.conf的包含文件named.rfc1921.zones中定义区域  配置正反向解析文件
分别配置wyb.cn.hosts和wyb.cn.rev   0x02 验证 用service named start命令启动DNS
用nslookup命令进行验证，先查看当前采用那台DNS解析，测试反向资源记录以及正反向解析 </description>
    </item>
    
  </channel>
</rss>